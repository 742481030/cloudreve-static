{"version":3,"sources":["component/Admin/Dashboard.js","component/Admin/Index.js","component/Admin/Setting/SiteInformation.js","component/Admin/Dialogs/Alert.js","component/Admin/Setting/Access.js","component/Admin/Setting/Mail.js","component/Admin/Common/SizeInput.js","component/Admin/Setting/UploadDownload.js","component/Admin/Dialogs/AddPack.js","component/Admin/Dialogs/AddGroupk.js","component/Admin/Dialogs/AddRedeem.js","component/Admin/Setting/VAS.js","component/Admin/Dialogs/CreateTheme.js","component/Admin/Setting/Theme.js","component/Admin/Setting/Aria2.js","component/Admin/Setting/Image.js","component/Admin/Dialogs/AddPolicy.js","component/Admin/Policy/Policy.js","component/Admin/Dialogs/MagicVar.js","component/Admin/Common/DomainInput.js","component/Admin/Policy/Guid/LocalGuide.js","component/Admin/Policy/Guid/RemoteGuide.js","component/Admin/Policy/Guid/QiniuGuide.js","component/Admin/Policy/Guid/OSSGuide.js","component/Admin/Policy/Guid/UpyunGuide.js","component/Admin/Policy/Guid/COSGuide.js","component/Admin/Policy/Guid/OneDriveGuide.js","component/Admin/Policy/AddPolicy.js","component/Admin/Policy/Guid/EditPro.js","component/Admin/Policy/EditPolicy.js","component/Admin/Group/Group.js","component/Admin/Group/GroupForm.js","component/Admin/Group/EditGroup.js","component/Admin/Dialogs/UserFilter.js","component/Admin/User/User.js","component/Admin/User/UserForm.js","component/Admin/User/EditUser.js","component/Admin/Dialogs/FileFilter.js","component/Admin/File/File.js","component/Admin/Dialogs/ShareFilter.js","component/Admin/Share/Share.js","component/Admin/Order/Order.js","component/Admin/Task/Download.js","component/Admin/Task/Task.js","component/Admin/File/Import.js","component/Admin/Report/ReportList.js","Admin.js"],"names":["ExpansionPanel","withStyles","root","maxWidth","boxShadow","borderBottom","display","margin","expanded","MuiExpansionPanel","ExpansionPanelSummary","minHeight","padding","content","MuiExpansionPanelSummary","ExpansionPanelDetails","theme","spacing","MuiExpansionPanelDetails","useStyles","makeStyles","width","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","title","flexGrow","toolbar","alignItems","justifyContent","mixins","sub","paddingLeft","color","palette","text","secondary","subMenu","backgroundColor","background","default","paddingTop","paddingBottom","active","lighten","primary","main","activeText","fontWeight","activeIcon","items","icon","Home","path","Settings","Language","Contacts","Mail","SettingsEthernet","AttachMoney","Palette","CloudDownload","Image","Storage","Group","Person","InsertDriveFile","Share","Report","ShoppingCart","Assignment","ListAlt","Dashboard","classes","useTheme","useState","pathHelper","isMobile","open","setOpen","menuOpen","setMenuOpen","history","useHistory","location","useLocation","dispatch","useDispatch","SetSubTitle","useCallback","changeSubTitle","useEffect","useRouteMatch","className","AppBar","position","clsx","Toolbar","IconButton","aria-label","onClick","edge","Typography","variant","noWrap","UserAvatar","Drawer","paper","direction","Divider","List","noPadding","map","item","undefined","ListItem","push","button","pathname","startsWith","key","ListItemIcon","ListItemText","square","onChange","event","isExpanded","aria-controls","id","height","logo","logoContainer","cloudreve","fontSize","version","hint","links","iconRight","minWidth","userIcon","blue","fileIcon","yellow","publicIcon","green","secretIcon","red","Index","lineData","setLineData","news","setNews","newsUsers","setNewsUsers","React","siteURL","setSiteURL","fileTotal","userTotal","publicShareTotal","secretShareTotal","statistics","setStatistics","backend","setVersion","ToggleSnackbar","vertical","horizontal","msg","toggleSnackbar","API","get","then","response","data","date","forEach","v","k","name","file","files","user","users","share","shares","window","origin","catch","error","message","axios","res","included","type","attributes","Grid","container","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","patch","options","value","alignContent","xs","md","lg","Paper","gutterBottom","aspect","strokeDasharray","dataKey","stroke","ListItemAvatar","Avatar","People","FileCopy","Public","Lock","src","is_pro","Chip","size","label","component","Launch","GitHub","Description","Forum","Telegram","style","Favorite","alt","relationships","startUser","avatarUrl","Fragment","inline","username","datetime","startTime","locale","form","marginTop","marginBottom","formContainer","SiteInformation","loading","setLoading","siteName","siteTitle","siteDes","siteICPId","siteScript","pwa_small_icon","pwa_medium_icon","pwa_large_icon","pwa_display","pwa_theme_color","pwa_background_color","setOptions","handleChange","target","post","keys","Object","onSubmit","e","preventDefault","option","FormControl","fullWidth","InputLabel","htmlFor","Input","required","FormHelperText","multiline","Select","MenuItem","disabled","AlertDialog","Access","register_enabled","default_group","email_active","login_captcha","reg_captcha","forget_captcha","qq_login","qq_direct_login","qq_login_id","qq_login_key","authn_enabled","captcha_IsUseReCaptcha","captcha_ReCaptchaKey","captcha_ReCaptchaSecret","groups","setGroups","httpAlert","setHttpAlert","checked","handleInputChange","FormControlLabel","control","Switch","Link","href","ID","toString","Name","Alert","severity","endsWith","buttonMargin","test","setTest","tesInput","setTestInput","fromName","fromAdress","smtpHost","smtpPort","replyTo","smtpUser","smtpPass","smtpEncryption","mail_keepalive","over_used_template","mail_activation_template","mail_reset_pwd_template","TextField","autoFocus","to","inputProps","min","step","rowsMax","SizeInput","max","suffix","unit","setUnit","first","transform","Math","round","endAdornment","InputAdornment","labelId","UploadDownload","max_worker_num","max_parallel_transfer","temp_path","maxEditSize","onedrive_chunk_retries","archive_timeout","download_timeout","preview_timeout","doc_preview_timeout","upload_credential_timeout","upload_session_timeout","slave_api_timeout","onedrive_monitor_timeout","share_download_session_timeout","onedrive_callback_check","reset_after_upload_failed","onedrive_source_timeout","AddPack","time","price","score","pack","setPack","packCopy","parseInt","Date","valueOf","AddGroup","group_id","des","highlight","group","setGroup","length","scroll","groupCopy","split","AddRedeem","products","onSuccess","num","input","setInput","i","data-type","tabForm","tableContainer","navigator","product","VAS","tab","setTab","alipay_enabled","payjs_enabled","payjs_id","appid","appkey","shopid","payjs_secret","score_enabled","share_score_rate","score_price","ban_time","group_sell_data","pack_data","packs","setPacks","addPack","setAddPack","addGroup","setAddGroup","addRedeem","setAddRedeem","redeems","setRedeems","redeemsRes","setRedeemsRes","redeemsResOpen","setRedeemsResOpen","page","setPage","pageSize","total","setTotal","loadRedeemList","page_size","order_by","JSON","parse","handleCheckChange","updatePackOption","Tabs","indicatorColor","textColor","scrollButtons","Tab","updateOption","Table","TableHead","TableRow","TableCell","TableBody","row","scope","ceil","sizeToString","newPacks","filter","newPackData","stringify","deletePack","Delete","newGroups","deleteGroup","ProductID","Num","Code","Used","Box","delete","Pagination","count","newGroup","newGroupData","codes","picker","statusBar","fab","textAlign","CreateTheme","contrastText","setTheme","subTheme","createMuiTheme","colors","onChangeComplete","c","hex","ThemeProvider","dark","Fab","Add","colorContainer","colorDot","borderRadius","Theme","themes","defaultTheme","home_view_method","share_view_method","themeConfig","setThemeConfig","themeConfigError","setThemeConfigError","setCreate","themeString","helperText","onBlur","themeCopy","resStr","deleteTheme","newTheme","Aria2","aria2_rpcurl","aria2_token","aria2_temp_path","aria2_options","aria2_interval","aria2_call_timeout","server","token","ImageSetting","gravatar_server","avatar_path","avatar_size","avatar_size_l","avatar_size_m","avatar_size_s","thumb_width","thumb_height","captcha_height","captcha_width","captcha_mode","captcha_CaptchaLen","cardContainer","cover","card","flex","bg","policies","img","AddPolicy","dividers","index","sm","Card","CardActionArea","CardMedia","image","CardContent","header","headerRight","columns","align","Policy","setPolicies","statics","setStatics","setPageSize","addDialog","setAddDialog","setFilter","anchorEl","setAnchorEl","editID","setEditID","query","URLSearchParams","search","handleClose","loadList","conditions","Boolean","TableContainer","column","hover","policyTypeMap","Type","toLocaleString","Tooltip","currentTarget","Edit","TablePagination","rowsPerPageOptions","rowsPerPage","onChangePage","p","onChangeRowsPerPage","keepMounted","MagicVar","isFile","isSlave","DomainInput","domain","setDomain","protocol","setProtocol","setError","replace","startAdornment","stepContent","subStepContainer","stepNumber","light","stepNumberContainer","stepFooter","steps","optional","LocalGuide","props","activeStep","setActiveStep","Set","skipped","magicVar","setMagicVar","useCDN","setUseCDN","policy","DirNameRule","AutoRename","FileNameRule","IsOriginLinkEnable","BaseURL","IsPrivate","MaxSize","OptionsSerialized","file_type","setPolicy","Stepper","stepProps","labelProps","has","completed","Step","StepLabel","subStepContent","RadioGroup","Radio","Collapse","in","policyCopy","fontFamily","overflow","RemoteGuide","Server","SecretKey","randomStr","minlength","secret","AccessKey","mimetype","handleOptionChange","BucketName","getNumber","viewButtonLabel","textTransform","OSSGuide","setSkipped","policyID","setPolicyID","submitPolicy","pattern","prevActiveStep","prevSkipped","newSkipped","values","add","UpyunGuide","COSGuide","region","setRegion","OneDriveGuide","od_redirect","httpsAlert","setHttpsAlert","URL","AddPolicyParent","useParams","EditPro","EditPolicyPreload","setType","mode","join","PolicyList","pid","MaxStorage","getStyles","personName","indexOf","typography","fontWeightRegular","fontWeightMedium","GroupForm","ShareEnabled","WebDAVEnabled","SpeedLimit","share_download","compress_size","decompress_size","handleOptionCheckChange","multiple","renderValue","selected","chips","chip","share_free","one_time_download","aria2","archive_download","archive_task","EditGroupPreload","UserFilter","setSearch","status","keywords","setKeywords","nick","email","visuallyHidden","border","clip","top","setUsers","orderBy","setOrderBy","filterDialog","setFilterDialog","setSelected","searches","isSelected","alignSelf","Badge","invisible","FilterList","Checkbox","indeterminate","newSelecteds","n","TableSortLabel","role","selectedIndex","newSelected","concat","slice","handleClick","Nick","Email","Status","success","Block","UserForm","Password","GroupID","Score","setUser","userCopy","password","EditUserPreload","FileFilter","policy_id","user_id","File","setFiles","deleteBatch","force","DeleteForever","Size","UserID","CreatedAt","toLocaleDateString","toLocaleTimeString","ShareFilter","is_dir","source_name","setShares","ids","setIds","wordBreak","SourceName","Views","Downloads","RemainDownloads","Order","orders","setOrders","OrderNo","Method","Price","toFixed","Download","downloads","setDownloads","Source","TotalSize","Task","tasks","setTasks","getTaskType","getTaskStatus","getTaskProgress","Progress","getError","Error","userSelect","Import","userInput","dst","recursive","selectRemote","setSelectRemote","selectLocal","setSelectLocal","debouncedSearchTerm","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","setMoveTarget","setter","folder","openPathSelector","isSrcSelect","PathSelector","presentPath","api","onSelect","uid","onDelete","Popper","placement","TransitionProps","Fade","timeout","u","selectUser","ReportList","reports","setReports","IsDir","reportReasons","Reason","zhCN","Admin","show","setShow","Auth","GetUser","CssBaseline","exact"],"mappings":"2oBAsCMA,GAAiBC,YAAW,CAC9BC,KAAM,CACFC,SAAU,OACVC,UAAW,OACX,qBAAsB,CAClBC,aAAc,GAElB,WAAY,CACRC,QAAS,QAEb,aAAc,CAAEC,OAAQ,IAE5BC,SAAU,IAZSP,CAapBQ,KAEGC,GAAwBT,YAAW,CACrCC,KAAM,CACFS,UAAW,EACXC,QAAS,EAET,aAAc,CACVD,UAAW,IAGnBE,QAAS,CACLV,SAAU,OACVI,OAAQ,EACRD,QAAS,QACT,aAAc,CACVC,OAAQ,MAGhBC,SAAU,IAjBgBP,CAkB3Ba,KAEGC,GAAwBd,aAAW,SAAAe,GAAK,MAAK,CAC/Cd,KAAM,CACFI,QAAS,QACTM,QAASI,EAAMC,QAAQ,OAHDhB,CAK1BiB,KAIEC,GAAYC,aAAW,SAAAJ,GAAK,MAAK,CACnCd,KAAM,CACFI,QAAS,OACTe,MAAO,QAEXC,OAAQ,CACJC,OAAQP,EAAMO,OAAOC,OAAS,EAC9BC,WAAYT,EAAMU,YAAYC,OAAO,CAAC,QAAS,UAAW,CACtDC,OAAQZ,EAAMU,YAAYE,OAAOC,MACjCC,SAAUd,EAAMU,YAAYI,SAASC,iBAG7CC,YAAa,CACTC,WAfY,IAgBZZ,MAAM,eAAD,OAhBO,IAgBP,OACLI,WAAYT,EAAMU,YAAYC,OAAO,CAAC,QAAS,UAAW,CACtDC,OAAQZ,EAAMU,YAAYE,OAAOC,MACjCC,SAAUd,EAAMU,YAAYI,SAASI,kBAG7CC,WAAY,CACRC,YAAa,IAEjBC,KAAM,CACF/B,QAAS,QAEbkB,OAAQ,CACJH,MA7BY,IA8BZiB,WAAY,EACZC,WAAY,UAEhBC,WAAY,CACRnB,MAlCY,IAmCZI,WAAYT,EAAMU,YAAYC,OAAO,QAAS,CAC1CC,OAAQZ,EAAMU,YAAYE,OAAOC,MACjCC,SAAUd,EAAMU,YAAYI,SAASI,kBAG7CO,YAAY,aACRhB,WAAYT,EAAMU,YAAYC,OAAO,QAAS,CAC1CC,OAAQZ,EAAMU,YAAYE,OAAOC,MACjCC,SAAUd,EAAMU,YAAYI,SAASC,gBAEzCW,UAAW,SACXrB,MAAOL,EAAMC,QAAQ,GAAK,GACzBD,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BvB,MAAOL,EAAMC,QAAQ,GAAK,IAGlC4B,MAAO,CACHC,SAAU,GAEdC,QAAQ,aACJzC,QAAS,OACT0C,WAAY,SACZC,eAAgB,WAChBrC,QAASI,EAAMC,QAAQ,EAAG,IACvBD,EAAMkC,OAAOH,SAEpBlC,QAAS,CACLiC,SAAU,EACVlC,QAASI,EAAMC,QAAQ,IAE3BkC,IAAK,CACDC,YAAa,GACbC,MAAOrC,EAAMsC,QAAQC,KAAKC,WAE9BC,QAAS,CACLC,gBAAiB1C,EAAMsC,QAAQK,WAAWC,QAC1CC,WAAW,EACXC,cAAc,GAElBC,OAAQ,CACJL,gBAAiBM,YAAQhD,EAAMsC,QAAQW,QAAQC,KAAM,IACrDb,MAAOrC,EAAMsC,QAAQW,QAAQC,KAC7B,UAAU,CACNR,gBAAiBM,YAAQhD,EAAMsC,QAAQW,QAAQC,KAAM,MAG7DC,WAAW,CACPC,WAAY,KAEhBC,WAAW,CACPhB,MAAOrC,EAAMsC,QAAQW,QAAQC,UAI/BI,GAAQ,CACV,CACIzB,MAAO,2BACP0B,KAAM,kBAACC,EAAA,EAAD,MACNC,KAAM,QAEV,CACI5B,MAAO,2BACP0B,KAAM,kBAACG,EAAA,EAAD,MACNvB,IAAK,CACD,CACIN,MAAO,2BACP4B,KAAM,QACNF,KAAM,kBAACI,EAAA,EAAD,OAEV,CACI9B,MAAO,iCACP4B,KAAM,SACNF,KAAM,kBAACK,EAAA,EAAD,OAEV,CACI/B,MAAO,eACP4B,KAAM,OACNF,KAAM,kBAACM,EAAA,EAAD,OAEV,CACIhC,MAAO,iCACP4B,KAAM,SACNF,KAAM,kBAACO,EAAA,EAAD,OAEV,CACIjC,MAAO,2BACP4B,KAAM,MACNF,KAAM,kBAACQ,EAAA,EAAD,OAEV,CACIlC,MAAO,eACP4B,KAAM,QACNF,KAAM,kBAACS,EAAA,EAAD,OAEV,CACInC,MAAO,2BACP4B,KAAM,QACNF,KAAM,kBAACU,EAAA,EAAD,OAEV,CACIpC,MAAO,2BACP4B,KAAM,QACNF,KAAM,kBAACW,EAAA,EAAD,SAIlB,CACIrC,MAAO,2BACP0B,KAAM,kBAACY,EAAA,EAAD,MACNV,KAAM,UAEV,CACI5B,MAAO,qBACP0B,KAAM,kBAACa,EAAA,EAAD,MACNX,KAAM,SAEV,CACI5B,MAAO,eACP0B,KAAM,kBAACc,EAAA,EAAD,MACNZ,KAAM,QAEV,CACI5B,MAAO,eACP0B,KAAM,kBAACe,EAAA,EAAD,MACNb,KAAM,QAEV,CACI5B,MAAO,eACP0B,KAAM,kBAACgB,EAAA,EAAD,MACNd,KAAM,SAEV,CACI5B,MAAO,eACP0B,KAAM,kBAACiB,EAAA,EAAD,MACNf,KAAM,UAEV,CACI5B,MAAO,eACP0B,KAAM,kBAACkB,EAAA,EAAD,MACNhB,KAAM,SAEV,CACI5B,MAAO,2BACP0B,KAAM,kBAACmB,EAAA,EAAD,MACNvC,IAAK,CACD,CACIN,MAAO,2BACP4B,KAAM,WACNF,KAAM,kBAACU,EAAA,EAAD,OAEV,CACIpC,MAAO,2BACP4B,KAAM,OACNF,KAAM,kBAACoB,EAAA,EAAD,UAMP,SAASC,GAAT,GAAiC,IAAD,IAAX/E,EAAW,EAAXA,QAC1BgF,EAAU1E,KACVH,EAAQ8E,cAF6B,EAGnBC,oBAAUC,KAAWC,YAHF,mBAGpCC,EAHoC,KAG9BC,EAH8B,OAIXJ,mBAAS,MAJE,mBAIpCK,EAJoC,KAI1BC,EAJ0B,KAKrCC,EAAUC,eACVC,EAAWC,eAUXC,EAAWC,eACXC,EAAcC,uBAAY,SAAAhE,GAAK,OAAI6D,EAASI,aAAejE,MAAS,CACtE6D,IAGJK,qBAAU,WACNH,EAAY,wBACb,IAEHG,qBAAU,WACN,OAAO,WACHH,OAEL,IA7BwC,IA+BnCnC,EAASuC,eAATvC,KAER,OACI,yBAAKwC,UAAWpB,EAAQ3F,MACpB,kBAACgH,EAAA,EAAD,CACIC,SAAS,QACTF,UAAWG,YAAKvB,EAAQvE,OAAT,eACVuE,EAAQ7D,YAAckE,KAG3B,kBAACmB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIjE,MAAM,UACNkE,aAAW,cACXC,QArCK,WACrBrB,GAAQ,IAqCQsB,KAAK,QACLR,UAAWG,YAAKvB,EAAQ1D,WAAT,eACV0D,EAAQxD,KAAO6D,KAGpB,kBAAC,IAAD,OAEJ,kBAACwB,EAAA,EAAD,CAAYC,QAAQ,KAAKV,UAAWpB,EAAQhD,MAAO+E,QAAM,GAAzD,gCAGA,kBAACC,EAAA,EAAD,QAGR,kBAACC,EAAA,EAAD,CACIH,QAAQ,YACRV,UAAWG,YAAKvB,EAAQrE,QAAT,mBACVqE,EAAQrD,WAAa0D,GADX,cAEVL,EAAQpD,aAAeyD,GAFb,IAIfL,QAAS,CACLkC,MAAOX,aAAI,mBACNvB,EAAQrD,WAAa0D,GADf,cAENL,EAAQpD,aAAeyD,GAFjB,MAMf,yBAAKe,UAAWpB,EAAQ9C,SACpB,kBAACuE,EAAA,EAAD,CAAYE,QA7DF,WACtBrB,GAAQ,KA6D6B,QAApBnF,EAAMgH,UACH,kBAAC,IAAD,MAEA,kBAAC,IAAD,QAIZ,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAMjB,UAAWpB,EAAQsC,WACpB7D,GAAM8D,KAAI,SAAAC,GACP,YAAkBC,IAAdD,EAAK5D,KAED,kBAAC8D,EAAA,EAAD,CACIf,QAAS,kBACLlB,EAAQkC,KAAK,UAAYH,EAAK5D,OAElCgE,QAAM,EACNxB,UAAWG,YAAK,eACXvB,EAAQ9B,OACTyC,EAASkC,SAASC,WAAW,UAAYN,EAAK5D,QAElDmE,IAAKP,EAAKxF,OAEV,kBAACgG,EAAA,EAAD,CAAe5B,UAAWG,YAAK,eAC1BvB,EAAQxB,WACLmC,EAASkC,SAASC,WAAW,UAAYN,EAAK5D,SACjD4D,EAAK9D,MACV,kBAACuE,EAAA,EAAD,CAAc7B,UAAWG,YAAK,eACzBvB,EAAQ1B,WACLqC,EAASkC,SAASC,WAAW,UAAYN,EAAK5D,QAClDR,QAASoE,EAAKxF,SAM1B,kBAAC,GAAD,CACIkG,QAAM,EACNvI,SAAU4F,IAAaiC,EAAKxF,MAC5BmG,SAAU,SAACC,EAAOC,GACd7C,EAAY6C,EAAab,EAAKxF,MAAQ,QAG1C,kBAAC,GAAD,CACIsG,gBAAc,kBACdC,GAAG,kBAEH,kBAACb,EAAA,EAAD,CAAUE,QAAM,EAACG,IAAKP,EAAKxF,OACvB,kBAACgG,EAAA,EAAD,KAAeR,EAAK9D,MACpB,kBAACuE,EAAA,EAAD,CAAc7E,QAASoE,EAAKxF,UAGpC,kBAAC,GAAD,KACI,kBAACqF,EAAA,EAAD,CAAMjB,UAAWpB,EAAQpC,SACpB4E,EAAKlF,IAAIiF,KAAI,SAAAjF,GAAG,aACb,kBAACoF,EAAA,EAAD,CACIf,QAAS,kBACLlB,EAAQkC,KACJ,UAAYrF,EAAIsB,OAGxBwC,UAAWG,aAAI,mBACVvB,EAAQ1C,IAAM+C,GADJ,cAEVL,EAAQ9B,OACLyC,EAASkC,SAASC,WAAW,UAAYxF,EAAIsB,OAHtC,IAKfgE,QAAM,EACNG,IAAKzF,EAAIN,OAET,kBAACgG,EAAA,EAAD,CAAc5B,UAAWG,YAAK,eACzBvB,EAAQxB,WACLmC,EAASkC,SAASC,WAAW,UAAYxF,EAAIsB,SAEhDtB,EAAIoB,MAET,kBAACuE,EAAA,EAAD,CACI7E,QAASd,EAAIN,oBAWrD,0BAAMoE,UAAWpB,EAAQhF,SACrB,yBAAKoG,UAAWpB,EAAQ9C,UACvBlC,EAAQ4D,K,+YCpYnBtD,GAAYC,aAAW,SAAAJ,GAAK,MAAK,CACnC+G,MAAO,CACHnH,QAASI,EAAMC,QAAQ,GACvBoI,OAAQ,QAEZC,KAAM,CACFjI,MAAO,IAEXkI,cAAe,CACX3I,QAASI,EAAMC,QAAQ,GACvBX,QAAS,QAEbuC,MAAO,CACHZ,WAAY,IAEhBuH,UAAW,CACPC,SAAU,GACVpG,MAAOrC,EAAMsC,QAAQC,KAAKC,WAE9BkG,QAAS,CACLrG,MAAOrC,EAAMsC,QAAQC,KAAKoG,MAE9BC,MAAO,CACHhJ,QAASI,EAAMC,QAAQ,IAE3B4I,UAAW,CACPC,SAAU,GAEdC,SAAU,CACNrG,gBAAiBsG,KAAK,KACtB3G,MAAO2G,KAAK,MAEhBC,SAAU,CACNvG,gBAAiBwG,KAAO,KACxB7G,MAAO6G,KAAO,MAElBC,WAAY,CACRzG,gBAAiB0G,KAAM,KACvB/G,MAAO+G,KAAM,MAEjBC,WAAY,CACR3G,gBAAiB4G,KAAI,KACrBjH,MAAOiH,KAAI,UAIJ,SAASC,KACpB,IAAM1E,EAAU1E,KADY,EAEI4E,mBAAS,IAFb,mBAErByE,EAFqB,KAEXC,EAFW,OAGJ1E,mBAAS,IAHL,mBAGrB2E,EAHqB,KAGfC,EAHe,OAIM5E,mBAAS,IAJf,mBAIrB6E,EAJqB,KAIVC,EAJU,OAKJC,IAAM/E,UAAS,GALX,mBAKrBG,EALqB,KAKfC,EALe,OAME2E,IAAM/E,SAAS,IANjB,mBAMrBgF,EANqB,KAMZC,EANY,OAOQjF,mBAAS,CACzCkF,UAAW,EACXC,UAAW,EACXC,iBAAkB,EAClBC,iBAAkB,IAXM,mBAOrBC,EAPqB,KAOTC,EAPS,OAaEvF,mBAAS,CACnCwF,QAAS,MAde,mBAarB7B,EAbqB,KAaZ8B,EAbY,KAiBtB9E,EAAWC,eACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKvI,GAA5B,OACIqD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKvI,MACvD,CAACqD,IAkEL,OA9CAK,qBAAU,WACN+E,KAAIC,IAAI,kBACHC,MAAK,SAAAC,GACF,IAAMC,EAAO,GACbD,EAASC,KAAKC,KAAKC,SAAQ,SAACC,EAAGC,GAC3BJ,EAAK1D,KAAK,CACN+D,KAAMF,EACNG,KAAMP,EAASC,KAAKO,MAAMH,GAC1BI,KAAMT,EAASC,KAAKS,MAAML,GAC1BM,MAAOX,EAASC,KAAKW,OAAOP,QAGpC7B,EAAYyB,GACZZ,EAAc,CACVL,UAAWgB,EAASC,KAAKjB,UACzBC,UAAWe,EAASC,KAAKhB,UACzBC,iBAAkBc,EAASC,KAAKf,iBAChCC,iBAAkBa,EAASC,KAAKd,mBAEpCI,EAAWS,EAASC,KAAKxC,SACzBsB,EAAWiB,EAASC,KAAKnB,SACK,KAA1BkB,EAASC,KAAKnB,SAAkBkB,EAASC,KAAKnB,UAAY+B,OAAOtG,SAASuG,QAC1E5G,GAAQ,MAGf6G,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAGtDC,KACKpB,IAAI,sBACJC,MAAK,SAAAC,GACFtB,EAAQsB,EAASC,KAAKA,MACtB,IAAMkB,EAAM,GACZnB,EAASC,KAAKmB,SAASjB,SAAQ,SAAAC,GACZ,UAAXA,EAAEiB,OACFF,EAAIf,EAAEjD,IAAMiD,EAAEkB,eAGtB1C,EAAauC,MAEhBJ,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,cAEvD,IAGC,kBAACM,GAAA,EAAD,CAAMC,WAAS,EAACxM,QAAS,GACrB,kBAACyM,GAAA,EAAD,CACIxH,KAAMA,EACNyH,QAAS,kBAAIxH,GAAQ,IACrByH,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,GAAA,EAAD,CAAa1E,GAAG,sBAAsB,2CACtC,kBAAC2E,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAmB5E,GAAG,4BAClB,kBAAC1B,EAAA,EAAD,KACiB,KAAZqD,GAAkB,yHAA2B+B,OAAOtG,SAASuG,OAAS,KAC1D,KAAZhC,GAAkB,mKAAkC+B,OAAOtG,SAASuG,OAAS,MAElF,kBAACrF,EAAA,EAAD,kRAKR,kBAACuG,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQ1G,QAAS,kBAAIrB,GAAQ,IAAQ9C,MAAM,WAA3C,gBAGA,kBAAC6K,GAAA,EAAD,CAAQ1G,QAAS,kBAtF7BrB,GAAQ,QACR2F,KAAIqC,MAAM,iBAAiB,CACvBC,QAAQ,CAAC,CACLxF,IAAI,UACJyF,MAAMvB,OAAOtG,SAASuG,WAGzBf,MAAK,WACFhB,EAAW8B,OAAOtG,SAASuG,QAC3BtB,EAAe,MAAO,QAAS,iCAAS,cAE3CuB,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,aA0EL7J,MAAM,WAA3C,kBAKR,kBAACmK,GAAA,EAAD,CAAMc,aAAc,UAAWjG,MAAI,EAACkG,GAAI,GAAIC,GAAI,EAAGC,GAAI,GACnD,kBAACC,GAAA,EAAD,CAAOzH,UAAWpB,EAAQkC,OACtB,kBAACL,EAAA,EAAD,CAAYC,QAAQ,SAASrH,QAAQ,QAAQqO,cAAY,GAAzD,gBAGA,kBAAC,KAAD,CACItN,MAAM,OACNuN,OAAQ5I,KAAWC,WAAa,EAAM,EAAM,GAE5C,kBAAC,KAAD,CAAW5E,MAAO,KAAMgI,OAAQ,IAAK6C,KAAM1B,GACvC,kBAAC,KAAD,CAAeqE,gBAAgB,QAC/B,kBAAC,KAAD,CAAOC,QAAQ,SACf,kBAAC,KAAD,MACA,kBAAC,KAAD,MACA,kBAAC,KAAD,MACA,kBAAC,KAAD,CACIvC,KAAM,eACNe,KAAK,WACLwB,QAAQ,OACRC,OAAO,YAEX,kBAAC,KAAD,CACIxC,KAAM,eACNe,KAAK,WACLwB,QAAQ,OACRC,OAAO,YAEX,kBAAC,KAAD,CACIxC,KAAM,eACNe,KAAK,WACLwB,QAAQ,QACRC,OAAO,gBAM3B,kBAACvB,GAAA,EAAD,CAAMnF,MAAI,EAACkG,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC1B,kBAACC,GAAA,EAAD,CAAOzH,UAAWpB,EAAQkC,OACtB,kBAACL,EAAA,EAAD,CAAYC,QAAQ,SAASrH,QAAQ,QAAQqO,cAAY,GAAzD,gBAGA,kBAAC1G,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAMjB,UAAWpB,EAAQ3F,MACrB,kBAACqI,EAAA,EAAD,KACI,kBAACyG,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQhI,UAAWpB,EAAQkE,UACvB,kBAACmF,GAAA,EAAD,QAGR,kBAACpG,EAAA,EAAD,CACI7E,QAASoH,EAAWH,UACpB1H,UAAU,8BAGlB,kBAAC+E,EAAA,EAAD,KACI,kBAACyG,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQhI,UAAWpB,EAAQoE,UACvB,kBAACkF,GAAA,EAAD,QAGR,kBAACrG,EAAA,EAAD,CACI7E,QAASoH,EAAWJ,UACpBzH,UAAU,8BAGlB,kBAAC+E,EAAA,EAAD,KACI,kBAACyG,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQhI,UAAWpB,EAAQsE,YACvB,kBAACiF,GAAA,EAAD,QAGR,kBAACtG,EAAA,EAAD,CACI7E,QAASoH,EAAWF,iBACpB3H,UAAU,0CAGlB,kBAAC+E,EAAA,EAAD,KACI,kBAACyG,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQhI,UAAWpB,EAAQwE,YACvB,kBAACgF,GAAA,EAAD,QAGR,kBAACvG,EAAA,EAAD,CACI7E,QAASoH,EAAWD,iBACpB5H,UAAU,6CAM9B,kBAACgK,GAAA,EAAD,CAAMnF,MAAI,EAACkG,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC1B,kBAACC,GAAA,EAAD,KACI,yBAAKzH,UAAWpB,EAAQ0D,eACpB,yBACItC,UAAWpB,EAAQyD,KACnBgG,IAAK,4FAET,yBAAKrI,UAAWpB,EAAQhD,OACpB,kBAAC6E,EAAA,EAAD,CAAYT,UAAWpB,EAAQ2D,WAA/B,aAGA,kBAAC9B,EAAA,EAAD,CAAYT,UAAWpB,EAAQ6D,SAC1BA,EAAQ6B,QADb,IAC0C,SAAnB7B,EAAQ6F,QAAqB,kBAACC,GAAA,EAAD,CAAMC,KAAK,QAAQC,MAAM,yBAIrF,kBAACzH,EAAA,EAAD,MACA,6BACI,kBAACC,EAAA,EAAD,CAAMyH,UAAU,MAAMpI,aAAW,wBAC7B,kBAACgB,EAAA,EAAD,CACIE,QAAM,EACNjB,QAAS,kBACLsF,OAAO5G,KAAK,2BAGhB,kBAAC2C,EAAA,EAAD,KACI,kBAACrE,EAAA,EAAD,OAEJ,kBAACsE,EAAA,EAAD,CAAc7E,QAAQ,iBACtB,kBAAC4E,EAAA,EAAD,CAAc5B,UAAWpB,EAAQgE,WAC7B,kBAAC+F,GAAA,EAAD,QAGR,kBAACrH,EAAA,EAAD,CACIE,QAAM,EACNjB,QAAS,kBACLsF,OAAO5G,KACH,4CAIR,kBAAC2C,EAAA,EAAD,KACI,kBAACgH,GAAA,EAAD,OAEJ,kBAAC/G,EAAA,EAAD,CAAc7E,QAAQ,WACtB,kBAAC4E,EAAA,EAAD,CAAc5B,UAAWpB,EAAQgE,WAC7B,kBAAC+F,GAAA,EAAD,QAGR,kBAACrH,EAAA,EAAD,CACIE,QAAM,EACNjB,QAAS,kBACLsF,OAAO5G,KACH,iCAIR,kBAAC2C,EAAA,EAAD,KACI,kBAACiH,GAAA,EAAD,OAEJ,kBAAChH,EAAA,EAAD,CAAc7E,QAAQ,iBACtB,kBAAC4E,EAAA,EAAD,CAAc5B,UAAWpB,EAAQgE,WAC7B,kBAAC+F,GAAA,EAAD,QAGR,kBAACrH,EAAA,EAAD,CACIE,QAAM,EACNjB,QAAS,kBACLsF,OAAO5G,KAAK,iCAGhB,kBAAC2C,EAAA,EAAD,KACI,kBAACkH,GAAA,EAAD,OAEJ,kBAACjH,EAAA,EAAD,CAAc7E,QAAQ,6BACtB,kBAAC4E,EAAA,EAAD,CAAc5B,UAAWpB,EAAQgE,WAC7B,kBAAC+F,GAAA,EAAD,QAGR,kBAACrH,EAAA,EAAD,CACIE,QAAM,EACNjB,QAAS,kBACLsF,OAAO5G,KACH,qCAIR,kBAAC2C,EAAA,EAAD,KACI,kBAACmH,GAAA,EAAD,OAEJ,kBAAClH,EAAA,EAAD,CAAc7E,QAAQ,0BACtB,kBAAC4E,EAAA,EAAD,CAAc5B,UAAWpB,EAAQgE,WAC7B,kBAAC+F,GAAA,EAAD,QAGR,kBAACrH,EAAA,EAAD,CACIE,QAAM,EACNjB,QAAS,kBACLsF,OAAO5G,KACH,iDAIR,kBAAC2C,EAAA,EAAD,CAAcoH,MAAO,CAAC5M,MAAM,YACxB,kBAAC6M,GAAA,EAAD,OAEJ,kBAACpH,EAAA,EAAD,CAAc7E,QAAQ,mCACtB,kBAAC4E,EAAA,EAAD,CAAc5B,UAAWpB,EAAQgE,WAC7B,kBAAC+F,GAAA,EAAD,YAOxB,kBAACpC,GAAA,EAAD,CAAMnF,MAAI,EAACkG,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC1B,kBAACC,GAAA,EAAD,CAAOzH,UAAWpB,EAAQkC,OACtB,kBAACG,EAAA,EAAD,KACKwC,GAAQA,EAAKtC,KAAI,SAACiE,GAAD,OACd,oCACI,kBAAC9D,EAAA,EAAD,CAAUE,QAAM,EAACzF,WAAW,aAClBwE,QAAS,kBAAIsF,OAAO5G,KAAK,iCAAmCmG,EAAEjD,MAEpE,kBAAC4F,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CACIkB,IAAI,gBACJb,IACI1E,EACIyB,EAAE+D,cAAcC,UACXnE,KAAK9C,KAEdwB,EACIyB,EAAE+D,cAAcC,UACXnE,KAAK9C,IACZkH,aAId,kBAACxH,EAAA,EAAD,CACI7E,QAASoI,EAAEkB,WAAW1K,MACtBW,UACI,kBAAC,IAAM+M,SAAP,KACI,kBAAC7I,EAAA,EAAD,CACIiI,UAAU,OACVhI,QAAQ,QACRV,UAAWpB,EAAQ2K,OACnBnN,MAAM,eAELuH,EACGyB,EAAE+D,cACGC,UAAUnE,KAAK9C,KAEpBwB,EACIyB,EAAE+D,cACGC,UAAUnE,KACV9C,IACPqH,SAAU,KAfxB,qBAiBQ,IACJ,kBAAC,KAAD,CACIC,SAAUrE,EAAEkB,WAAWoD,UACvBC,OAAO,cAM3B,kBAAC3I,EAAA,EAAD,c,mECvc1B9G,GAAYC,aAAW,SAAAJ,GAAK,YAAK,CACnCd,MAAI,mBACCc,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BX,WAAY,MAFhB,6BAIc,IAJd,GAMJ4O,KAAM,CACF1Q,SAAU,IACV2Q,UAAW,GACXC,aAAc,IAElBC,cAAc,eACThQ,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BhC,QAAS,wBAKN,SAASqQ,KACpB,IAAMpL,EAAU1E,KADsB,EAER4E,oBAAS,GAFD,mBAE/BmL,EAF+B,KAEtBC,EAFsB,OAGRpL,mBAAS,CACnCgF,QAAS,GACTqG,SAAU,GACVC,UAAW,GACXC,QAAS,GACTC,UAAW,GACXC,WAAY,GACZC,eAAgB,GAChBC,gBAAiB,GACjBC,eAAgB,GAChBC,YAAa,GACbC,gBAAiB,GACjBC,qBAAsB,KAfY,mBAG/B1D,EAH+B,KAGtB2D,EAHsB,KAkBhCC,EAAe,SAAAzF,GAAI,OAAI,SAAAtD,GACzB8I,EAAW,2BACJ3D,GADG,kBAEL7B,EAAOtD,EAAMgJ,OAAO5D,WAIvB3H,EAAWC,eACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKvI,GAA5B,OACIqD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKvI,MACvD,CAACqD,IAGLK,qBAAU,WACN+E,KAAIoG,KAAK,iBAAkB,CACvBC,KAAMC,OAAOD,KAAK/D,KAEjBpC,MAAK,SAAAC,GACF8F,EAAW9F,EAASC,SAEvBc,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,cAGvD,IA0BH,OACI,6BACI,0BAAMmF,SAzBC,SAAAC,GACXA,EAAEC,iBACFpB,GAAW,GACX,IAAMqB,EAAS,GACfJ,OAAOD,KAAK/D,GAAShC,SAAQ,SAAAE,GACzBkG,EAAOhK,KAAK,CACRI,IAAI0D,EACJ+B,MAAMD,EAAQ9B,QAGtBR,KAAIqC,MAAM,iBAAiB,CACvBC,QAAQoE,IAEPxG,MAAK,WACFP,EAAe,MAAO,QAAS,iCAAS,cAE3CuB,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAC/ClB,MAAK,WACJmF,GAAW,QAOX,yBAAKlK,UAAWpB,EAAQ3F,MACpB,kBAACwH,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GAArC,4BAGA,yBAAK1H,UAAWpB,EAAQmL,eACpB,yBAAK/J,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,sBAGA,kBAACC,GAAA,EAAD,CACIxE,MAAOD,EAAQgD,SACfpI,SAAUgJ,EAAa,YACvBc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,0CAKR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,sBAGA,kBAACC,GAAA,EAAD,CACIxE,MAAOD,EAAQiD,UACfrI,SAAUgJ,EAAa,eAE3B,kBAACe,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,0CAKR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIxE,MAAOD,EAAQkD,QACftI,SAAUgJ,EAAa,aAE3B,kBAACe,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,8HAKR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,mBAGA,kBAACC,GAAA,EAAD,CACIvF,KAAM,MACNe,MAAOD,EAAQrD,QACf/B,SAAUgJ,EAAa,WACvBc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,8QAKR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACIxE,MAAOD,EAAQmD,UACfvI,SAAUgJ,EAAa,eAE3B,kBAACe,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,yDAKR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIG,WAAS,EACT3E,MAAOD,EAAQoD,WACfxI,SAAUgJ,EAAa,gBAE3B,kBAACe,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,0FAOhB,yBAAKnC,UAAWpB,EAAQ3F,MACpB,kBAACwH,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GAArC,wCAGA,yBAAK1H,UAAWpB,EAAQmL,eACpB,yBAAK/J,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,sBAGA,kBAACC,GAAA,EAAD,CACIxE,MAAOD,EAAQqD,eACfzI,SAAUgJ,EAAa,oBAE3B,kBAACe,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,uEAKR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,sBAGA,kBAACC,GAAA,EAAD,CACIxE,MAAOD,EAAQsD,gBACf1I,SAAUgJ,EAAa,qBAE3B,kBAACe,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,8EAKR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,sBAGA,kBAACC,GAAA,EAAD,CACIxE,MAAOD,EAAQuD,eACf3I,SAAUgJ,EAAa,oBAE3B,kBAACe,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,wEAKR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACK,GAAA,EAAD,CACI5E,MAAOD,EAAQwD,YACf5I,SAAUgJ,EAAa,gBAGvB,kBAACkB,GAAA,EAAD,CAAU7E,MAAO,cAAjB,cAGA,kBAAC6E,GAAA,EAAD,CAAU7E,MAAO,cAAjB,cAGA,kBAAC6E,GAAA,EAAD,CAAU7E,MAAO,cAAjB,cAGA,kBAAC6E,GAAA,EAAD,CAAU7E,MAAO,WAAjB,YAIJ,kBAAC0E,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,sEAKR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,sBAGA,kBAACC,GAAA,EAAD,CACIxE,MAAOD,EAAQyD,gBACf7I,SAAUgJ,EAAa,qBAE3B,kBAACe,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,wLAOZ,yBAAKnC,UAAWpB,EAAQmL,eACpB,yBAAK/J,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,sBAGA,kBAACC,GAAA,EAAD,CACIxE,MAAOD,EAAQ0D,qBACf9I,SAAUgJ,EACN,0BAGR,kBAACe,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,wBAOhB,yBAAKnC,UAAWpB,EAAQ3F,MACpB,kBAACgO,GAAA,EAAD,CACIiF,SAAUjC,EACV5D,KAAM,SACN3F,QAAS,YACTtE,MAAO,WAJX,mB,mCC9SL,SAAS+P,GAAT,GAAoD,IAA9BvQ,EAA6B,EAA7BA,MAAO+I,EAAsB,EAAtBA,IAAK1F,EAAiB,EAAjBA,KAAMyH,EAAW,EAAXA,QACnD,OACI,kBAACD,GAAA,EAAD,CACIxH,KAAMA,EACNyH,QAASA,EACTC,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,GAAA,EAAD,CAAa1E,GAAG,sBACXvG,GAEL,kBAACkL,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAmB5E,GAAG,4BAClB,kBAAC1B,EAAA,EAAD,KACKkE,KAIb,kBAACqC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQ1G,QAASmG,EAAStK,MAAM,WAAhC,wB,0BCTVlC,GAAYC,aAAW,SAAAJ,GAAK,YAAK,CACnCd,MAAI,mBACCc,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BX,WAAY,MAFhB,6BAIc,IAJd,GAMJ4O,KAAM,CACF1Q,SAAU,IACV2Q,UAAW,GACXC,aAAc,IAElBC,cAAc,eACThQ,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BhC,QAAS,wBAKN,SAASyS,KACpB,IAAMxN,EAAU1E,KADa,EAEC4E,oBAAS,GAFV,mBAEtBmL,EAFsB,KAEbC,EAFa,OAGCpL,mBAAS,CACnCuN,iBAAkB,IAClBC,cAAe,IACfC,aAAc,IACdC,cAAe,IACfC,YAAa,IACbC,eAAgB,IAChBC,SAAU,IACVC,gBAAiB,IACjBC,YAAa,GACbC,aAAc,GACdC,cAAe,IACfC,uBAAwB,IACxBC,qBAAsB,aACtBC,wBAAyB,kBAjBA,mBAGtB/F,EAHsB,KAGb2D,EAHa,OAmBChM,mBAAS,IAnBV,mBAmBtBgF,EAnBsB,KAmBbC,EAnBa,OAoBDjF,mBAAS,IApBR,mBAoBtBqO,EApBsB,KAoBdC,EApBc,OAqBKtO,oBAAS,GArBd,mBAqBtBuO,EArBsB,KAqBXC,EArBW,KAuBvBvC,EAAe,SAAAzF,GAAI,OAAI,SAAAtD,GACzB,IAAIoF,EAAQpF,EAAMgJ,OAAO5D,WACI/F,IAAzBW,EAAMgJ,OAAOuC,UACbnG,EAAQpF,EAAMgJ,OAAOuC,QAAU,IAAM,KAEzCzC,EAAW,2BACJ3D,GADG,kBAEL7B,EAAO8B,OAIVoG,EAAoB,SAAAlI,GAAI,OAAI,SAAAtD,GAC9B,IAAMoF,EAAQpF,EAAMgJ,OAAO5D,MAC3B0D,EAAW,2BACJ3D,GADG,kBAEL7B,EAAO8B,OAIV3H,EAAWC,eACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKvI,GAA5B,OACIqD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKvI,MACvD,CAACqD,IAGLK,qBAAU,WACN+E,KAAIoG,KAAK,iBAAkB,CACvBC,KAAK,GAAD,oBAAMC,OAAOD,KAAK/D,IAAlB,CAA4B,cAE/BpC,MAAK,SAAAC,GACFjB,EAAWiB,EAASC,KAAKnB,gBAClBkB,EAASC,KAAKnB,QACrBgH,EAAW9F,EAASC,SAEvBc,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAGtDpB,KAAIC,IAAI,iBACHC,MAAK,SAAAC,GACFoI,EAAUpI,EAASC,SAEtBc,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,cAGvD,IA0BH,OACI,6BACI,kBAACkG,GAAD,CACIvQ,MAAO,eACP+I,IACI,qOAEJ+B,QAAS,kBAAM4G,GAAa,IAC5BrO,KAAMoO,IAEV,0BAAMjC,SAlCC,SAAAC,GACXA,EAAEC,iBACFpB,GAAW,GACX,IAAMqB,EAAS,GACfJ,OAAOD,KAAK/D,GAAShC,SAAQ,SAAAE,GACzBkG,EAAOhK,KAAK,CACRI,IAAK0D,EACL+B,MAAOD,EAAQ9B,QAGvBR,KAAIqC,MAAM,iBAAkB,CACxBC,QAASoE,IAERxG,MAAK,WACFP,EAAe,MAAO,QAAS,iCAAS,cAE3CuB,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACFmF,GAAW,QAeX,yBAAKlK,UAAWpB,EAAQ3F,MACpB,kBAACwH,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GAArC,kCAGA,yBAAK1H,UAAWpB,EAAQmL,eACpB,yBAAK/J,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACgC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIJ,QACiC,MAA7BpG,EAAQkF,iBAEZtK,SAAUgJ,EACN,sBAIZtC,MAAM,+CAEV,kBAACqD,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,4GAMR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACgC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIJ,QAC6B,MAAzBpG,EAAQoF,aAEZxK,SAAUgJ,EACN,kBAIZtC,MAAM,6BAEV,kBAACqD,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,kTAMR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACgC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIJ,QAC4B,MAAxBpG,EAAQsF,YAEZ1K,SAAUgJ,EACN,iBAIZtC,MAAM,mCAEV,kBAACqD,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,wEAMR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACgC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIJ,QAC8B,MAA1BpG,EAAQqF,cAEZzK,SAAUgJ,EACN,mBAIZtC,MAAM,mCAEV,kBAACqD,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,wEAMR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACgC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIJ,QAC+B,MAA3BpG,EAAQuF,eAEZ3K,SAAUgJ,EACN,oBAIZtC,MAAM,+CAEV,kBAACqD,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,oFAMR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACgC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIJ,QAEI,MADApG,EAAQ6F,uBAGZjL,SAAUgJ,EACN,4BAIZtC,MAAM,iDAEV,kBAACqD,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,8DAM4B,MAAnCgF,EAAQ6F,wBACL,oCACI,yBAAKhN,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,YAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRzE,MAAOD,EAAQ8F,qBACflL,SAAUyL,EACN,0BAGR,kBAAC1B,GAAA,EAAD,CAAgB3J,GAAG,yBACf,kBAACyL,GAAA,EAAD,CACIC,KACI,gDAEJ7C,OAAQ,UAJZ,wCAOQ,IARZ,6DAcR,yBAAKhL,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,UAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRzE,MACID,EAAQ+F,wBAEZnL,SAAUyL,EACN,6BAGR,kBAAC1B,GAAA,EAAD,CAAgB3J,GAAG,yBACf,kBAACyL,GAAA,EAAD,CACIC,KACI,gDAEJ7C,OAAQ,UAJZ,wCAOQ,IARZ,kDAehB,yBAAKhL,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACgC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIJ,QAC8B,MAA1BpG,EAAQ4F,cAEZhL,SAAU,SAAAsJ,GAEDvH,EAAQpC,WACL,YAMRqJ,EAAa,gBAAbA,CACIM,GAJAiC,GAAa,MAS7B7E,MAAM,cAEV,kBAACqD,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,iMAOR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACK,GAAA,EAAD,CACI5E,MAAOD,EAAQmF,cACfvK,SAAUyL,EACN,iBAEJ3B,UAAQ,GAEPsB,EAAOhM,KAAI,SAAAiE,GACR,OAAa,IAATA,EAAE0I,GACK,KAGP,kBAAC7B,GAAA,EAAD,CACItK,IAAKyD,EAAE0I,GACP1G,MAAOhC,EAAE0I,GAAGC,YAEX3I,EAAE4I,UAKnB,kBAAClC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,0EAQhB,yBAAKnC,UAAWpB,EAAQ3F,MACpB,kBAACwH,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GAArC,kBAGA,yBAAK1H,UAAWpB,EAAQmL,eACpB,yBAAK/J,UAAWpB,EAAQgL,MACpB,kBAACqE,GAAA,EAAD,CAAOC,SAAS,QAAhB,uFAAsCpK,EAAQqK,SAAS,KAAQrK,EAAU,aAAeA,EAAU,gBAEtG,yBAAK9D,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACgC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIJ,QAA8B,MAArBpG,EAAQwF,SACjB5K,SAAUgJ,EAAa,cAG/BtC,MAAM,+BAEV,kBAACqD,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,wFAMc,MAArBgF,EAAQwF,UACL,oCACI,yBAAK3M,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACgC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIJ,QAEI,MADApG,EAAQyF,gBAGZ7K,SAAUgJ,EACN,qBAIZtC,MAAM,2DAEV,kBAACqD,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,sWAMR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,UAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRzE,MAAOD,EAAQ0F,YACf9K,SAAUyL,EACN,iBAGR,kBAAC1B,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,+EAMR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,WAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRzE,MAAOD,EAAQ2F,aACf/K,SAAUyL,EACN,kBAGR,kBAAC1B,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,mFAUxB,yBAAKnC,UAAWpB,EAAQ3F,MACpB,kBAACgO,GAAA,EAAD,CACIiF,SAAUjC,EACV5D,KAAM,SACN3F,QAAS,YACTtE,MAAO,WAJX,mB,eCtddlC,GAAYC,aAAW,SAAAJ,GAAK,YAAK,CACnCd,MAAI,mBACCc,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BX,WAAY,MAFhB,6BAIc,IAJd,GAMJ4O,KAAM,CACF1Q,SAAU,IACV2Q,UAAW,GACXC,aAAc,IAElBC,cAAc,eACThQ,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BhC,QAAS,oBAGjByU,aAAc,CACVpT,WAAY,OAIL,SAAS4C,KACpB,IAAMgB,EAAU1E,KADW,EAEG4E,oBAAS,GAFZ,mBAEpBmL,EAFoB,KAEXC,EAFW,OAGHpL,oBAAS,GAHN,mBAGpBuP,EAHoB,KAGdC,EAHc,OAIMxP,mBAAS,IAJf,mBAIpByP,EAJoB,KAIVC,EAJU,OAKG1P,mBAAS,CACnC2P,SAAU,GACVC,WAAY,GACZC,SAAU,GACVC,SAAU,GACVC,QAAS,GACTC,SAAU,GACVC,SAAU,GACVC,eAAe,GACfC,eAAgB,KAChBC,mBAAoB,GACpBC,yBAA0B,GAC1BC,wBAAyB,KAjBF,mBAKpBjI,EALoB,KAKX2D,EALW,KAoBrBC,EAAe,SAAAzF,GAAI,OAAI,SAAAtD,GACzB8I,EAAW,2BACJ3D,GADG,kBAEL7B,EAAOtD,EAAMgJ,OAAO5D,WAevB3H,EAAWC,eACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKvI,GAA5B,OACIqD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKvI,MACvD,CAACqD,IAGLK,qBAAU,WACN+E,KAAIoG,KAAK,iBAAkB,CACvBC,KAAMC,OAAOD,KAAK/D,KAEjBpC,MAAK,SAAAC,GACF8F,EAAW9F,EAASC,SAEvBc,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,cAGvD,IAEH,IA/B0BX,EAmF1B,OACI,6BACI,kBAACmB,GAAA,EAAD,CACIxH,KAAMoP,EACN3H,QAAS,kBAAM4H,GAAQ,IACvB3H,kBAAgB,qBAEhB,kBAACE,GAAA,EAAD,CAAa1E,GAAG,qBAAhB,4BACA,kBAAC2E,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAACtG,EAAA,EAAD,uIAGA,kBAACA,EAAA,EAAD,2QAKJ,kBAAC4O,GAAA,EAAD,CACIC,WAAS,EACThW,OAAO,QACP6I,GAAG,OACHsG,MAAM,iCACNrB,MAAOmH,EACPxM,SAAU,SAAAsJ,GAAC,OAAImD,EAAanD,EAAEL,OAAO5D,QACrCf,KAAK,QACLoF,WAAS,KAGjB,kBAACzE,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQ1G,QAAS,kBAAM+N,GAAQ,IAAQlS,MAAM,WAA7C,gBAGA,kBAAC6K,GAAA,EAAD,CACI1G,QAAS,kBArFzB2J,GAAW,QACXrF,KAAIoG,KAAK,kBAAmB,CACxBsE,GAAIhB,IAEHxJ,MAAK,WACFP,EAAe,MAAO,QAAS,6CAAW,cAE7CuB,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACFmF,GAAW,OA2EHgC,SAAUjC,EACV7N,MAAM,WAHV,kBAUR,0BAAMgP,SApEC,SAAAC,GACXA,EAAEC,iBACFpB,GAAW,GACX,IAAMqB,EAAS,GACfJ,OAAOD,KAAK/D,GAAShC,SAAQ,SAAAE,GACzBkG,EAAOhK,KAAK,CACRI,IAAK0D,EACL+B,MAAOD,EAAQ9B,QAGvBR,KAAIqC,MAAM,iBAAkB,CACxBC,QAASoE,IAERxG,MAAK,WACFP,EAAe,MAAO,QAAS,iCAAS,WAxBhDK,KAAIC,IAAI,uBAEHC,MAAK,eACLgB,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAGjDlB,MAAK,kBAoBLgB,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACFmF,GAAW,QAgDX,yBAAKlK,UAAWpB,EAAQ3F,MACpB,kBAACwH,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GAArC,gBAIA,yBAAK1H,UAAWpB,EAAQmL,eACpB,yBAAK/J,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIxE,MAAOD,EAAQsH,SACf1M,SAAUgJ,EAAa,YACvBc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,wEAMR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACIvF,KAAM,QACNwF,UAAQ,EACRzE,MAAOD,EAAQuH,WACf3M,SAAUgJ,EAAa,gBAE3B,kBAACe,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,gDAMR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,2BAGA,kBAACC,GAAA,EAAD,CACIxE,MAAOD,EAAQwH,SACf5M,SAAUgJ,EAAa,YACvBc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,oFAMR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,qBAGA,kBAACC,GAAA,EAAD,CACI4D,WAAY,CAAEC,IAAK,EAAGC,KAAK,GAC3BrJ,KAAM,SACNe,MAAOD,EAAQyH,SACf7M,SAAUgJ,EAAa,YACvBc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,kEAMR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,2BAGA,kBAACC,GAAA,EAAD,CACIxE,MAAOD,EAAQ2H,SACf/M,SAAUgJ,EAAa,YACvBc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,4GAMR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,qBAGA,kBAACC,GAAA,EAAD,CACIvF,KAAM,WACNe,MAAOD,EAAQ4H,SACfhN,SAAUgJ,EAAa,YACvBc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,0CAMR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIxE,MAAOD,EAAQ0H,QACf9M,SAAUgJ,EAAa,WACvBc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,0IAMR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACgC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIJ,QAC+B,MAA3BpG,EAAQ6H,eAEZjN,UAjQduD,EAkQkB,iBAlQV,SAAAtD,GAC9B,IAAIoF,EAAQpF,EAAMgJ,OAAO5D,WACI/F,IAAzBW,EAAMgJ,OAAOuC,UACbnG,EAAQpF,EAAMgJ,OAAOuC,QAAU,IAAM,KAEzCzC,EAAW,2BACJ3D,GADG,kBAEL7B,EAAO8B,SA+PgBqB,MAAM,yCAEV,kBAACqD,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,yDAMR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,gDAGA,kBAACC,GAAA,EAAD,CACI4D,WAAY,CAAEC,IAAK,EAAGC,KAAK,GAC3BrJ,KAAM,SACNe,MAAOD,EAAQ8H,eACflN,SAAUgJ,EAAa,kBACvBc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,sIAShB,yBAAKnC,UAAWpB,EAAQ3F,MACpB,kBAACwH,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GAArC,4BAIA,yBAAK1H,UAAWpB,EAAQmL,eAEpB,yBAAK/J,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACIxE,MAAOD,EAAQgI,yBACfpN,SAAUgJ,EACN,4BAEJgB,WAAS,EACT4D,QAAQ,KACR9D,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,oFAMR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIxE,MAAOD,EAAQ+H,mBACfnN,SAAUgJ,EACN,sBAEJgB,WAAS,EACT4D,QAAQ,KACR9D,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,kKAMR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIxE,MAAOD,EAAQiI,wBACfrN,SAAUgJ,EACN,2BAEJgB,WAAS,EACT4D,QAAQ,KACR9D,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,wDAShB,yBAAKnC,UAAWpB,EAAQ3F,MACpB,kBAACgO,GAAA,EAAD,CACIiF,SAAUjC,EACV5D,KAAM,SACN3F,QAAS,YACTtE,MAAO,WAJX,gBAQC,MACD,kBAAC6K,GAAA,EAAD,CACIjH,UAAWpB,EAAQwP,aACnB1N,QAAS,WACTtE,MAAO,UACPmE,QAAS,kBAAM+N,GAAQ,KAJ3B,2C,eC9ZL,SAASsB,GAAT,GAAmE,IAA/C7N,EAA8C,EAA9CA,SAAS0N,EAAqC,EAArCA,IAAIrI,EAAiC,EAAjCA,MAAMyE,EAA2B,EAA3BA,SAASpD,EAAkB,EAAlBA,MAAMoH,EAAY,EAAZA,IAAIC,EAAQ,EAARA,OAC/DrQ,EAAWC,eACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKvI,GAA5B,OACIqD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKvI,MACvD,CAACqD,IALwE,EAStDX,mBAAS,GAT6C,mBAStEiR,EATsE,KASjEC,EATiE,KAUzEC,GAAQ,EAENC,EAAYtQ,uBAAY,WAC1B,IA7BewF,EA6BTe,GA7BSf,EA6BWgC,GA5BzB,KACM,CAAC+I,KAAKC,MAAMhL,GAAG,GAEvBA,EAAE,QACM,CAAC+K,KAAKC,MAAMhL,EAAE,MAAM,MAE5BA,EAAE,WACM,CAAC+K,KAAKC,MAAMhL,EAAE,SAAa,SAEnCA,EAAE,cACM,CAAC+K,KAAKC,MAAMhL,EAAE,YAAkB,YAEpC,CAAC+K,KAAKC,MAAMhL,EAAE,eAAuB,eAqBxC,OAJG6K,GAAmB,IAAV7I,IACR4I,EAAQ7J,EAAI,IACZ8J,GAAQ,GAEL9J,IACT,CAACiB,IAEH,OACI,kBAACoE,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBACflD,GAEL,kBAACmD,GAAA,EAAD,CACI5C,MAAO,CAAC5O,MAAM,KACdgN,MAAO8I,IAAY,GACnB7J,KAAM,SACNmJ,WAAY,CAACC,IAAIA,EAAIC,KAAK,GAC1B3N,SAAU,SAAAsJ,GACFA,EAAEL,OAAO5D,MAAQ2I,EAAOF,EACxB9N,EAAS,CACLiJ,OAAO,CAAC5D,OAAOiE,EAAEL,OAAO5D,MAAQ2I,GAAMhC,cAG1CvJ,EAAe,MAAO,QAAS,mDAAY,YAInDqH,SAAYA,EACZwE,aACI,kBAACC,GAAA,EAAD,CAAgBpQ,SAAS,OACrB,kBAAC8L,GAAA,EAAD,CACIuE,QAAQ,2BACRpO,GAAG,qBACHiF,MAAO2I,EACPhO,SAAU,SAACsJ,GACH6E,IAAY,GAAK7E,EAAEL,OAAO5D,MAAQyI,GAClC9N,EAAS,CACLiJ,OAAO,CAAC5D,OAAO8I,IAAY,GAAK7E,EAAEL,OAAO5D,OAAO2G,cAEpDiC,EAAQ3E,EAAEL,OAAO5D,QAEjB5C,EAAe,MAAO,QAAS,mDAAY,aAKnD,kBAACyH,GAAA,EAAD,CAAU7E,MAAO,GAAjB,IAAsB0I,GAAUA,GAChC,kBAAC7D,GAAA,EAAD,CAAU7E,MAAO,MAAjB,KAA0B0I,GAAUA,GACpC,kBAAC7D,GAAA,EAAD,CAAU7E,MAAO,SAAjB,KAA+B0I,GAAUA,GACzC,kBAAC7D,GAAA,EAAD,CAAU7E,MAAO,YAAjB,KAAoC0I,GAAUA,GAC9C,kBAAC7D,GAAA,EAAD,CAAU7E,MAAO,eAAjB,KAAyC0I,GAAUA,QC3E/E,IAAM5V,GAAYC,aAAW,SAAAJ,GAAK,YAAK,CACnCd,MAAI,mBACCc,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BX,WAAY,MAFhB,6BAIc,IAJd,GAMJ4O,KAAM,CACF1Q,SAAU,IACV2Q,UAAW,GACXC,aAAc,IAElBC,cAAc,eACThQ,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BhC,QAAS,wBAKN,SAAS6W,KACpB,IAAM5R,EAAU1E,KADqB,EAEP4E,oBAAS,GAFF,mBAE9BmL,EAF8B,KAErBC,EAFqB,OAGPpL,mBAAS,CACnC2R,eAAgB,IAChBC,sBAAsB,IACtBC,UAAU,GACVC,YAAY,IACZC,uBAAuB,IACvBC,gBAAgB,IAChBC,iBAAiB,IACjBC,gBAAgB,IAChBC,oBAAoB,IACpBC,0BAA0B,IAC1BC,uBAAuB,IACvBC,kBAAkB,IAClBC,yBAAyB,IACzBC,+BAA+B,IAC/BC,wBAAwB,IACxBC,0BAA0B,IAC1BC,wBAAwB,MApBS,mBAG9BtK,EAH8B,KAGrB2D,EAHqB,KAgC/BC,EAAe,SAAAzF,GAAI,OAAI,SAAAtD,GACzB8I,EAAW,2BACJ3D,GADG,kBAEL7B,EAAOtD,EAAMgJ,OAAO5D,WAIvB3H,EAAWC,eACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKvI,GAA5B,OACIqD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKvI,MACvD,CAACqD,IAGLK,qBAAU,WACN+E,KAAIoG,KAAK,iBAAkB,CACvBC,KAAMC,OAAOD,KAAK/D,KAEjBpC,MAAK,SAAAC,GACF8F,EAAW9F,EAASC,SAEvBc,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,cAGvD,IAGH,IApC0BX,EA2D1B,OACI,6BACI,0BAAM8F,SAzBC,SAAAC,GACXA,EAAEC,iBACFpB,GAAW,GACX,IAAMqB,EAAS,GACfJ,OAAOD,KAAK/D,GAAShC,SAAQ,SAAAE,GACzBkG,EAAOhK,KAAK,CACRI,IAAI0D,EACJ+B,MAAMD,EAAQ9B,QAGtBR,KAAIqC,MAAM,iBAAiB,CACvBC,QAAQoE,IAEPxG,MAAK,WACFP,EAAe,MAAO,QAAS,iCAAS,cAE3CuB,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAC/ClB,MAAK,WACJmF,GAAW,QAQX,yBAAKlK,UAAWpB,EAAQ3F,MACpB,kBAACwH,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GAArC,kCAGA,yBAAK1H,UAAWpB,EAAQmL,eAEpB,yBAAK/J,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAApB,uBAGA,kBAACC,GAAA,EAAD,CACIvF,KAAM,SACNmJ,WAAY,CACRC,IAAI,EACJC,KAAK,GAETtI,MAAOD,EAAQsJ,eACf1O,SAAUgJ,EAAa,kBACvBc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,iKAMR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAApB,wCAGA,kBAACC,GAAA,EAAD,CACIvF,KAAM,SACNmJ,WAAY,CACRC,IAAI,EACJC,KAAK,GAETtI,MAAOD,EAAQuJ,sBACf3O,SAAUgJ,EAAa,yBACvBc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,wHAMR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIxE,MAAOD,EAAQwJ,UACf5O,SAAUgJ,EAAa,aACvBc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,0LAMR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACoE,GAAD,CACIxI,MAAOD,EAAQyJ,YACf7O,SAAUgJ,EAAa,eACvBc,UAAQ,EACR4D,IAAK,EACLI,IAAK,WACLpH,MAAO,iEAEX,kBAACqD,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,oLAMR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAApB,iDAGA,kBAACC,GAAA,EAAD,CACIvF,KAAM,SACNmJ,WAAY,CACRC,IAAI,EACJC,KAAK,GAETtI,MAAOD,EAAQ0J,uBACf9O,SAAUgJ,EAAa,0BACvBc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,yMAMR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACgC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIJ,QAC0C,MAAtCpG,EAAQqK,0BAEZzP,UA5KduD,EA6KkB,4BA7KV,SAAAtD,GAC9B,IAAMoF,EAAOpF,EAAMgJ,OAAOuC,QAAU,IAAM,IAC1CzC,EAAW,2BACJ3D,GADG,kBAEL7B,EAAO8B,SA6KgBqB,MAAM,mFAEV,kBAACqD,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,8MAShB,yBAAKnC,UAAWpB,EAAQ3F,MACpB,kBAACwH,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GAArC,+BAIA,yBAAK1H,UAAWpB,EAAQmL,eAEpB,yBAAK/J,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIvF,KAAM,SACNmJ,WAAY,CACRC,IAAI,EACJC,KAAK,GAETtI,MAAOD,EAAQ2J,gBACf/O,SAAUgJ,EAAa,mBACvBc,UAAQ,MAKpB,yBAAK7L,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIvF,KAAM,SACNmJ,WAAY,CACRC,IAAI,EACJC,KAAK,GAETtI,MAAOD,EAAQ4J,iBACfhP,SAAUgJ,EAAa,oBACvBc,UAAQ,MAKpB,yBAAK7L,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIvF,KAAM,SACNmJ,WAAY,CACRC,IAAI,EACJC,KAAK,GAETtI,MAAOD,EAAQ6J,gBACfjP,SAAUgJ,EAAa,mBACvBc,UAAQ,MAKpB,yBAAK7L,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAApB,+CAGA,kBAACC,GAAA,EAAD,CACIvF,KAAM,SACNmJ,WAAY,CACRC,IAAI,EACJC,KAAK,GAETtI,MAAOD,EAAQ8J,oBACflP,SAAUgJ,EAAa,uBACvBc,UAAQ,MAKpB,yBAAK7L,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIvF,KAAM,SACNmJ,WAAY,CACRC,IAAI,EACJC,KAAK,GAETtI,MAAOD,EAAQ+J,0BACfnP,SAAUgJ,EAAa,6BACvBc,UAAQ,MAKpB,yBAAK7L,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIvF,KAAM,SACNmJ,WAAY,CACRC,IAAI,EACJC,KAAK,GAETtI,MAAOD,EAAQgK,uBACfpP,SAAUgJ,EAAa,0BACvBc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,gGAMR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAApB,+BAGA,kBAACC,GAAA,EAAD,CACIvF,KAAM,SACNmJ,WAAY,CACRC,IAAI,EACJC,KAAK,GAETtI,MAAOD,EAAQiK,kBACfrP,SAAUgJ,EAAa,qBACvBc,UAAQ,MAKpB,yBAAK7L,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAApB,wCAGA,kBAACC,GAAA,EAAD,CACIvF,KAAM,SACNmJ,WAAY,CACRC,IAAI,EACJC,KAAK,GAETtI,MAAOD,EAAQmK,+BACfvP,SAAUgJ,EAAa,kCACvBc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,sJAMR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAApB,mEAGA,kBAACC,GAAA,EAAD,CACIvF,KAAM,SACNmJ,WAAY,CACRC,IAAI,EACJC,KAAK,GAETtI,MAAOD,EAAQkK,yBACftP,SAAUgJ,EAAa,4BACvBc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,0NAMR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAApB,qCAGA,kBAACC,GAAA,EAAD,CACIvF,KAAM,SACNmJ,WAAY,CACRC,IAAI,EACJC,KAAK,GAETtI,MAAOD,EAAQoK,wBACfxP,SAAUgJ,EAAa,2BACvBc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,yMAMR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAApB,iDAGA,kBAACC,GAAA,EAAD,CACIvF,KAAM,SACNmJ,WAAY,CACRC,IAAI,EACJI,IAAI,KACJH,KAAK,GAETtI,MAAOD,EAAQsK,wBACf1P,SAAUgJ,EAAa,2BACvBc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,qLAShB,yBAAKnC,UAAWpB,EAAQ3F,MACpB,kBAACgO,GAAA,EAAD,CACIiF,SAAUjC,EACV5D,KAAM,SACN3F,QAAS,YACTtE,MAAO,WAJX,mB,0BCzcdlC,GAAYC,aAAW,iBAAO,CAEhC4P,cAAe,CACXzQ,OAAO,mBAIA,SAASoY,GAAT,GAA8C,IAA3BzS,EAA0B,EAA1BA,KAAMyH,EAAoB,EAApBA,QAAQ0E,EAAY,EAAZA,SACtCxM,EAAU1E,KADwC,EAEhC4E,mBAAS,CAC7BwG,KAAM,GACNkD,KAAM,aACNmJ,KAAM,GACNC,MAAO,GACPC,MAAO,KAP6C,mBAEjDC,EAFiD,KAE3CC,EAF2C,KAUlDhH,EAAe,SAAAzF,GAAI,OAAI,SAAAtD,GACzB+P,EAAQ,2BACDD,GADA,kBAEFxM,EAAOtD,EAAMgJ,OAAO5D,WAe7B,OACI,kBAACX,GAAA,EAAD,CACIxH,KAAMA,EACNyH,QAASA,EACTC,kBAAgB,qBAChBC,mBAAiB,2BACjB1N,SAAU,MAEV,0BAAMkS,SAnBC,SAAAC,GACXA,EAAEC,iBACF,IAAM0G,EAAQ,eAAOF,GACrBE,EAASxJ,KAAOyJ,SAASD,EAASxJ,MAClCwJ,EAASL,KAAiC,MAA1BM,SAASD,EAASL,MAClCK,EAASJ,MAAQK,SAAyB,IAAhBD,EAASJ,OACnCI,EAASH,MAAQI,SAASD,EAASH,OACnCG,EAAS7P,IAAM,IAAI+P,MAAQC,UAC3B/G,EAAS4G,KAYD,kBAACnL,GAAA,EAAD,CAAa1E,GAAG,sBAAhB,kCACA,kBAAC2E,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAmB5E,GAAG,4BAClB,yBAAKnC,UAAWpB,EAAQmL,eACpB,kBAACyB,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,gBAGA,kBAACC,GAAA,EAAD,CACIxE,MAAO0K,EAAKxM,KACZvD,SAAUgJ,EAAa,QACvBc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,0CAMR,yBAAKnC,UAAWpB,EAAQmL,eACpB,kBAACyB,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACmE,GAAD,CACIxI,MAAO0K,EAAKtJ,KACZzG,SAAUgJ,EAAa,QACvB0E,IAAK,EACLhH,MAAO,eACPoH,IAAK,mBACLhE,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,0CAMR,yBAAKnC,UAAWpB,EAAQmL,eACpB,kBAACyB,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,+BAGA,kBAACC,GAAA,EAAD,CACIvF,KAAM,SACNmJ,WAAY,CACRC,IAAI,EACJC,KAAK,GAETtI,MAAO0K,EAAKH,KACZ5P,SAAUgJ,EAAa,QACvBc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,4DAMR,yBAAKnC,UAAWpB,EAAQmL,eACpB,kBAACyB,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,yBAGA,kBAACC,GAAA,EAAD,CACIvF,KAAM,SACNmJ,WAAY,CACRC,IAAI,IACJC,KAAK,KAETtI,MAAO0K,EAAKF,MACZ7P,SAAUgJ,EAAa,SACvBc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,0CAMR,yBAAKnC,UAAWpB,EAAQmL,eACpB,kBAACyB,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,+BAGA,kBAACC,GAAA,EAAD,CACIvF,KAAM,SACNmJ,WAAY,CACRC,IAAI,EACJC,KAAK,GAETtI,MAAO0K,EAAKD,MACZ9P,SAAUgJ,EAAa,SACvBc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,2JAQhB,kBAAC6E,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQ1G,QAASmG,EAAStK,MAAM,WAAhC,gBAGA,kBAAC6K,GAAA,EAAD,CAAQZ,KAAM,SAAUjK,MAAM,WAA9B,mB,+EChJdlC,GAAYC,aAAW,iBAAO,CAChC4P,cAAe,CACXzQ,OAAQ,mBAID,SAAS8Y,GAAT,GAAgD,IAA5BnT,EAA2B,EAA3BA,KAAMyH,EAAqB,EAArBA,QAAS0E,EAAY,EAAZA,SACxCxM,EAAU1E,KAD0C,EAE9B4E,mBAAS,IAFqB,mBAEnDqO,EAFmD,KAE3CC,EAF2C,OAGhCtO,mBAAS,CAC/BwG,KAAM,GACN+M,SAAU,EACVV,KAAM,GACNC,MAAO,GACPC,MAAO,GACPS,IAAK,GACLC,WAAW,IAV2C,mBAGnDC,EAHmD,KAG5CC,EAH4C,KAa1D3S,qBAAU,WACFb,GAA0B,IAAlBkO,EAAOuF,QACf7N,KAAIC,IAAI,iBACHC,MAAK,SAAAC,GACFoI,EAAUpI,EAASC,SAGtBc,OAAM,iBAGhB,CAAC9G,IAEJ,IAO0BqG,EAPpByF,EAAe,SAAAzF,GAAI,OAAI,SAAAtD,GACzByQ,EAAS,2BACFD,GADC,kBAEHlN,EAAOtD,EAAMgJ,OAAO5D,WAsB7B,OACI,kBAACX,GAAA,EAAD,CACIxH,KAAMA,EACNyH,QAASA,EACTC,kBAAgB,qBAChBC,mBAAiB,2BACjB1N,SAAU,KACVyZ,OAAQ,SAER,0BAAMvH,SApBC,SAAAC,GACXA,EAAEC,iBACF,IAAMsH,EAAS,eAAOJ,GACtBI,EAAUjB,KAAkC,MAA3BM,SAASW,EAAUjB,MACpCiB,EAAUhB,MAAQK,SAA2B,IAAlBW,EAAUhB,OACrCgB,EAAUf,MAAQI,SAASW,EAAUf,OACrCe,EAAUzQ,IAAM,IAAI+P,MAAQC,UAC5BS,EAAUN,IAAMM,EAAUN,IAAIO,MAAM,MACpCzH,EAASwH,KAaD,kBAAC/L,GAAA,EAAD,CAAa1E,GAAG,sBAAhB,8CAGA,kBAAC2E,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAmB5E,GAAG,4BAClB,yBAAKnC,UAAWpB,EAAQmL,eACpB,kBAACyB,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,gBAGA,kBAACC,GAAA,EAAD,CACIxE,MAAOoL,EAAMlN,KACbvD,SAAUgJ,EAAa,QACvBc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,0CAMR,yBAAKnC,UAAWpB,EAAQmL,eACpB,kBAACyB,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,sBAGA,kBAACK,GAAA,EAAD,CACI5E,MAAOoL,EAAMH,SACbtQ,SAAUgJ,EAAa,YACvBc,UAAQ,GAEPsB,EAAOhM,KAAI,SAAAiE,GACR,OAAa,IAATA,EAAE0I,GAEE,kBAAC7B,GAAA,EAAD,CAAU7E,MAAOhC,EAAE0I,IACd1I,EAAE4I,MAIR,SAGf,kBAAClC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,4DAMR,yBAAKnC,UAAWpB,EAAQmL,eACpB,kBAACyB,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,+BAGA,kBAACC,GAAA,EAAD,CACIvF,KAAM,SACNmJ,WAAY,CACRC,IAAK,EACLC,KAAM,GAEVtI,MAAOoL,EAAMb,KACb5P,SAAUgJ,EAAa,QACvBc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,kEAMR,yBAAKnC,UAAWpB,EAAQmL,eACpB,kBAACyB,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,yBAGA,kBAACC,GAAA,EAAD,CACIvF,KAAM,SACNmJ,WAAY,CACRC,IAAK,IACLC,KAAM,KAEVtI,MAAOoL,EAAMZ,MACb7P,SAAUgJ,EAAa,SACvBc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,0CAMR,yBAAKnC,UAAWpB,EAAQmL,eACpB,kBAACyB,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,+BAGA,kBAACC,GAAA,EAAD,CACIvF,KAAM,SACNmJ,WAAY,CACRC,IAAK,EACLC,KAAM,GAEVtI,MAAOoL,EAAMX,MACb9P,SAAUgJ,EAAa,SACvBc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,yJAOR,yBAAKnC,UAAWpB,EAAQmL,eACpB,kBAACyB,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,uDAGA,kBAACC,GAAA,EAAD,CACIxE,MAAOoL,EAAMF,IACbvQ,SAAUgJ,EAAa,OACvBgB,WAAS,EACT4D,QAAS,GACT9D,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,wEAMR,yBAAKnC,UAAWpB,EAAQmL,eACpB,kBAACyB,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACgC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIJ,QAASiF,EAAMD,UACfxQ,UApKduD,EAoK0C,YApKlC,SAAAtD,GAC9ByQ,EAAS,2BACFD,GADC,kBAEHlN,EAAOtD,EAAMgJ,OAAOuC,eAoKG9E,MAAM,6BAEV,kBAACqD,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,8GAOhB,kBAAC6E,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQ1G,QAASmG,EAAStK,MAAM,WAAhC,gBAGA,kBAAC6K,GAAA,EAAD,CAAQZ,KAAM,SAAUjK,MAAM,WAA9B,mBC1NpB,IAAMlC,GAAYC,aAAW,iBAAO,CAEhC4P,cAAe,CACXzQ,OAAO,mBAIA,SAASwZ,GAAT,GAA0D,IAArC7T,EAAoC,EAApCA,KAAMyH,EAA8B,EAA9BA,QAAQqM,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,UAClDpU,EAAU1E,KADoD,EAE1C4E,mBAAS,CAC/BmU,IAAI,EACJ9Q,GAAG,EACHwP,KAAK,IAL2D,mBAE7DuB,EAF6D,KAEtDC,EAFsD,OAOvCrU,oBAAS,GAP8B,mBAO7DmL,EAP6D,KAOrDC,EAPqD,KAS9DzK,EAAWC,eACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKvI,GAA5B,OACIqD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKvI,MACvD,CAACqD,IAGCsL,EAAe,SAAAzF,GAAI,OAAI,SAAAtD,GACzBmR,EAAS,2BACFD,GADC,kBAEH5N,EAAOtD,EAAMgJ,OAAO5D,WAmC7B,OACI,kBAACX,GAAA,EAAD,CACIxH,KAAMA,EACNyH,QAASA,EACTC,kBAAgB,qBAChBC,mBAAiB,2BACjB1N,SAAU,MAEV,0BAAMkS,SAvCC,SAAAC,GACXA,EAAEC,iBACFpB,GAAW,GACXgJ,EAAMD,IAAMhB,SAASiB,EAAMD,KAC3BC,EAAM/Q,GAAK8P,SAASiB,EAAM/Q,IAC1B+Q,EAAMvB,KAAOM,SAASiB,EAAMvB,MAC5BuB,EAAM7M,KAAK,EACX,IAAK,IAAI+M,EAAE,EAAEA,EAAEL,EAASL,OAAOU,IAC3B,GAAIL,EAASK,GAAGjR,KAAO+Q,EAAM/Q,GAAG,MACAd,IAAzB0R,EAASK,GAAGf,SACXa,EAAM7M,KAAO,EAEb6M,EAAM7M,KAAO,EAEjB,MAIRxB,KAAIoG,KAAK,gBAAiBiI,GACrBnO,MAAK,SAAAC,GACFgO,EAAUhO,EAASC,MACnByB,OAEHX,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAC/ClB,MAAK,WACJmF,GAAW,QAcX,kBAACrD,GAAA,EAAD,CAAa1E,GAAG,sBAAhB,kCACA,kBAAC2E,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAmB5E,GAAG,4BAClB,yBAAKnC,UAAWpB,EAAQmL,eACpB,kBAACyB,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIvF,KAAM,SACNmJ,WAAY,CACRE,KAAK,EACLD,IAAI,EACJI,IAAI,KAERzI,MAAO8L,EAAMD,IACblR,SAAUgJ,EAAa,OACvBc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,4DAMR,yBAAKnC,UAAWpB,EAAQmL,eACpB,kBAACyB,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACK,GAAA,EAAD,CACI5E,MAAO8L,EAAM/Q,GACbJ,SAAU,SAAAsJ,GACNN,EAAa,KAAbA,CAAmBM,KAGtB0H,EAAS5R,KAAI,SAAAiE,GAAC,OACX,kBAAC6G,GAAA,EAAD,CAAUtK,IAAKyD,EAAEjD,GAAIiF,MAAOhC,EAAEjD,GAAIkR,YAAW,KAAMjO,EAAEE,SAEzD,kBAAC2G,GAAA,EAAD,CAAU7E,MAAO,GAAjB,mBAKZ,yBAAKpH,UAAWpB,EAAQmL,eACpB,kBAACyB,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIvF,KAAM,SACNmJ,WAAY,CACRE,KAAK,EACLD,IAAI,GAERrI,MAAO8L,EAAMvB,KACb5P,SAAUgJ,EAAa,QACvBc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,8JAShB,kBAAC6E,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQiF,SAAUjC,EAAS1J,QAASmG,EAAStK,MAAM,WAAnD,gBAGA,kBAAC6K,GAAA,EAAD,CAAQiF,SAAUjC,EAAS5D,KAAM,SAAUjK,MAAM,WAAjD,mB,0BC/HdlC,GAAYC,aAAW,SAAAJ,GAAK,YAAK,CACnCd,MAAI,mBACCc,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BX,WAAY,MAFhB,6BAIc,IAJd,GAMJ4O,KAAM,CACF1Q,SAAU,IACV2Q,UAAW,GACXC,aAAc,IAElBC,cAAc,eACThQ,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BhC,QAAS,oBAGjB2Z,QAAS,CACLzJ,UAAW,IAEfjQ,QAAS,CACLD,QAASI,EAAMC,QAAQ,IAE3BuZ,eAAgB,CACZ9X,UAAW,OACXoO,UAAW9P,EAAMC,QAAQ,IAE7BwZ,UAAU,CACN3J,UAAU,QAIZ4J,GAAU,GAED,SAASC,KACpB,IAAM9U,EAAU1E,KADU,EAEI4E,oBAAS,GAFb,mBAEnBmL,EAFmB,KAEVC,EAFU,OAGJpL,mBAAS,GAHL,mBAGnB6U,EAHmB,KAGdC,EAHc,OAII9U,mBAAS,CACnC+U,eAAgB,IAChBC,cAAe,IACfC,SAAU,GACVC,MAAO,GACPC,OAAQ,GACRC,OAAQ,GACRC,aAAc,GACdC,cAAe,IACfC,iBAAkB,IAClBC,YAAa,IACbC,SAAU,IACVC,gBAAiB,KACjBC,UAAW,OAjBW,mBAInBtN,EAJmB,KAIV2D,EAJU,OAmBEhM,mBAAS,IAnBX,mBAmBnBqO,EAnBmB,KAmBXC,EAnBW,OAoBAtO,mBAAS,IApBT,mBAoBnB4V,EApBmB,KAoBZC,EApBY,OAqBI7V,oBAAS,GArBb,mBAqBnB8V,EArBmB,KAqBVC,EArBU,OAsBM/V,oBAAS,GAtBf,mBAsBnBgW,EAtBmB,KAsBTC,EAtBS,OAuBQjW,oBAAS,GAvBjB,mBAuBnBkW,EAvBmB,KAuBRC,EAvBQ,OAwBInW,mBAAS,IAxBb,mBAwBnBoW,EAxBmB,KAwBVC,EAxBU,OAyBUrW,mBAAS,IAzBnB,mBAyBnBsW,EAzBmB,KAyBPC,EAzBO,OA0BkBvW,oBAAS,GA1B3B,mBA0BnBwW,EA1BmB,KA0BHC,EA1BG,OA2BFzW,mBAAS,GA3BP,mBA2BnB0W,GA3BmB,KA2BbC,GA3Ba,QA4BN3W,mBAAS,IAAtB4W,GA5BmB,wBA6BA5W,mBAAS,GA7BT,qBA6BnB6W,GA7BmB,MA6BZC,GA7BY,MA+BpBnW,GAAWC,eACX8E,GAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKvI,GAA5B,OACIqD,GAASmF,aAAeH,EAAUC,EAAYC,EAAKvI,MACvD,CAACqD,KAGCoW,GAAiB,WACnBhR,KAAIoG,KAAK,qBAAsB,CAC3BuK,KAAMA,GACNM,UAAWJ,GACXK,SAAS,YAERhR,MAAK,SAAAC,GACFmQ,EAAWnQ,EAASC,KAAK5H,OACzBuY,GAAS5Q,EAASC,KAAK0Q,UAE1B5P,OAAM,SAAAC,GACHxB,GAAe,MAAO,QAASwB,EAAMC,QAAS,aAI1DnG,qBAAU,WACN,IAAMqG,EAAM6P,KAAKC,MAAM9O,EAAQqN,iBAC/BrO,EAAIhB,SAAQ,SAAAE,GACRoO,GAAQpO,EAAElD,IAAMkD,EAAEC,QAEtB8H,EAAUjH,KACX,CAACgB,EAAQqN,kBAEZ1U,qBAAU,WACN,IAAMqG,EAAM6P,KAAKC,MAAM9O,EAAQsN,WAC/BtO,EAAIhB,SAAQ,SAAAE,GACRoO,GAAQpO,EAAElD,IAAMkD,EAAEC,QAEtBqP,EAASxO,KACV,CAACgB,EAAQsN,YAEZ3U,qBAAU,WACM,IAAR6T,GACAkC,OAEL,CAAClC,EAAI6B,GAAKE,KAEb,IAgBM3K,GAAe,SAAAzF,GAAI,OAAI,SAAAtD,GACzB8I,EAAW,2BACJ3D,GADG,kBAEL7B,EAAOtD,EAAMgJ,OAAO5D,WAIvB8O,GAAoB,SAAA5Q,GAAI,OAAI,SAAAtD,GAC9B,IAAIoF,EAAQpF,EAAMgJ,OAAO5D,WACI/F,IAAzBW,EAAMgJ,OAAOuC,UACbnG,EAAQpF,EAAMgJ,OAAOuC,QAAU,IAAM,KAEzCzC,EAAW,2BACJ3D,GADG,kBAEL7B,EAAO8B,OAIhBtH,qBAAU,WACN+E,KAAIoG,KAAK,iBAAkB,CACvBC,KAAMC,OAAOD,KAAK/D,KAEjBpC,MAAK,SAAAC,GACF8F,EAAW9F,EAASC,SAEvBc,OAAM,SAAAC,GACHxB,GAAe,MAAO,QAASwB,EAAMC,QAAS,cAGvD,IAEH,IA4BMkQ,GAAmB,SAAC7Q,EAAMwM,GAC5B,IAAMvG,EAAS,GACfJ,OAAOD,KAAK/D,GAAShC,SAAQ,SAAAE,GACzBkG,EAAOhK,KAAK,CACRI,IAAK0D,EACL+B,MAAO/B,IAAMC,EAAOwM,EAAO3K,EAAQ9B,QAG3CR,KAAIqC,MAAM,iBAAkB,CACxBC,QAASoE,IAERxG,MAAK,WACFP,GAAe,MAAO,QAAS,iCAAS,cAE3CuB,OAAM,SAAAC,GACHxB,GAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACFmF,GAAW,OA4CvB,OACI,6BACI,kBAACzC,GAAA,EAAD,CAAO3F,QAAM,GACT,kBAACsU,GAAA,EAAD,CACIhP,MAAOuM,EACP0C,eAAe,UACfC,UAAU,UACVvU,SAAU,SAACsJ,EAAGjG,GAAJ,OAAUwO,EAAOxO,IAC3BmR,cAAc,QAEd,kBAACC,GAAA,EAAD,CAAK/N,MAAM,0CACX,kBAAC+N,GAAA,EAAD,CAAK/N,MAAM,uBACX,kBAAC+N,GAAA,EAAD,CAAK/N,MAAM,mCACX,kBAAC+N,GAAA,EAAD,CAAK/N,MAAM,wBAEf,yBAAKzI,UAAWpB,EAAQhF,SACX,IAAR+Z,GACG,0BAAMvI,SArFX,SAAAC,GACXA,EAAEC,iBACFpB,GAAW,GAxBM,WACjB,IAAMqB,EAAS,GACfJ,OAAOD,KAAK/D,GAAShC,SAAQ,SAAAE,GACzBkG,EAAOhK,KAAK,CACRI,IAAK0D,EACL+B,MAAOD,EAAQ9B,QAGvBR,KAAIqC,MAAM,iBAAkB,CACxBC,QAASoE,IAERxG,MAAK,WACFP,GAAe,MAAO,QAAS,iCAAS,cAE3CuB,OAAM,SAAAC,GACHxB,GAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACFmF,GAAW,MAOnBuM,IAkFwCzW,UAAWpB,EAAQ0U,SACvC,yBAAKtT,UAAWpB,EAAQ3F,MACpB,kBAACwH,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GAArC,wCAGA,yBAAK1H,UAAWpB,EAAQmL,eACpB,yBAAK/J,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACgC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIJ,QAEI,MADApG,EAAQ0M,eAGZ9R,SAAUmU,GACN,oBAIZzN,MAAM,mBAKU,MAA3BtB,EAAQ0M,gBACL,oCACI,yBAAK7T,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,WAGA,kBAACC,GAAA,EAAD,CACIxE,MAAOD,EAAQ6M,MACfjS,SAAUgJ,GACN,SAEJc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,gDAMR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,gCAGA,kBAACC,GAAA,EAAD,CACIxE,MAAOD,EAAQ8M,OACflS,SAAUgJ,GACN,UAEJgB,WAAS,EACT4D,QAAS,GACT9D,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,6JAKI,kBAACyL,GAAA,EAAD,CACI5C,OAAQ,SACR6C,KACI,2CAHR,oCAYZ,yBAAK7N,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACIxE,MAAOD,EAAQ+M,OACfnS,SAAUgJ,GACN,UAEJgB,WAAS,EACT4D,QAAS,GACT9D,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,6KAYxB,yBAAKnC,UAAWpB,EAAQ3F,MACpB,kBAACwH,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GAArC,kCAIA,yBAAK1H,UAAWpB,EAAQmL,eACpB,yBAAK/J,UAAWpB,EAAQgL,MACpB,kBAACqE,GAAA,EAAD,CAAOC,SAAS,QACZ,kBAACzN,EAAA,EAAD,CAAYC,QAAQ,SAApB,yDACc,IACV,kBAACkN,GAAA,EAAD,CACIC,KAAM,oBACN7C,OAAQ,UAFZ,SAKQ,IAPZ,wHAaR,yBAAKhL,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACgC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIJ,QAEI,MADApG,EAAQ2M,cAGZ/R,SAAUmU,GACN,mBAIZzN,MAAM,mBAKS,MAA1BtB,EAAQ2M,eACL,oCACI,yBAAK9T,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,sBAGA,kBAACC,GAAA,EAAD,CACIxE,MAAOD,EAAQ4M,SACfhS,SAAUgJ,GACN,YAEJc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,yEAOR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIxE,MACID,EAAQgN,aAEZpS,SAAUgJ,GACN,gBAEJc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,4EAWxB,yBAAKnC,UAAWpB,EAAQ3F,MACpB,kBAACwH,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GAArC,4BAGA,yBAAK1H,UAAWpB,EAAQmL,eACpB,yBAAK/J,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,2CAGA,kBAACC,GAAA,EAAD,CACIvF,KAAM,SACNmJ,WAAY,CACRE,KAAM,EACND,IAAK,GAETrI,MAAOD,EAAQoN,SACfxS,SAAUgJ,GACN,YAEJc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,oLAMR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACgC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIJ,QAEI,MADApG,EAAQiN,cAGZrS,SAAUmU,GACN,mBAIZzN,MAAM,+CAEV,kBAACqD,GAAA,EAAD,iKAMmB,MAA1B3E,EAAQiN,eACL,yBAAKpU,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4CAGA,kBAACC,GAAA,EAAD,CACIvF,KAAM,SACNmJ,WAAY,CACRE,KAAM,EACND,IAAK,EACLI,IAAK,KAETzI,MACID,EAAQkN,iBAEZtS,SAAUgJ,GACN,oBAEJc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,sJAOZ,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,qCAGA,kBAACC,GAAA,EAAD,CACIvF,KAAM,SACNmJ,WAAY,CACRE,KAAM,EACND,IAAK,GAETrI,MAAOD,EAAQmN,YACfvS,SAAUgJ,GACN,eAEJc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,wDAQhB,yBAAKnC,UAAWpB,EAAQ3F,MACpB,kBAACgO,GAAA,EAAD,CACIiF,SAAUjC,EACV5D,KAAM,SACN3F,QAAS,YACTtE,MAAO,WAJX,kBAYH,IAARuX,GACG,6BACI,kBAAC1M,GAAA,EAAD,CACI1G,QAAS,kBAAMsU,GAAW,IAC1BnU,QAAS,YACTtE,MAAO,aAHX,gBAOA,yBAAK4D,UAAWpB,EAAQ2U,gBACpB,kBAACmD,GAAA,EAAD,CAAOlO,KAAK,SACR,kBAACmO,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,qBACA,kBAACA,GAAA,EAAD,qBACA,kBAACA,GAAA,EAAD,qBACA,kBAACA,GAAA,EAAD,qBACA,kBAACA,GAAA,EAAD,uBAGR,kBAACC,GAAA,EAAD,KACKpC,EAAMvT,KAAI,SAAA4V,GAAG,OACV,kBAACH,GAAA,EAAD,CAAUjV,IAAKoV,EAAI5U,IACf,kBAAC0U,GAAA,EAAD,CACInO,UAAU,KACVsO,MAAM,OAELD,EAAIzR,MAET,kBAACuR,GAAA,EAAD,cACME,EAAInF,MAAQ,IACC,IAAdmF,EAAIlF,OACD,WACIkF,EAAIlF,MACJ,iBAEZ,kBAACgF,GAAA,EAAD,KACK1G,KAAK8G,KACFF,EAAIpF,KAAO,OAFnB,UAMA,kBAACkF,GAAA,EAAD,KACKK,aAAaH,EAAIvO,OAEtB,kBAACqO,GAAA,EAAD,KACI,kBAACxW,EAAA,EAAD,CACIE,QAAS,kBAtY1C,SAAA4B,GACf,IAAIgV,EAAQ,aAAOzC,GACnByC,EAAWA,EAASC,QAAO,SAAAhS,GACvB,OAAOA,EAAEjD,KAAOA,KAEpBwS,EAASwC,GACT,IAAME,EAAcrB,KAAKsB,UAAUH,GACnCrM,EAAW,2BAAK3D,GAAN,IAAesN,UAAW4C,KACpClB,GAAiB,YAAakB,GA+XsBE,CAAWR,EAAI5U,KAEnBqG,KAAM,SAEN,kBAACgP,GAAA,EAAD,gBAW3B,IAAR7D,GACG,6BACI,kBAAC1M,GAAA,EAAD,CACI1G,QAAS,kBAAMwU,GAAY,IAC3BrU,QAAS,YACTtE,MAAO,aAHX,gBAOA,yBAAK4D,UAAWpB,EAAQ2U,gBACpB,kBAACmD,GAAA,EAAD,CAAOlO,KAAK,SACR,kBAACmO,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,qBACA,kBAACA,GAAA,EAAD,qBACA,kBAACA,GAAA,EAAD,qBACA,kBAACA,GAAA,EAAD,qBACA,kBAACA,GAAA,EAAD,uBAGR,kBAACC,GAAA,EAAD,KACK3J,EAAOhM,KAAI,SAAA4V,GAAG,OACX,kBAACH,GAAA,EAAD,CAAUjV,IAAKoV,EAAI5U,IACf,kBAAC0U,GAAA,EAAD,CACInO,UAAU,KACVsO,MAAM,OAELD,EAAIzR,MAET,kBAACuR,GAAA,EAAD,cACME,EAAInF,MAAQ,IACC,IAAdmF,EAAIlF,OACD,WACIkF,EAAIlF,MACJ,iBAEZ,kBAACgF,GAAA,EAAD,KACK1G,KAAK8G,KACFF,EAAIpF,KAAO,OAFnB,UAMA,kBAACkF,GAAA,EAAD,KACKE,EAAIxE,UACC,SACA,UAEV,kBAACsE,GAAA,EAAD,KACI,kBAACxW,EAAA,EAAD,CACIE,QAAS,kBA5bzC,SAAA4B,GAChB,IAAIsV,EAAS,aAAOtK,GACpBsK,EAAYA,EAAUL,QAAO,SAAAhS,GACzB,OAAOA,EAAEjD,KAAOA,KAEpBiL,EAAUqK,GACV,IAAMJ,EAAcrB,KAAKsB,UAAUG,GACnC3M,EAAW,2BAAK3D,GAAN,IAAeqN,gBAAiB6C,KAC1ClB,GAAiB,kBAAmBkB,GAqbgBK,CAAYX,EAAI5U,KAEpBqG,KAAM,SAEN,kBAACgP,GAAA,EAAD,gBAW3B,IAAR7D,GACG,6BACI,kBAAC1M,GAAA,EAAD,CACI1G,QAAS,kBAAM0U,GAAa,IAC5BvU,QAAS,YACTtE,MAAO,aAHX,gBAOA,yBAAK4D,UAAWpB,EAAQ2U,gBACpB,kBAACmD,GAAA,EAAD,CAAOlO,KAAK,SACR,kBAACmO,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,UACA,kBAACA,GAAA,EAAD,2BACA,kBAACA,GAAA,EAAD,qBACA,kBAACA,GAAA,EAAD,2BACA,kBAACA,GAAA,EAAD,qBACA,kBAACA,GAAA,EAAD,uBAGR,kBAACC,GAAA,EAAD,KACK5B,EAAQ/T,KAAI,SAAA4V,GAAG,OACZ,kBAACH,GAAA,EAAD,CAAUjV,IAAKoV,EAAIjJ,IACf,kBAAC+I,GAAA,EAAD,CACInO,UAAU,KACVsO,MAAM,OAELD,EAAIjJ,IAET,kBAAC+I,GAAA,EAAD,KACuB,IAAlBE,EAAIY,WAAkB,oBACItW,IAA1BoS,GAAQsD,EAAIY,YAA2B,oCAAGlE,GAAQsD,EAAIY,YACpC,IAAlBZ,EAAIY,YAAoBlE,GAAQsD,EAAIY,YAAc,kCAEvD,kBAACd,GAAA,EAAD,KACKE,EAAIa,KAET,kBAACf,GAAA,EAAD,KACKE,EAAIc,MAET,kBAAChB,GAAA,EAAD,KACME,EAAIe,KAEF,kBAACC,GAAA,EAAD,CAAK3b,MAAM,gBAAX,sBADA,kBAAC2b,GAAA,EAAD,CAAK3b,MAAM,gBAAX,uBAIR,kBAACya,GAAA,EAAD,KACI,kBAACxW,EAAA,EAAD,CACIE,QAAS,kBA3nBxC4B,EA4nBgD4U,EAAIjJ,QA3nBrEjJ,KAAImT,OAAO,iBAAiB7V,GACvB4C,MAAK,WACF8Q,QAEH9P,OAAM,SAAAC,GACHxB,GAAe,MAAO,QAASwB,EAAMC,QAAS,YANrC,IAAA9D,GA8nB+BqG,KAAM,SAEN,kBAACgP,GAAA,EAAD,eAQ5B,yBAAKxX,UAAWpB,EAAQ4U,WACpB,kBAACyE,GAAA,EAAD,CACIC,MAAO/H,KAAK8G,KAAKtB,GAAQD,IACzB3T,SAAU,SAACsJ,EAAEjG,GAAH,OAAOqQ,GAAQrQ,IACzBhJ,MAAM,gBAMtB,kBAACsV,GAAD,CACItG,SAljBE,SAAA0G,GAClB+C,GAAW,GACX,IAAMsC,EAAQ,uBAAOzC,GAAP,CAAc5C,IAC5B6C,EAASwC,GACT,IAAME,EAAcrB,KAAKsB,UAAUH,GACnCrM,EAAW,2BAAK3D,GAAN,IAAesN,UAAW4C,KACpClB,GAAiB,YAAakB,IA6iBdpY,KAAM2V,EACNlO,QAAS,kBAAMmO,GAAW,MAE9B,kBAACzC,GAAD,CACIhH,SA9iBG,SAAAoH,GACnBuC,GAAY,GACZ,IAAMoD,EAAQ,uBAAOhL,GAAP,CAAeqF,IAC7BpF,EAAU+K,GACV,IAAMC,EAAepC,KAAKsB,UAAUa,GACpCrN,EAAW,2BAAK3D,GAAN,IAAeqN,gBAAiB4D,KAC1CjC,GAAiB,kBAAmBiC,IAyiBpBnZ,KAAM6V,EACNpO,QAAS,kBAAMqO,GAAY,MAE/B,kBAACjC,GAAD,CACI7T,KAAM+V,EACNhC,UAppBI,SAAAqF,GACpBhD,EAAcgD,GACd9C,GAAkB,GAClBM,MAkpBgB9C,SAAQ,uBAAQ5F,GAAR,aAAkBuH,IAC1BhO,QAAS,kBAAMuO,GAAa,MAEhC,kBAAC9I,GAAD,CACIvQ,MAAO,2BACPqD,KAAMqW,EACN3Q,IAAKyQ,EAAWjU,KAAI,SAACiE,EAAEC,GAAH,OAAQ,yBAAK1D,IAAK0D,GAAID,MAC1CsB,QAAS,WACL6O,GAAkB,GAClBF,EAAc,U,yDCryBpCnb,GAAYC,aAAW,SAAAJ,GAAK,MAAK,CACnCue,OAAQ,CACJ,QAAS,CACLnf,UAAW,mBAEf0Q,UAAW9P,EAAMC,QAAQ,IAE7B,UAAW,CACP,0BAA2B,CACvBb,UAAW,oBAGnBof,UAAW,CACPnW,OAAQ,GACRhI,MAAO,QAEXoe,IAAK,CACDC,UAAW,aAIJ,SAASC,GAAT,GAAkD,IAA3BzZ,EAA0B,EAA1BA,KAAMyH,EAAoB,EAApBA,QAAQ0E,EAAY,EAAZA,SAC1CxM,EAAU1E,KAD4C,EAElC4E,mBAAS,CAC/BzC,QAAS,CACLW,QAAS,CACLC,KAAM,UACN0b,aAAc,QAElBpc,UAAW,CACPU,KAAM,UACN0b,aAAc,WAVkC,mBAErD5e,EAFqD,KAE9C6e,EAF8C,KAetDC,EAAWjZ,uBAAY,WACzB,OAAOkZ,aAAe/e,KACvB,CAACA,IAEJ,OACI,kBAAC0M,GAAA,EAAD,CAAQxH,KAAMA,EAAMyH,QAASA,EAAS+E,WAAS,EAACvS,SAAU,MACtD,kBAAC4N,GAAA,EAAD,KACI,kBAACP,GAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,GAAA,EAAD,CAAMvM,QAAS,EAAGuN,GAAI,EAAGD,GAAI,GAAId,WAAS,GACtC,kBAACD,GAAA,EAAD,CAAMgB,GAAI,EAAGD,GAAI,GAAIlG,MAAI,GACrB,kBAACX,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GAArC,sBAGA,kBAAC2H,GAAA,EAAD,CACIjI,MAAOrN,EAAMsC,QAAQW,QAAQC,KAC7B8E,SAAU,SAAAsJ,GACNuN,EAAS,2BACF7e,GADC,IAEJsC,QAAQ,2BACDtC,EAAMsC,SADN,IAEHW,QAAQ,2BACDjD,EAAMsC,QAAQW,SADd,IAEHC,KAAMoO,EAAEL,OAAO5D,cAK/BqE,WAAS,IAEb,yBAAKzL,UAAWpB,EAAQ0Z,QACpB,kBAAC,iBAAD,CACIS,OAAQ,CACJ,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEJ3c,MAAOrC,EAAMsC,QAAQW,QAAQC,KAC7B+b,iBAAkB,SAACC,GACfL,EAAS,2BACF7e,GADC,IAEJsC,QAAQ,2BACDtC,EAAMsC,SADN,IAEHW,QAAQ,2BACDjD,EAAMsC,QAAQW,SADd,IAEHC,KAAMgc,EAAEC,gBAQpC,kBAAC3S,GAAA,EAAD,CAAMgB,GAAI,EAAGD,GAAI,GAAIlG,MAAI,GACrB,kBAACX,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GAArC,sBAGA,kBAAC2H,GAAA,EAAD,CACIjI,MAAOrN,EAAMsC,QAAQE,UAAUU,KAC/B8E,SAAU,SAAAsJ,GACNuN,EAAS,2BACF7e,GADC,IAEJsC,QAAQ,2BACDtC,EAAMsC,SADN,IAEHE,UAAU,2BACHxC,EAAMsC,QAAQE,WADZ,IAELU,KAAMoO,EAAEL,OAAO5D,cAK/BqE,WAAS,IAEb,yBAAKzL,UAAWpB,EAAQ0Z,QACpB,kBAAC,iBAAD,CACIS,OAAQ,CACJ,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEJ3c,MAAOrC,EAAMsC,QAAQE,UAAUU,KAC/B+b,iBAAkB,SAACC,GACfL,EAAS,2BACF7e,GADC,IAEJsC,QAAQ,2BACDtC,EAAMsC,SADN,IAEHE,UAAU,2BACHxC,EAAMsC,QAAQE,WADZ,IAELU,KAAMgc,EAAEC,gBAQpC,kBAAC3S,GAAA,EAAD,CAAMgB,GAAI,EAAGD,GAAI,GAAIlG,MAAI,GACrB,kBAACX,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GAArC,kCAGA,kBAAC2H,GAAA,EAAD,CACIjI,MAAOrN,EAAMsC,QAAQW,QAAQ2b,aAC7B5W,SAAU,SAAAsJ,GACNuN,EAAS,2BACF7e,GADC,IAEJsC,QAAQ,2BACDtC,EAAMsC,SADN,IAEHW,QAAQ,2BACDjD,EAAMsC,QAAQW,SADd,IAEH2b,aAActN,EAAEL,OAAO5D,cAKvCqE,WAAS,IAEb,yBAAKzL,UAAWpB,EAAQ0Z,QACpB,kBAAC,iBAAD,CACIlc,MAAOrC,EAAMsC,QAAQW,QAAQ2b,aAC7BK,iBAAkB,SAACC,GACfL,EAAS,2BACF7e,GADC,IAEJsC,QAAQ,2BACDtC,EAAMsC,SADN,IAEHW,QAAQ,2BACDjD,EAAMsC,QAAQW,SADd,IAEH2b,aAAcM,EAAEC,gBAQ5C,kBAAC3S,GAAA,EAAD,CAAMgB,GAAI,EAAGD,GAAI,GAAIlG,MAAI,GACrB,kBAACX,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GAArC,kCAGA,kBAAC2H,GAAA,EAAD,CACIjI,MAAOrN,EAAMsC,QAAQE,UAAUoc,aAC/B5W,SAAU,SAAAsJ,GACNuN,EAAS,2BACF7e,GADC,IAEJsC,QAAQ,2BACDtC,EAAMsC,SADN,IAEHE,UAAU,2BACHxC,EAAMsC,QAAQE,WADZ,IAELoc,aAActN,EAAEL,OAAO5D,cAKvCqE,WAAS,IAEb,yBAAKzL,UAAWpB,EAAQ0Z,QACpB,kBAAC,iBAAD,CACIlc,MAAOrC,EAAMsC,QAAQE,UAAUoc,aAC/BK,iBAAkB,SAACC,GACfL,EAAS,2BACF7e,GADC,IAEJsC,QAAQ,2BACDtC,EAAMsC,SADN,IAEHE,UAAU,2BACHxC,EAAMsC,QAAQE,WADZ,IAELoc,aAAcM,EAAEC,iBAShD,kBAAC3S,GAAA,EAAD,CAAMvM,QAAS,EAAGuN,GAAI,EAAGD,GAAI,IACzB,kBAAC6R,GAAA,EAAD,CAAepf,MAAO8e,KAClB,yBACI7Y,UAAWpB,EAAQ2Z,UACnBvP,MAAO,CACHvM,gBAAiBoc,IAAWxc,QAAQW,QAC/Boc,QAGb,kBAACnZ,EAAA,EAAD,CAAQC,SAAS,UACb,kBAACE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIG,KAAK,QACLR,UAAWpB,EAAQ1D,WACnBkB,MAAM,UACNkE,aAAW,QAEX,kBAAC,KAAD,OAEJ,kBAACG,EAAA,EAAD,CACIC,QAAQ,KACRV,UAAWpB,EAAQhD,OAFvB,WAQR,yBAAKoN,MAAO,CAAErP,QAAS,KACnB,kBAAC0V,GAAA,EAAD,CACI5D,WAAS,EACTrP,MAAO,YACPqM,MAAO,6BAEX,yBACIzI,UAAWpB,EAAQ4Z,IACnBxP,MAAO,CAAEpM,WAAY,KAErB,kBAACyc,GAAA,EAAD,CAAKjd,MAAM,YAAYkE,aAAW,OAC9B,kBAACgZ,GAAA,EAAD,aAQ5B,kBAACtS,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQ1G,QAASmG,EAAStK,MAAM,WAAhC,gBAGA,kBAAC6K,GAAA,EAAD,CAAQ1G,QAAS,kBAAI6K,EAASrR,IAAQqC,MAAM,WAA5C,kBC7ThB,IAAMlC,GAAYC,aAAW,SAAAJ,GAAK,YAAK,CACnCd,MAAI,mBACCc,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BX,WAAY,MAFhB,6BAIc,IAJd,GAMJ4O,KAAM,CACF1Q,SAAU,IACV2Q,UAAW,GACXC,aAAc,IAElBC,cAAc,eACThQ,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BhC,QAAS,oBAGjB4f,eAAgB,CACZlgB,QAAS,QAEbmgB,SAAU,CACNpf,MAAO,GACPgI,OAAQ,GACRqX,aAAc,MACdze,WAAY,OAIL,SAAS0e,KACpB,IAAM9a,EAAU1E,KADY,EAEE4E,oBAAS,GAFX,mBAErBmL,EAFqB,KAEZC,EAFY,OAGFpL,mBAAS,IAHP,mBAGrB/E,EAHqB,KAGd6e,EAHc,OAIE9Z,mBAAS,CACnC6a,OAAQ,KACRC,aAAa,GACbC,iBAAiB,OACjBC,kBAAkB,SARM,mBAIrB3S,EAJqB,KAIZ2D,EAJY,OAUUhM,mBAAS,IAVnB,mBAUrBib,EAVqB,KAURC,EAVQ,OAWoBlb,mBAAS,IAX7B,mBAWrBmb,EAXqB,KAWHC,EAXG,OAYApb,oBAAS,GAZT,mBAYrBpE,EAZqB,KAYbyf,EAZa,KActB1a,EAAWC,eACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKvI,GAA5B,OACIqD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKvI,MACvD,CAACqD,IAsCLK,qBAAU,WACN,IAAMqG,EAAM6P,KAAKC,MAAM9O,EAAQwS,QACzBS,EAAc,GAEpBjP,OAAOD,KAAK/E,GAAKhF,KAAI,SAAAkE,GACjB+U,EAAY/U,GAAK2Q,KAAKsB,UAAUnR,EAAId,OAGxCuT,EAASzS,GACT6T,EAAeI,KAChB,CAACjT,EAAQwS,SAEZ,IAAM5O,EAAe,SAAAzF,GAAI,OAAI,SAAAtD,GACzB8I,EAAW,2BACJ3D,GADG,kBAEL7B,EAAOtD,EAAMgJ,OAAO5D,WAI7BtH,qBAAU,WACN+E,KAAIoG,KAAK,iBAAkB,CACvBC,KAAMC,OAAOD,KAAK/D,KAEjBpC,MAAK,SAAAC,GACF8F,EAAW9F,EAASC,SAEvBc,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,cAGvD,IA0BH,OACI,6BACI,0BAAMmF,SA1BC,SAAAC,GACXA,EAAEC,iBACFpB,GAAW,GACX,IAAMqB,EAAS,GACfJ,OAAOD,KAAK/D,GAAShC,SAAQ,SAAAE,GACzBkG,EAAOhK,KAAK,CACRI,IAAK0D,EACL+B,MAAOD,EAAQ9B,QAGvBR,KAAIqC,MAAM,iBAAkB,CACxBC,QAASoE,IAERxG,MAAK,WACFP,EAAe,MAAO,QAAS,iCAAS,cAE3CuB,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACFmF,GAAW,QAQX,yBAAKlK,UAAWpB,EAAQ3F,MACpB,kBAACwH,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GAArC,4BAGA,yBAAK1H,UAAWpB,EAAQmL,eACpB,yBAAK/J,UAAWpB,EAAQgL,MACpB,kBAAC8M,GAAA,EAAD,CAAOpW,aAAW,gBACd,kBAACqW,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,2BACA,kBAACA,GAAA,EAAD,iCACA,kBAACA,GAAA,EAAD,uBAGR,kBAACC,GAAA,EAAD,KACK3L,OAAOD,KAAKnR,GAAOoH,KAAI,SAAAkE,GAAC,OACrB,kBAACuR,GAAA,EAAD,CAAUjV,IAAK0D,GACX,kBAACwR,GAAA,EAAD,CACInO,UAAU,KACVsO,MAAM,OAEN,yBACIhX,UACIpB,EAAQ2a,gBAGZ,yBACIvQ,MAAO,CACHvM,gBACI1C,EAAMsL,GAAGhJ,QACJW,QACAC,MAEb+C,UACIpB,EAAQ4a,WAGhB,yBACIxQ,MAAO,CACHvM,gBACI1C,EAAMsL,GAAGhJ,QACJE,UACAU,MAEb+C,UACIpB,EAAQ4a,aAKxB,kBAAC3C,GAAA,EAAD,KACI,kBAACxH,GAAA,EAAD,CACIrJ,MAAOiU,EAAiB5U,GACxBgV,WACIJ,EAAiB5U,IACjB,iCAEJoG,WAAS,EACTM,WAAS,EACThK,SAAU,SAAAsJ,GACN2O,EAAe,2BACRD,GADO,kBAET1U,EAAIgG,EAAEL,OAAO5D,UAGtBkT,OAAQ,SAAAjP,GACJ,IACI,IAAMlF,EAAM6P,KAAKC,MACb5K,EAAEL,OAAO5D,OAEb,KACM,YAAajB,MACb,YAAaA,EAAI9J,YACjB,SAAU8J,EAAI9J,QAAQW,YACtB,cAAemJ,EAAI9J,YACnB,SAAU8J,EAAI9J,QAAQE,WAExB,KAAM,QAEVqc,EAAS,2BACF7e,GADC,kBAEHsL,EAAIc,KAEX,MAAOkF,GAOL,YANA6O,EAAoB,2BAETD,GAFQ,kBAGV5U,GAAI,KAKjB6U,EAAoB,2BACbD,GADY,kBAEd5U,GAAI,MAGb+B,MAAO2S,EAAY1U,MAG3B,kBAACwR,GAAA,EAAD,KACI,kBAACxW,EAAA,EAAD,CAAYE,QAAS,kBApM7C,SAAAnE,GAChB,GAAGA,IAAU+K,EAAQyS,aAIrB,GAAIzO,OAAOD,KAAKnR,GAAO2Y,QAAS,EAC5BlO,EAAe,MAAO,QAAS,qEAAe,eADlD,CAIA,IAAM+V,EAAS,eAAOxgB,UACfwgB,EAAUne,GACjB,IAAMoe,EAASxE,KAAKsB,UAAUiD,GAC9BzP,EAAW,2BACJ3D,GADG,IAENwS,OAAOa,UAZPhW,EAAe,MAAO,QAAS,mDAAY,WAkMkBiW,CAAYpV,KACjC,kBAACmS,GAAA,EAAD,cAOxB,6BACI,kBAACvQ,GAAA,EAAD,CACIvG,QAAQ,WACRtE,MAAM,UACN4M,MAAO,CAACa,UAAU,GAClBtJ,QAAS,kBAAI4Z,GAAU,KAJ3B,yCASJ,kBAAClM,GAAA,EAAD,CAAOC,SAAS,OAAOlF,MAAO,CAACa,UAAU,IACrC,kBAACpJ,EAAA,EAAD,CAAYC,QAAQ,SAApB,oDACc,IACV,kBAACkN,GAAA,EAAD,CACIC,KAAM,0DACN7C,OAAQ,UAFZ,0CAKQ,IAPZ,wBAcR,yBAAKhL,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACK,GAAA,EAAD,CACI5E,MAAOD,EAAQyS,aACf7X,SAAUgJ,EAAa,iBAEtBI,OAAOD,KAAKnR,GAAOoH,KAAI,SAAAkE,GAAC,OACrB,kBAAC4G,GAAA,EAAD,CAAUtK,IAAK0D,EAAG+B,MAAO/B,GACrB,yBACIrF,UACIpB,EAAQ2a,gBAGZ,yBACIvQ,MAAO,CACHvM,gBACA1C,EAAMsL,GAAGhJ,QACJW,QACAC,MAET+C,UACIpB,EAAQ4a,WAGhB,yBACIxQ,MAAO,CACHvM,gBACA1C,EAAMsL,GAAGhJ,QACJE,UACAU,MAET+C,UACIpB,EAAQ4a,iBAOhC,kBAAC1N,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,4IAShB,yBAAKnC,UAAWpB,EAAQ3F,MACpB,kBAACwH,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GAArC,gBAIA,yBAAK1H,UAAWpB,EAAQmL,eACpB,yBAAK/J,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAApB,gEAGA,kBAACK,GAAA,EAAD,CACI5E,MAAOD,EAAQ0S,iBACf9X,SAAUgJ,EAAa,oBACvBc,UAAQ,GAER,kBAACI,GAAA,EAAD,CAAU7E,MAAO,QAAjB,sBACA,kBAAC6E,GAAA,EAAD,CAAU7E,MAAO,aAAjB,sBACA,kBAAC6E,GAAA,EAAD,CAAU7E,MAAO,QAAjB,iBAEJ,kBAAC0E,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,iJAOZ,yBAAKnC,UAAWpB,EAAQmL,eACpB,yBAAK/J,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAApB,sEAGA,kBAACK,GAAA,EAAD,CACI5E,MAAOD,EAAQ2S,kBACf/X,SAAUgJ,EAAa,qBACvBc,UAAQ,GAER,kBAACI,GAAA,EAAD,CAAU7E,MAAO,QAAjB,sBACA,kBAAC6E,GAAA,EAAD,CAAU7E,MAAO,aAAjB,sBACA,kBAAC6E,GAAA,EAAD,CAAU7E,MAAO,QAAjB,iBAEJ,kBAAC0E,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,4IAShB,yBAAKnC,UAAWpB,EAAQ3F,MACpB,kBAACgO,GAAA,EAAD,CACIiF,SAAUjC,EACV5D,KAAM,SACN3F,QAAS,YACTtE,MAAO,WAJX,kBAWR,kBAACsc,GAAD,CAAatN,SArUJ,SAAAsP,GAEb,GADAP,GAAU,QACmC9Y,IAAzCtH,EAAM2gB,EAASre,QAAQW,QAAQC,MAAnC,CAIA,IAAMkJ,EAAG,2BACFpM,GADE,kBAEJ2gB,EAASre,QAAQW,QAAQC,KAAMyd,IAE9BF,EAASxE,KAAKsB,UAAUnR,GAC9B2E,EAAW,2BACJ3D,GADG,IAENwS,OAAOa,UAVPhW,EAAe,MAAO,QAAS,2EAAgB,YAkUdvF,KAAMvE,EAAQgM,QAAS,kBAAIyT,GAAU,OClZlF,IAAMjgB,GAAYC,aAAW,SAAAJ,GAAK,YAAK,CACnCd,MAAI,mBACCc,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BX,WAAY,MAFhB,6BAIc,IAJd,GAMJ4O,KAAM,CACF1Q,SAAU,IACV2Q,UAAW,GACXC,aAAc,IAElBC,cAAc,eACThQ,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BhC,QAAS,wBAKN,SAASghB,KACpB,IAAM/b,EAAU1E,KADY,EAEE4E,oBAAS,GAFX,mBAErBmL,EAFqB,KAEZC,EAFY,OAGEpL,mBAAS,CACnC8b,aAAa,GACbC,YAAY,GACZC,gBAAgB,GAChBC,cAAc,GACdC,eAAe,IACfC,mBAAmB,MATK,mBAGrB9T,EAHqB,KAGZ2D,EAHY,KAYtBC,EAAe,SAAAzF,GAAI,OAAI,SAAAtD,GACzB8I,EAAW,2BACJ3D,GADG,kBAEL7B,EAAOtD,EAAMgJ,OAAO5D,WAIvB3H,EAAWC,eACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKvI,GAA5B,OACIqD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKvI,MACvD,CAACqD,IAGLK,qBAAU,WACN+E,KAAIoG,KAAK,iBAAkB,CACvBC,KAAMC,OAAOD,KAAK/D,KAEjBpC,MAAK,SAAAC,GACF8F,EAAW9F,EAASC,SAEvBc,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,cAGvD,IAqDH,OACI,6BACI,0BAAMmF,SA1BC,SAAAC,GACXA,EAAEC,iBACFpB,GAAW,GACX,IAAMqB,EAAS,GACfJ,OAAOD,KAAK/D,GAAShC,SAAQ,SAAAE,GACzBkG,EAAOhK,KAAK,CACRI,IAAI0D,EACJ+B,MAAMD,EAAQ9B,QAGtBR,KAAIqC,MAAM,iBAAiB,CACvBC,QAAQoE,IAEPxG,MAAK,WACFP,EAAe,MAAO,QAAS,iCAAS,WAxChDK,KAAIC,IAAI,uBAEHC,MAAK,eACLgB,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAGjDlB,MAAK,kBAoCLgB,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAC/ClB,MAAK,WACJmF,GAAW,QAOX,yBAAKlK,UAAWpB,EAAQ3F,MACpB,kBAACwH,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GAArC,SAIA,yBAAK1H,UAAWpB,EAAQmL,eACpB,yBAAK/J,UAAWpB,EAAQgL,MACpB,kBAACqE,GAAA,EAAD,CAAOC,SAAS,OAAOlF,MAAO,CAACa,UAAU,IACrC,kBAACpJ,EAAA,EAAD,CAAYC,QAAQ,SAApB,8DACwB,IACpB,kBAACkN,GAAA,EAAD,CACIC,KAAM,2BACN7C,OAAQ,UAFZ,SAKQ,IAPZ,gSAcR,yBAAKhL,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,sCAGA,kBAACC,GAAA,EAAD,CACIvF,KAAM,MACNe,MAAOD,EAAQyT,aACf7Y,SAAUgJ,EAAa,kBAE3B,kBAACe,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,oMAMR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,cAGA,kBAACC,GAAA,EAAD,CACIxE,MAAOD,EAAQ0T,YACf9Y,SAAUgJ,EAAa,iBAE3B,kBAACe,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,2JAMR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,wCAGA,kBAACC,GAAA,EAAD,CACIxE,MAAOD,EAAQ2T,gBACf/Y,SAAUgJ,EAAa,qBAE3B,kBAACe,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,qEACe,4DADf,4HAMR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,iDAGA,kBAACC,GAAA,EAAD,CACIvF,KAAM,SACNmJ,WAAY,CACRE,KAAK,EACLD,IAAI,GAER5D,UAAQ,EACRzE,MAAOD,EAAQ6T,eACfjZ,SAAUgJ,EAAa,oBAE3B,kBAACe,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,qGAMR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,yCAGA,kBAACC,GAAA,EAAD,CACIvF,KAAM,SACNmJ,WAAY,CACRE,KAAK,EACLD,IAAI,GAER5D,UAAQ,EACRzE,MAAOD,EAAQ8T,mBACflZ,SAAUgJ,EAAa,wBAE3B,kBAACe,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,6EAMR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,wCAGA,kBAACC,GAAA,EAAD,CACIG,WAAS,EACTF,UAAQ,EACRzE,MAAOD,EAAQ4T,cACfhZ,SAAUgJ,EAAa,mBAE3B,kBAACe,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,qWAShB,yBAAKnC,UAAWpB,EAAQ3F,MACpB,kBAACgO,GAAA,EAAD,CACIiF,SAAUjC,EACV5D,KAAM,SACN3F,QAAS,YACTtE,MAAO,WAJX,gBAQA,kBAAC6K,GAAA,EAAD,CACI+B,MAAO,CAAChO,WAAW,GACnBkR,SAAUjC,EACV1J,QAAS,kBAxLzB2J,GAAW,QACXrF,KAAIoG,KAAK,oBAAoB,CACzBiQ,OAAO/T,EAAQyT,aACfO,MAAMhU,EAAQ0T,cAEb9V,MAAK,SAAAC,GACFR,EAAe,MAAO,QAAS,+DAAkBQ,EAASC,KAAM,cAEnEc,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAC/ClB,MAAK,WACRmF,GAAW,OA8KCxJ,QAAS,WACTtE,MAAO,aALX,+BC1PpB,IAAMlC,GAAYC,aAAW,SAAAJ,GAAK,YAAK,CACnCd,MAAI,mBACCc,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BX,WAAY,MAFhB,6BAIc,IAJd,GAMJ4O,KAAM,CACF1Q,SAAU,IACV2Q,UAAW,GACXC,aAAc,IAElBC,cAAc,eACThQ,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BhC,QAAS,wBAKN,SAASyhB,KACpB,IAAMxc,EAAU1E,KADmB,EAEL4E,oBAAS,GAFJ,mBAE5BmL,EAF4B,KAEnBC,EAFmB,OAGLpL,mBAAS,CACnCuc,gBAAgB,GAChBC,YAAY,GACZC,YAAY,GACZC,cAAc,GACdC,cAAc,GACdC,cAAc,GACdC,YAAY,GACZC,aAAa,GACbC,eAAe,IACfC,cAAc,IACdC,aAAa,IACbC,mBAAmB,KAfY,mBAG5B7U,EAH4B,KAGnB2D,EAHmB,KAkB7BC,EAAe,SAAAzF,GAAI,OAAI,SAAAtD,GACzB8I,EAAW,2BACJ3D,GADG,kBAEL7B,EAAOtD,EAAMgJ,OAAO5D,WAIvB3H,EAAWC,eACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKvI,GAA5B,OACIqD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKvI,MACvD,CAACqD,IAGLK,qBAAU,WACN+E,KAAIoG,KAAK,iBAAkB,CACvBC,KAAMC,OAAOD,KAAK/D,KAEjBpC,MAAK,SAAAC,GACF8F,EAAW9F,EAASC,SAEvBc,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,cAGvD,IA0BH,OACI,6BACI,0BAAMmF,SAzBC,SAAAC,GACXA,EAAEC,iBACFpB,GAAW,GACX,IAAMqB,EAAS,GACfJ,OAAOD,KAAK/D,GAAShC,SAAQ,SAAAE,GACzBkG,EAAOhK,KAAK,CACRI,IAAI0D,EACJ+B,MAAMD,EAAQ9B,QAGtBR,KAAIqC,MAAM,iBAAiB,CACvBC,QAAQoE,IAEPxG,MAAK,WACFP,EAAe,MAAO,QAAS,iCAAS,cAE3CuB,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAC/ClB,MAAK,WACJmF,GAAW,QAQX,yBAAKlK,UAAWpB,EAAQ3F,MACpB,kBAACwH,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GAArC,gBAGA,yBAAK1H,UAAWpB,EAAQmL,eACpB,yBAAK/J,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,+BAGA,kBAACC,GAAA,EAAD,CACIvF,KAAM,MACNe,MAAOD,EAAQkU,gBACftZ,SAAUgJ,EAAa,mBACvBc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,yGAMR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,wCAGA,kBAACC,GAAA,EAAD,CACIxE,MAAOD,EAAQmU,YACfvZ,SAAUgJ,EAAa,eACvBc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,0FAMR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACmE,GAAD,CACIxI,MAAOD,EAAQoU,YACfxZ,SAAUgJ,EAAa,eACvBc,UAAQ,EACR4D,IAAK,EACLI,IAAK,WACLpH,MAAO,qDAEX,kBAACqD,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,0FAMR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACIvF,KAAM,SACNmJ,WAAY,CACRC,IAAI,EACJC,KAAK,GAETtI,MAAOD,EAAQuU,cACf3Z,SAAUgJ,EAAa,iBACvBc,UAAQ,MAKpB,yBAAK7L,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACIvF,KAAM,SACNmJ,WAAY,CACRC,IAAI,EACJC,KAAK,GAETtI,MAAOD,EAAQsU,cACf1Z,SAAUgJ,EAAa,iBACvBc,UAAQ,MAKpB,yBAAK7L,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACIvF,KAAM,SACNmJ,WAAY,CACRC,IAAI,EACJC,KAAK,GAETtI,MAAOD,EAAQqU,cACfzZ,SAAUgJ,EAAa,iBACvBc,UAAQ,QAQ5B,yBAAK7L,UAAWpB,EAAQ3F,MACpB,kBAACwH,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GAArC,sBAIA,yBAAK1H,UAAWpB,EAAQmL,eACpB,yBAAK/J,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAApB,gBAGA,kBAACC,GAAA,EAAD,CACIvF,KAAM,SACNmJ,WAAY,CACRC,IAAI,EACJC,KAAK,GAETtI,MAAOD,EAAQwU,YACf5Z,SAAUgJ,EAAa,eACvBc,UAAQ,OAMxB,yBAAK7L,UAAWpB,EAAQmL,eACpB,yBAAK/J,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAApB,gBAGA,kBAACC,GAAA,EAAD,CACIvF,KAAM,SACNmJ,WAAY,CACRC,IAAI,EACJC,KAAK,GAETtI,MAAOD,EAAQyU,aACf7Z,SAAUgJ,EAAa,gBACvBc,UAAQ,QAQ5B,yBAAK7L,UAAWpB,EAAQ3F,MACpB,kBAACwH,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GAArC,sBAGA,yBAAK1H,UAAWpB,EAAQmL,eACpB,yBAAK/J,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAApB,gBAGA,kBAACC,GAAA,EAAD,CACIvF,KAAM,SACNmJ,WAAY,CACRC,IAAI,EACJC,KAAK,GAETtI,MAAOD,EAAQ2U,cACf/Z,SAAUgJ,EAAa,iBACvBc,UAAQ,MAKpB,yBAAK7L,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAApB,gBAGA,kBAACC,GAAA,EAAD,CACIvF,KAAM,SACNmJ,WAAY,CACRC,IAAI,EACJC,KAAK,GAETtI,MAAOD,EAAQ0U,eACf9Z,SAAUgJ,EAAa,kBACvBc,UAAQ,MAKpB,yBAAK7L,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAApB,gBAGA,kBAACK,GAAA,EAAD,CACI5E,MAAOD,EAAQ4U,aACfha,SAAUgJ,EAAa,gBACvBc,UAAQ,GAER,kBAACI,GAAA,EAAD,CAAU7E,MAAO,KAAjB,gBACA,kBAAC6E,GAAA,EAAD,CAAU7E,MAAO,KAAjB,gBACA,kBAAC6E,GAAA,EAAD,CAAU7E,MAAO,KAAjB,gBACA,kBAAC6E,GAAA,EAAD,CAAU7E,MAAO,KAAjB,8BAEJ,kBAAC0E,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,4CAShB,yBAAKnC,UAAWpB,EAAQ3F,MACpB,kBAACgO,GAAA,EAAD,CACIiF,SAAUjC,EACV5D,KAAM,SACN3F,QAAS,YACTtE,MAAO,WAJX,mB,+EC5TdlC,GAAYC,aAAW,SAAAJ,GAAK,MAAK,CACnCkiB,cAAc,CACV5iB,QAAQ,QAEZ6iB,MAAO,CACH9hB,MAAO,IACPgI,OAAO,IAEX+Z,KAAK,GAELviB,QAAQ,CACJwiB,KAAM,YAEVC,GAAG,CACC5f,gBAAgB1C,EAAMsC,QAAQK,WAAWC,QACzChD,QAAS,iBAIX2iB,GAAW,CACb,CACIhX,KAAK,2BACLiX,IAAI,YACJ/e,KAAK,2BAET,CACI8H,KAAK,2BACLiX,IAAI,aACJ/e,KAAK,4BAET,CACI8H,KAAK,eACLiX,IAAI,YACJ/e,KAAK,2BAET,CACI8H,KAAK,yBACLiX,IAAI,UACJ/e,KAAK,yBAET,CACI8H,KAAK,qBACLiX,IAAI,YACJ/e,KAAK,2BAET,CACI8H,KAAK,yBACLiX,IAAI,UACJ/e,KAAK,yBAET,CACI8H,KAAK,WACLiX,IAAI,eACJ/e,KAAK,+BAIE,SAASgf,GAAT,GAAsC,IAAlBvd,EAAiB,EAAjBA,KAAMyH,EAAW,EAAXA,QAC/B9H,EAAU1E,KAEVqF,EAAWD,eAEjB,OACI,kBAACmH,GAAA,EAAD,CACIxH,KAAMA,EACNyH,QAASA,EACTC,kBAAgB,qBAChBC,mBAAiB,2BACjB1N,SAAU,KACVuS,WAAS,GAET,kBAAC5E,GAAA,EAAD,CAAa1E,GAAG,sBAAhB,wCAGA,kBAAC2E,GAAA,EAAD,CAAe2V,UAAQ,EAACzc,UAAWpB,EAAQyd,IACvC,kBAAC9V,GAAA,EAAD,CAAMC,WAAS,EAACxM,QAAS,GACpBsiB,GAASnb,KAAI,SAACiE,EAAEsX,GAAH,OACV,kBAACnW,GAAA,EAAD,CAAM5E,IAAK+a,EAAOtb,MAAI,EAACub,GAAI,GAAIpV,GAAI,GAC/B,kBAACqV,GAAA,EAAD,CAAM5c,UAAWpB,EAAQud,MACrB,kBAACU,GAAA,EAAD,CACItc,QAAS,WACLhB,EAASgC,KAAK6D,EAAE5H,MAChBkJ,KAEJ1G,UAAWpB,EAAQqd,eAEnB,kBAACa,GAAA,EAAD,CACI9c,UAAWpB,EAAQsd,MACnBa,MAAO,6EAA6E3X,EAAEmX,MAE1F,kBAACS,GAAA,EAAD,CAAahd,UAAWpB,EAAQhF,SAC5B,kBAAC6G,EAAA,EAAD,CAAYC,QAAQ,YAAYtE,MAAM,iBACjCgJ,EAAEE,eASnC,kBAAC0B,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQ1G,QAASmG,EAAStK,MAAM,WAAhC,kB,kCC5FVlC,GAAYC,aAAW,SAAAJ,GAAK,YAAK,CACnCd,MAAI,mBACCc,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BX,WAAY,MAFhB,6BAIc,IAJd,GAMJpB,QAAS,CACLD,QAASI,EAAMC,QAAQ,IAE3BwM,UAAW,CACP/K,UAAW,QAEf8X,eAAgB,CACZ1J,UAAW,IAEfoT,OAAQ,CACJ5jB,QAAS,OACT2C,eAAgB,iBAEpBkhB,YAAa,OAGXC,GAAU,CACZ,CAAEhb,GAAI,IAAKsG,MAAO,IAAK5F,SAAU,IACjC,CAAEV,GAAI,OAAQsG,MAAO,eAAM5F,SAAU,KACrC,CAAEV,GAAI,OAAQsG,MAAO,eAAM5F,SAAU,KACrC,CACIV,GAAI,QACJsG,MAAO,iCACP5F,SAAU,GACVua,MAAO,SAEX,CACIjb,GAAI,OACJsG,MAAO,qBACP5F,SAAU,IACVua,MAAO,SAEX,CACIjb,GAAI,SACJsG,MAAO,eACP5F,SAAU,IACVua,MAAO,UASA,SAASC,KACpB,IAAMze,EAAU1E,KADa,EAEG4E,mBAAS,IAFZ,mBAEtBwd,EAFsB,KAEZgB,EAFY,OAGCxe,mBAAS,IAHV,mBAGtBye,EAHsB,KAGbC,EAHa,OAIL1e,mBAAS,GAJJ,mBAItB0W,EAJsB,KAIhBC,EAJgB,OAKG3W,mBAAS,IALZ,mBAKtB4W,EALsB,KAKZ+H,EALY,OAMH3e,mBAAS,GANN,mBAMtB6W,EANsB,KAMfC,EANe,OAOK9W,oBAAS,GAPd,mBAOtB4e,EAPsB,KAOXC,EAPW,OAQD7e,mBAAS,OARR,mBAQtBsY,EARsB,KAQdwG,EARc,OASG/Z,IAAM/E,SAAS,MATlB,mBAStB+e,EATsB,KASZC,EATY,OAUDja,IAAM/E,SAAS,GAVd,mBAUtBif,EAVsB,KAUdC,EAVc,KAYvBze,EAAWC,eACXH,EAAUC,eACV2e,EAlBC,IAAIC,gBAAgB1e,eAAc2e,QAwBnCC,EAAc,WAChBN,EAAY,OAGVre,EAAWC,eACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKvI,GAA5B,OACIqD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKvI,MACvD,CAACqD,IAGLK,qBAAU,WACmB,MAAtBme,EAAMnZ,IAAI,QACTN,EAAe,MAAO,QAAS,2BAAQ,WACjCyZ,EAAMnZ,IAAI,QAA6B,KAAnBmZ,EAAMnZ,IAAI,QACpCN,EAAe,MAAO,QAASyZ,EAAMnZ,IAAI,OAAS,KAAMmZ,EAAMnZ,IAAI,OAAQ,aAGhF,CAACvF,IAEH,IAAM8e,EAAW,WACbxZ,KAAIoG,KAAK,qBAAsB,CAC3BuK,KAAMA,EACNM,UAAWJ,EACXK,SAAU,UACVuI,WAAuB,QAAXlH,EAAmB,GAAK,CAAE/Q,KAAM+Q,KAE3CrS,MAAK,SAAAC,GACFsY,EAAYtY,EAASC,KAAK5H,OAC1BmgB,EAAWxY,EAASC,KAAKsY,SACzB3H,EAAS5Q,EAASC,KAAK0Q,UAE1B5P,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,aAI1DnG,qBAAU,WACNue,MACD,CAAC7I,EAAME,EAAS0B,IAEnB,IAWMnY,EAAOsf,QAAQV,GAErB,OACI,6BACI,kBAACrB,GAAD,CAAWvd,KAAMye,EAAWhX,QAAS,kBAAMiX,GAAa,MACxD,yBAAK3d,UAAWpB,EAAQqe,QACpB,kBAAChW,GAAA,EAAD,CACI7K,MAAO,UACPmE,QAAS,kBAAMod,GAAa,IAC5Bjd,QAAS,aAHb,wCAOA,yBAAKV,UAAWpB,EAAQse,aACpB,kBAAClR,GAAA,EAAD,CACIhD,MAAO,CACH7N,YAAY,GAEhBiM,MAAOgQ,EACPrV,SAAU,SAAAsJ,GAAC,OAAEuS,EAAUvS,EAAEL,OAAO5D,SAEhC,kBAAC6E,GAAA,EAAD,CAAU7E,MAAO,OAAjB,gBACA,kBAAC6E,GAAA,EAAD,CAAU7E,MAAO,SAAjB,gBACA,kBAAC6E,GAAA,EAAD,CAAU7E,MAAO,UAAjB,gBACA,kBAAC6E,GAAA,EAAD,CAAU7E,MAAO,SAAjB,gBACA,kBAAC6E,GAAA,EAAD,CAAU7E,MAAO,SAAjB,sBACA,kBAAC6E,GAAA,EAAD,CAAU7E,MAAO,OAAjB,0BACA,kBAAC6E,GAAA,EAAD,CAAU7E,MAAO,OAAjB,0BACA,kBAAC6E,GAAA,EAAD,CAAU7E,MAAO,YAAjB,aAEJ,kBAACH,GAAA,EAAD,CACI7K,MAAO,UACPmE,QAAS,kBAAM8d,KACf3d,QAAS,YAHb,kBAUR,kBAAC+G,GAAA,EAAD,CAAO3F,QAAM,EAAC9B,UAAWpB,EAAQ2U,gBAC7B,kBAACiL,GAAA,EAAD,CAAgBxe,UAAWpB,EAAQ4H,WAC/B,kBAACkQ,GAAA,EAAD,CAAOpW,aAAW,eAAekI,KAAM,SACnC,kBAACmO,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAU5N,MAAO,CAAC5G,OAAO,KACpB+a,GAAQhc,KAAI,SAAAsd,GAAM,OACf,kBAAC5H,GAAA,EAAD,CACIlV,IAAK8c,EAAOtc,GACZib,MAAOqB,EAAOrB,MACdpU,MAAO,CAAEnG,SAAU4b,EAAO5b,WAEzB4b,EAAOhW,YAKxB,kBAACqO,GAAA,EAAD,KACKwF,EAASnb,KAAI,SAAA4V,GAAG,OACb,kBAACH,GAAA,EAAD,CAAU8H,OAAK,EAAC/c,IAAKoV,EAAIjJ,IACrB,kBAAC+I,GAAA,EAAD,KAAYE,EAAIjJ,IAChB,kBAAC+I,GAAA,EAAD,KAAYE,EAAI/I,MAChB,kBAAC6I,GAAA,EAAD,UAEQxV,IADHsd,KAAc5H,EAAI6H,OAEfD,KAAc5H,EAAI6H,OAE1B,kBAAC/H,GAAA,EAAD,CAAWuG,MAAO,cACO/b,IAApBkc,EAAQxG,EAAIjJ,KACTyP,EAAQxG,EAAIjJ,IAAI,GAAG+Q,kBAE3B,kBAAChI,GAAA,EAAD,CAAWuG,MAAO,cACO/b,IAApBkc,EAAQxG,EAAIjJ,KACToJ,aAAaqG,EAAQxG,EAAIjJ,IAAI,KAErC,kBAAC+I,GAAA,EAAD,CAAWuG,MAAO,SACd,kBAAC0B,GAAA,EAAD,CAASljB,MAAO,gBACZ,kBAACyE,EAAA,EAAD,CAAYE,QAAS,kBAvFvC4B,EAuFwD4U,EAAIjJ,QAtF9EjJ,KAAImT,OAAO,iBAAmB7V,GACzB4C,MAAK,WACFsZ,IACA7Z,EAAe,MAAO,QAAS,6CAAW,cAE7CuB,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAPrC,IAAC9D,GAuFiEqG,KAAM,SACjD,kBAACgP,GAAA,EAAD,QAGR,kBAACsH,GAAA,EAAD,CAASljB,MAAO,gBACZ,kBAACyE,EAAA,EAAD,CAAYE,QAAS,SAAC8K,GAClB2S,EAAUjH,EAAIjJ,IAzItDgQ,EA0IoDzS,EA1IlC0T,gBA2IqBvW,KAAM,SACL,kBAACwW,GAAA,EAAD,gBAUhC,kBAACC,GAAA,EAAD,CACIC,mBAAoB,CAAC,GAAI,GAAI,KAC7BxW,UAAU,MACVwP,MAAOvC,EACPwJ,YAAazJ,EACbF,KAAMA,EAAO,EACb4J,aAAc,SAAC/T,EAAGgU,GAAJ,OAAU5J,EAAQ4J,EAAI,IACpCC,oBAAqB,SAAAjU,GACjBoS,EAAYpS,EAAEL,OAAO5D,OACrBqO,EAAQ,OAIpB,kBAAC,KAAD,CACIxW,KAAMA,EACN4e,SAAUA,EACVnX,QAAS0X,EACTmB,aAAW,GAEX,kBAACtT,GAAA,EAAD,CAAU1L,QAAS,SAAA8K,GACf+S,IACA/e,EAAQkC,KAAK,0BAA0Bwc,KAF3C,wCAIA,kBAAC9R,GAAA,EAAD,CAAU1L,QAAS,SAAA8K,GACf+S,IACA/e,EAAQkC,KAAK,4BAA4Bwc,KAF7C,0C,sEC9PD,SAASyB,GAAT,GAAsD,IAAnCC,EAAkC,EAAlCA,OAAQxgB,EAA0B,EAA1BA,KAAMyH,EAAoB,EAApBA,QAASgZ,EAAW,EAAXA,QAErD,OACI,kBAACjZ,GAAA,EAAD,CACIxH,KAAMA,EACNyH,QAASA,EACTC,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,GAAA,EAAD,CAAa1E,GAAG,sBACXsd,EAAO,6CAAU,wCAEtB,kBAAC3Y,GAAA,EAAD,KACI,kBAAC0X,GAAA,EAAD,KACI,kBAAC9H,GAAA,EAAD,CAAOlO,KAAK,QAAQlI,aAAW,iBAC3B,kBAACqW,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,iCACA,kBAACA,GAAA,EAAD,qBACA,kBAACA,GAAA,EAAD,uBAGR,kBAACC,GAAA,EAAD,KACI,kBAACF,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAWnO,UAAU,KAAKsO,MAAM,OAAO,iBACvC,kBAACH,GAAA,EAAD,yCACA,kBAACA,GAAA,EAAD,0BAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAWnO,UAAU,KAAKsO,MAAM,OAAO,gBACvC,kBAACH,GAAA,EAAD,wCACA,kBAACA,GAAA,EAAD,kBAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAWnO,UAAU,KAAKsO,MAAM,OAAO,eACvC,kBAACH,GAAA,EAAD,uCACA,kBAACA,GAAA,EAAD,oBAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAWnO,UAAU,KAAKsO,MAAM,OAAO,oBACvC,kBAACH,GAAA,EAAD,6CACA,kBAACA,GAAA,EAAD,8BAEF6I,GAAW,kBAAC9I,GAAA,EAAD,KACT,kBAACC,GAAA,EAAD,CAAWnO,UAAU,KAAKsO,MAAM,OAAO,SACvC,kBAACH,GAAA,EAAD,uBACA,kBAACA,GAAA,EAAD,WAEH4I,GAAU,kBAAC7I,GAAA,EAAD,KACP,kBAACC,GAAA,EAAD,CAAWnO,UAAU,KAAKsO,MAAM,OAAO,gBACvC,kBAACH,GAAA,EAAD,uCACA,kBAACA,GAAA,EAAD,qBAEF4I,IAAWC,GAAW,kBAAC9I,GAAA,EAAD,KACpB,kBAACC,GAAA,EAAD,CAAWnO,UAAU,KAAKsO,MAAM,OAAO,UACvC,kBAACH,GAAA,EAAD,6CACA,kBAACA,GAAA,EAAD,6DAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAWnO,UAAU,KAAKsO,MAAM,OAAO,UACvC,kBAACH,GAAA,EAAD,qBACA,kBAACA,GAAA,EAAD,kBAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAWnO,UAAU,KAAKsO,MAAM,OAAO,cACvC,kBAACH,GAAA,EAAD,iCACA,kBAACA,GAAA,EAAD,wBAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAWnO,UAAU,KAAKsO,MAAM,OAAO,UACvC,kBAACH,GAAA,EAAD,qBACA,kBAACA,GAAA,EAAD,cAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAWnO,UAAU,KAAKsO,MAAM,OAAO,WACvC,kBAACH,GAAA,EAAD,qBACA,kBAACA,GAAA,EAAD,YAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAWnO,UAAU,KAAKsO,MAAM,OAAO,SACvC,kBAACH,GAAA,EAAD,eACA,kBAACA,GAAA,EAAD,YAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAWnO,UAAU,KAAKsO,MAAM,OAAO,UACvC,kBAACH,GAAA,EAAD,qBACA,kBAACA,GAAA,EAAD,YAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAWnO,UAAU,KAAKsO,MAAM,OAAO,YACvC,kBAACH,GAAA,EAAD,qBACA,kBAACA,GAAA,EAAD,YAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAWnO,UAAU,KAAKsO,MAAM,OAAO,YACvC,kBAACH,GAAA,EAAD,eACA,kBAACA,GAAA,EAAD,gBAMpB,kBAAC7P,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQ1G,QAASmG,EAAStK,MAAM,WAAhC,kBC3GD,SAASujB,GAAT,GAAsD,IAAhC5d,EAA+B,EAA/BA,SAASqF,EAAsB,EAAtBA,MAAMyE,EAAgB,EAAhBA,SAASpD,EAAO,EAAPA,MAAO,EACrC3J,mBAAS,IAD4B,mBACzD8gB,EADyD,KAClDC,EADkD,OAEjC/gB,mBAAS,YAFwB,mBAEzDghB,EAFyD,KAEhDC,EAFgD,OAGvCjhB,qBAHuC,mBAGzDkH,EAHyD,KAGnDga,EAHmD,KAyBhE,OApBAlhB,oBAAS,WACDsI,EAAM1F,WAAW,aACjBme,EAAUzY,EAAM6Y,QAAQ,WAAW,KACnCF,EAAY,aAEE,KAAV3Y,IACAyY,EAAUzY,EAAM6Y,QAAQ,UAAU,KAClCF,EAAY,cAGtB,CAAC3Y,IAEHtH,qBAAU,WACU,YAAbggB,GAAuD,WAA7Bja,OAAOtG,SAASugB,SACzCE,EAAS,2JAETA,EAAS,MAEf,CAACF,IAGC,kBAACtU,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBACflD,GAEL,kBAACmD,GAAA,EAAD,CACI5F,MAAiB,KAAVA,EACPoB,MAAOwY,EACP7d,SAAU,SAAAsJ,GACNwU,EAAUxU,EAAEL,OAAO5D,OACnBrF,EAAS,CACLiJ,OAAO,CACH5D,MAAM0Y,EAAWzU,EAAEL,OAAO5D,UAKtCyE,SAAYA,EACZqU,eACI,kBAAC5P,GAAA,EAAD,CAAgBpQ,SAAS,SACrB,kBAAC8L,GAAA,EAAD,CACI5E,MAAO0Y,EACP/d,SAAU,SAACsJ,GACP0U,EAAY1U,EAAEL,OAAO5D,OACrBrF,EAAS,CACLiJ,OAAO,CACH5D,MAAMiE,EAAEL,OAAO5D,MAAQwY,OAMnC,kBAAC3T,GAAA,EAAD,CAAU7E,MAAO,WAAjB,WACA,kBAAC6E,GAAA,EAAD,CAAU7E,MAAO,YAAjB,gBAKL,KAAVpB,GAAgB,kBAAC8F,GAAA,EAAD,CAAgB9F,MAAiB,KAAVA,GAAeA,ICjDnE,IAAM9L,GAAYC,aAAW,SAAAJ,GAAK,MAAK,CACnComB,YAAa,CACTxmB,QAAS,uBAEbiQ,KAAM,CACF1Q,SAAU,IACV2Q,UAAW,IAEfE,cAAc,eACThQ,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BhC,QAAS,oBAGjBymB,iBAAkB,CACd/mB,QAAS,OACTyQ,aAAc,GACdnQ,QAAS,GACTa,WAAYT,EAAMU,YAAYC,OAAO,mBAAoB,CACrDC,OAAQZ,EAAMU,YAAYE,OAAOC,MACjCC,SAAUd,EAAMU,YAAYI,SAASC,gBAEzC,iBAAkB,CACd2B,gBAAiB1C,EAAMsC,QAAQK,WAAWC,UAGlD0jB,WAAY,CACRjmB,MAAO,GACPgI,OAAQ,GACR3F,gBAAiBM,YAAQhD,EAAMsC,QAAQE,UAAU+jB,MAAO,IACxDlkB,MAAOrC,EAAMsC,QAAQE,UAAUoc,aAC/BF,UAAW,SACXgB,aAAc,QAElB8G,oBAAqB,CACjBplB,YAAa,IAEjBqlB,WAAY,CACR3W,UAAW,IAEfrI,OAAQ,CACJrG,YAAapB,EAAMC,QAAQ,QAI7BymB,GAAQ,CACV,CACI7kB,MAAO,2BACP8kB,UAAU,GAEd,CACI9kB,MAAO,2BACP8kB,UAAU,GAEd,CACI9kB,MAAO,2BACP8kB,UAAU,GAEd,CACI9kB,MAAO,eACP8kB,UAAU,IAIH,SAASC,GAAWC,GAC/B,IAkC2Btb,EAlCrB1G,EAAU1E,KACVmF,EAAUC,eAFsB,EAIFR,mBAAS,GAJP,mBAI/B+hB,EAJ+B,KAInBC,EAJmB,OAKRhiB,oBAAS,GALD,mBAK/BmL,EAL+B,KAKtBC,EALsB,OAMpBrG,IAAM/E,SAAS,IAAIiiB,KAA9BC,EAN+B,sBAONliB,mBAAS,IAPH,mBAO/BmiB,EAP+B,KAOrBC,EAPqB,OAQVpiB,mBAAS,SARC,mBAQ/BqiB,EAR+B,KAQvBC,EARuB,OASVtiB,mBACxB8hB,EAAMS,OACAT,EAAMS,OACN,CACIzC,KAAM,QACN5Q,KAAM,GACNsT,YAAa,uBACbC,WAAY,OACZC,aAAc,4BACdC,mBAAoB,QACpBC,QAAS,GACXC,UAAU,OACRC,QAAS,IACTC,kBAAmB,CACfC,UAAW,MAvBS,mBAS/BT,EAT+B,KASvBU,EATuB,KA4BhChX,EAAe,SAAAzF,GAAI,OAAI,SAAAtD,GACzB+f,EAAU,2BACHV,GADE,kBAEJ/b,EAAOtD,EAAMgJ,OAAO5D,WAkBvB3H,EAAWC,eACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKvI,GAA5B,OACIqD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKvI,MACvD,CAACqD,IAwEL,OACI,6BACI,kBAACgB,EAAA,EAAD,CAAYC,QAAS,MAChBkgB,EAAMS,OAAS,eAAO,eAD3B,wCAGA,kBAACW,GAAA,EAAD,CAASnB,WAAYA,GAChBJ,GAAMtf,KAAI,SAACsH,EAAOiU,GACf,IAvFMhN,EAuFAuS,EAAY,GACZC,EAAa,GASnB,OARIzZ,EAAMiY,WACNwB,EAAWxB,SACP,kBAACjgB,EAAA,EAAD,CAAYC,QAAQ,WAApB,iBA3FFgP,EA8FYgN,EA7FvBsE,EAAQmB,IAAIzS,KA8FHuS,EAAUG,WAAY,GAGtB,kBAACC,GAAA,EAAD,eAAM1gB,IAAK8G,EAAM7M,OAAWqmB,GACxB,kBAACK,GAAA,EAAcJ,EAAazZ,EAAM7M,YAKlC,IAAfilB,GACG,0BACI7gB,UAAWpB,EAAQuhB,YACnB/U,SAhGS,SAAAC,GACrBA,EAAEC,iBACFpB,GAAW,GAGXrF,KAAIoG,KAAK,0BAA2B,CAChCzN,KAAM6jB,EAAOC,cAEZvc,MAAK,WACF+b,EAAc,MAEjB/a,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACFmF,GAAW,QAmFP,yBAAKlK,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,gdAGc,IACV,kBAACkN,GAAA,EAAD,CACIxR,MAAO,YACPyR,KAAM,oBACNtN,QAAS,kBAAM2gB,EAAY,UAH/B,oDAMQ,IAVZ,UAaA,yBAAKlhB,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRzE,MAAOia,EAAOC,YACdvf,SAAUgJ,EAAa,qBAO3C,yBAAK/K,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,mXAGc,IACV,kBAACkN,GAAA,EAAD,CACIxR,MAAO,YACPyR,KAAM,oBACNtN,QAAS,kBAAM2gB,EAAY,UAH/B,0DAMQ,IAVZ,UAaA,yBAAKlhB,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAACnD,UAAU,YAC5B,kBAAC8Z,GAAA,EAAD,CACIliB,aAAW,SACXgF,KAAK,UACL8B,MAAOia,EAAOE,WACdxf,SAAUgJ,EAAa,cACvBgM,KAAG,GAEH,kBAACtJ,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,mCAEV,kBAACgF,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,0BAMtB,kBAACia,GAAA,EAAD,CAAUC,GAA0B,SAAtBtB,EAAOE,YACjB,yBAAKvhB,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIC,SAC0B,SAAtBwV,EAAOE,WAEXna,MAAOia,EAAOG,aACdzf,SAAUgJ,EACN,uBAS5B,yBAAK/K,UAAWpB,EAAQ4hB,YACpB,kBAACvZ,GAAA,EAAD,CACIiF,SAAUjC,EACV5D,KAAM,SACN3F,QAAS,YACTtE,MAAO,WAJX,wBAYI,IAAfykB,GACG,0BACI7gB,UAAWpB,EAAQuhB,YACnB/U,SAAU,SAAAC,GACNA,EAAEC,iBACFwV,EAAc,KAGlB,yBAAK9gB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,iFAEI,6BAFJ,kOAMA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAACnD,UAAU,YAC5B,kBAAC8Z,GAAA,EAAD,CACI3W,UAAQ,EACRzE,MAAOia,EAAOI,mBACd1f,SAAUgJ,EACN,sBAEJgM,KAAG,GAEH,kBAACtJ,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,iBAEV,kBAACgF,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,sBAQ9B,kBAACia,GAAA,EAAD,CAAUC,GAAkC,SAA9BtB,EAAOI,oBACjB,yBAAKzhB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,0EAEI,6BAFJ,0KAOA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAACnD,UAAU,YAC5B,kBAAC8Z,GAAA,EAAD,CACI3W,UAAQ,EACRzE,MAAO+Z,EACPpf,SAAU,SAAAsJ,GAEiB,UAAnBA,EAAEL,OAAO5D,OAET2a,EAAU,2BACHV,GADE,IAELK,QAAS,MAGjBN,EAAU/V,EAAEL,OAAO5D,QAEvB2P,KAAG,GAEH,kBAACtJ,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,iBAEV,kBAACgF,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,4BAQ9B,kBAACia,GAAA,EAAD,CAAUC,GAAe,SAAXxB,GACV,yBAAKnhB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,+DAIA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC+V,GAAD,CACIvY,MAAOia,EAAOK,QACd3f,SAAUgJ,EAAa,WACvBc,SAEQ,SADJwV,EAAOI,oBACkB,SAAXN,EAElB1Y,MAAO,0BAQ/B,yBAAKzI,UAAWpB,EAAQ4hB,YACpB,kBAACvZ,GAAA,EAAD,CACI7K,MAAO,UACP4D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAMugB,EAAc,KAHjC,sBAMU,IACV,kBAAC7Z,GAAA,EAAD,CACIiF,SAAUjC,EACV5D,KAAM,SACN3F,QAAS,YACTtE,MAAO,WAJX,wBAYI,IAAfykB,GACG,0BACI7gB,UAAWpB,EAAQuhB,YACnB/U,SAAU,SAAAC,GACNA,EAAEC,iBACFwV,EAAc,KAGlB,yBAAK9gB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,kFAIA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAACnD,UAAU,YAC5B,kBAAC8Z,GAAA,EAAD,CACI3W,UAAQ,EACRzE,MACuB,MAAnBia,EAAOO,QACD,QACA,OAEV7f,SAAU,SAAAsJ,GACiB,SAAnBA,EAAEL,OAAO5D,MACT2a,EAAU,2BACHV,GADE,IAELO,QAAS,cAGbG,EAAU,2BACHV,GADE,IAELO,QAAS,QAIrB7K,KAAG,GAEH,kBAACtJ,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,iBAEV,kBAACgF,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,4BAQ9B,kBAACia,GAAA,EAAD,CAAUC,GAAuB,MAAnBtB,EAAOO,SACjB,yBAAK5hB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,kCAGA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAACgG,GAAD,CACIxI,MAAOia,EAAOO,QACd7f,SAAUgJ,EAAa,WACvB0E,IAAK,EACLI,IAAK,mBACLpH,MAAO,mDAO3B,yBAAKzI,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YACA,MAAnBgB,EAAOO,QAAkB,IAAM,MAGxC,yBAAK5hB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,4EAIA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAACnD,UAAU,YAC5B,kBAAC8Z,GAAA,EAAD,CACI3W,UAAQ,EACRzE,MAEuB,KADnBia,EAAOQ,kBACFC,UACC,QACA,OAEV/f,SAAU,SAAAsJ,GACiB,SAAnBA,EAAEL,OAAO5D,MACT2a,EAAU,2BACHV,GADE,IAELQ,kBAAkB,2BACXR,EAAOQ,mBADG,IAEbC,UACI,2BAIZC,EAAU,2BACHV,GADE,IAELQ,kBAAkB,2BACXR,EAAOQ,mBADG,IAEbC,UAAW,SAK3B/K,KAAG,GAEH,kBAACtJ,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,iBAEV,kBAACgF,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,4BAQ9B,kBAACia,GAAA,EAAD,CAAUC,GAA2C,KAAvCtB,EAAOQ,kBAAkBC,WACnC,yBAAK9hB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YACA,MAAnBgB,EAAOO,QAAkB,IAAM,MAGxC,yBAAK5hB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,iJAIA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACIxE,MACIia,EAAOQ,kBACFC,UAET/f,UAjiBbuD,EAkiBiB,YAliBT,SAAAtD,GAC/B+f,EAAU,2BACHV,GADE,IAELQ,kBAAkB,2BACXR,EAAOQ,mBADG,kBAEZvc,EAAOtD,EAAMgJ,OAAO5D,oBAsiBjB,yBAAKpH,UAAWpB,EAAQ4hB,YACpB,kBAACvZ,GAAA,EAAD,CACI7K,MAAO,UACP4D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAMugB,EAAc,KAHjC,sBAMU,IACV,kBAAC7Z,GAAA,EAAD,CACIiF,SAAUjC,EACV5D,KAAM,SACN3F,QAAS,YACTtE,MAAO,WAJX,wBAYI,IAAfykB,GACG,0BAAM7gB,UAAWpB,EAAQuhB,YAAa/U,SAxhB7B,SAAAC,GACjBA,EAAEC,iBACFpB,GAAW,GAEX,IAAM0Y,EAAU,eAAQvB,GACxBuB,EAAWf,kBAAX,eAAoCe,EAAWf,mBAGhC,UAAXV,GAAoD,UAA9BE,EAAOI,qBAC7BmB,EAAWlB,QAAU,IAIzBkB,EAAWrB,WAAuC,SAA1BqB,EAAWrB,WACnCqB,EAAWnB,mBAC2B,SAAlCmB,EAAWnB,mBACfmB,EAAWhB,QAAU3P,SAAS2Q,EAAWhB,SACzCgB,EAAWjB,UAAqC,SAAzBiB,EAAWjB,UAClCiB,EAAWf,kBAAkBC,UAAYc,EAAWf,kBAAkBC,UAAUjP,MAC5E,KAGkD,IAAlD+P,EAAWf,kBAAkBC,UAAUpP,QACO,KAA9CkQ,EAAWf,kBAAkBC,UAAU,KAEvCc,EAAWf,kBAAkBC,UAAY,IAG7Cjd,KAAIoG,KAAK,gBAAiB,CACtBoW,OAAQuB,IAEP7d,MAAK,WACFP,EACI,MACA,QACA,kCAAWoc,EAAMS,OAAS,eAAO,gBACjC,WAEJP,EAAc,MAEjB/a,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACFmF,GAAW,MAGnBA,GAAW,KA0eC,yBAAKlK,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,sBACxB,yBAAKvgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,wFAGA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRzE,MAAOia,EAAOrT,KACdjM,SAAUgJ,EAAa,cAM3C,yBAAK/K,UAAWpB,EAAQ4hB,YACpB,kBAACvZ,GAAA,EAAD,CACI7K,MAAO,UACP4D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAMugB,EAAc,KAHjC,sBAMU,IACV,kBAAC7Z,GAAA,EAAD,CACIiF,SAAUjC,EACV5D,KAAM,SACN3F,QAAS,YACTtE,MAAO,WAJX,kBAYI,IAAfykB,GACG,oCACI,0BAAM7gB,UAAWpB,EAAQuhB,aACrB,kBAAC1f,EAAA,EAAD,sCACUmgB,EAAMS,OAAS,eAAO,eADhC,UAGA,kBAAC5gB,EAAA,EAAD,CAAYC,QAAS,QAAStE,MAAO,iBAArC,2MAIJ,yBAAK4D,UAAWpB,EAAQ4hB,YACpB,kBAACvZ,GAAA,EAAD,CACI7K,MAAO,UACP4D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAMlB,EAAQkC,KAAK,mBAHhC,sDAWZ,kBAACie,GAAD,CACIvgB,KAAmB,SAAbgiB,EACNxB,QAAM,EACN/Y,QAAS,kBAAMwa,EAAY,OAE/B,kBAAC1B,GAAD,CACIvgB,KAAmB,SAAbgiB,EACNva,QAAS,kBAAMwa,EAAY,QCtuB3C,IAAMhnB,GAAYC,aAAW,SAAAJ,GAAK,MAAK,CACnComB,YAAa,CACTxmB,QAAS,uBAEbiQ,KAAM,CACF1Q,SAAU,IACV2Q,UAAW,IAEfE,cAAc,eACThQ,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BhC,QAAS,oBAGjBymB,iBAAkB,CACd/mB,QAAS,OACTyQ,aAAc,GACdnQ,QAAQ,GACRa,WAAYT,EAAMU,YAAYC,OAAO,mBAAoB,CACrDC,OAAQZ,EAAMU,YAAYE,OAAOC,MACjCC,SAAUd,EAAMU,YAAYI,SAASC,gBAEzC,iBAAiB,CACb2B,gBAAgB1C,EAAMsC,QAAQK,WAAWC,UAGjD0jB,WAAY,CACRjmB,MAAO,GACPgI,OAAQ,GACR3F,gBAAiBM,YAAQhD,EAAMsC,QAAQE,UAAU+jB,MAAO,IACxDlkB,MAAOrC,EAAMsC,QAAQE,UAAUoc,aAC/BF,UAAW,SACXgB,aAAc,QAElB8G,oBAAqB,CACjBplB,YAAa,IAEjBqlB,WAAW,CACP3W,UAAW,IAEfrI,OAAQ,CACJrG,YAAapB,EAAMC,QAAQ,IAE/B,UAAU,CACN,KAAO,CACHoC,MAAO,sBACP/C,QAAS,eACTM,QAAS,UACT6I,SAAU,OACVqgB,WAAW,0DACXpJ,aAAc,MACdhd,gBAAiB,yBAErB,IAAM,CACFnD,OAAQ,SACRK,QAAS,YACTmpB,SAAU,OACV/hB,UAAW,MACX0Y,aAAc,MACdhd,gBAAiB,UACjBL,MAAM,aAMZqkB,GAAQ,CACV,CACI7kB,MAAO,iCACP8kB,UAAU,GAEd,CACI9kB,MAAO,2BACP8kB,UAAU,GAEd,CACI9kB,MAAO,2BACP8kB,UAAU,GAEd,CACI9kB,MAAO,2BACP8kB,UAAU,GAEd,CACI9kB,MAAO,eACP8kB,UAAU,IAIH,SAASqC,GAAYnC,GAChC,IAgC2Btb,EAhCrB1G,EAAU1E,KACVmF,EAAUC,eAFuB,EAIHR,mBAAS,GAJN,mBAIhC+hB,EAJgC,KAIpBC,EAJoB,OAKThiB,oBAAS,GALA,mBAKhCmL,EALgC,KAKvBC,EALuB,OAMnBrG,IAAM/E,SAAS,IAAIiiB,KAAhCC,EANgC,sBAORliB,mBAAS,IAPD,mBAOhCmiB,EAPgC,KAOvBC,EAPuB,OAQZpiB,mBAAS,SARG,mBAQhCqiB,EARgC,KAQzBC,EARyB,OASXtiB,mBAAS8hB,EAAMS,OAAOT,EAAMS,OAAO,CAC3DzC,KAAK,SACL5Q,KAAK,GACLgV,OAAO,2BACPC,UAAUC,aAAU,IACpB5B,YAAa,+BACbC,WAAY,OACZC,aAAc,4BACdC,mBAAmB,QACnBC,QAAQ,GACRC,UAAU,OACVC,QAAQ,IACRC,kBAAkB,CACdC,UAAU,MAtBqB,mBAShCT,EATgC,KASxBU,EATwB,KA0BjChX,EAAe,SAAAzF,GAAI,OAAI,SAAAtD,GACzB+f,EAAU,2BACHV,GADE,kBAEJ/b,EAAOtD,EAAMgJ,OAAO5D,WAkBvB3H,EAAWC,eACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKvI,GAA5B,OACIqD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKvI,MACvD,CAACqD,IA8DL,OACI,6BACI,kBAACgB,EAAA,EAAD,CAAYC,QAAS,MAAOkgB,EAAMS,OAAS,eAAO,eAAlD,wCACA,kBAACW,GAAA,EAAD,CAASnB,WAAYA,GAChBJ,GAAMtf,KAAI,SAACsH,EAAOiU,GACf,IA3EMhN,EA2EAuS,EAAY,GACZC,EAAa,GASnB,OARIzZ,EAAMiY,WACNwB,EAAWxB,SACP,kBAACjgB,EAAA,EAAD,CAAYC,QAAQ,WAApB,iBA/EFgP,EAkFYgN,EAjFvBsE,EAAQmB,IAAIzS,KAkFHuS,EAAUG,WAAY,GAGtB,kBAACC,GAAA,EAAD,eAAM1gB,IAAK8G,EAAM7M,OAAWqmB,GACxB,kBAACK,GAAA,EAAcJ,EAAazZ,EAAM7M,YAMlC,IAAfilB,GACG,0BACI7gB,UAAWpB,EAAQuhB,YACnB/U,SAAU,SAAAC,GACNA,EAAEC,iBACFwV,EAAc,KAGlB,kBAAC7S,GAAA,EAAD,CAAOC,SAAS,OAAOlF,MAAO,CAACc,aAAa,KAA5C,gQAKA,yBAAK9J,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,uKAMR,yBAAKV,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,mRAIA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACR2D,WAAY,CACR2T,UAAU,IAEd/b,MAAOia,EAAO4B,UACdlhB,SAAUgJ,EAAa,mBAO3C,yBAAK/K,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,yDACa,6BADb,sFAEI,0CAFJ,8UAKI,wCACY,6BADZ,eAEgB,6BAFhB,iBAGkB,6BACd,6BAJJ,UAKW,6BALX,YAMc2gB,EAAO4B,UAAU,6BAC3B,6BAPJ,SAQU,6BARV,mBASoB,6BATpB,kCAUmC,6BAVnC,mBAWoB,8BAExB,kBAACxiB,EAAA,EAAD,CAAYC,QAAS,SAArB,6IAEI,4BACI,4BACI,wCADJ,2BAGI,sCAHJ,6CAIW,wCAEX,uDACQ,uCADR,2BAC8B,wCAD9B,sHAIA,2FAAc,sCAAd,4RAQhB,yBAAKV,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,6CACW,6BADX,yLAIA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIH,WAAS,EACTI,UAAQ,EACRxF,KAAM,MACNe,MAAOia,EAAO2B,OACdjhB,SAAUgJ,EAAa,gBAO3C,yBAAK/K,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,kLAGA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC3C,GAAA,EAAD,CACIiF,SAAUjC,EACV1J,QAAS,kBArNrC2J,GAAW,QAGXrF,KAAIoG,KAAK,2BAA4B,CACjCiQ,OAAQmG,EAAO2B,OACfI,OAAO/B,EAAO4B,YAEble,MAAK,WACFP,EAAe,MAAO,QAAS,2BAAQ,cAE1CuB,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACFmF,GAAW,OAwMSxJ,QAAS,WACTtE,MAAO,WAJX,2CAYZ,yBAAK4D,UAAWpB,EAAQ4hB,YACpB,kBAACvZ,GAAA,EAAD,CACIiF,SAAUjC,EACV5D,KAAM,SACN3F,QAAS,YACTtE,MAAO,WAJX,wBAaI,IAAfykB,GACG,0BACI7gB,UAAWpB,EAAQuhB,YACnB/U,SAAU,SAAAC,GACNA,EAAEC,iBACFwV,EAAc,KAGlB,yBAAK9gB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,meAGc,IACV,kBAACkN,GAAA,EAAD,CACIxR,MAAO,YACPyR,KAAM,oBACNtN,QAAS,kBAAM2gB,EAAY,UAH/B,oDAMQ,IAVZ,UAaA,yBAAKlhB,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRzE,MAAOia,EAAOC,YACdvf,SAAUgJ,EAAa,qBAO3C,yBAAK/K,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,mXAGc,IACV,kBAACkN,GAAA,EAAD,CACIxR,MAAO,YACPyR,KAAM,oBACNtN,QAAS,kBAAM2gB,EAAY,UAH/B,0DAMQ,IAVZ,UAaA,yBAAKlhB,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAACnD,UAAU,YAC5B,kBAAC8Z,GAAA,EAAD,CACIliB,aAAW,SACXgF,KAAK,UACL8B,MAAOia,EAAOE,WACdxf,SAAUgJ,EAAa,cACvBgM,KAAG,GAEH,kBAACtJ,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,mCAEV,kBAACgF,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,0BAMtB,kBAACia,GAAA,EAAD,CAAUC,GAA0B,SAAtBtB,EAAOE,YACjB,yBAAKvhB,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIC,SAAgC,SAAtBwV,EAAOE,WACjBna,MAAOia,EAAOG,aACdzf,SAAUgJ,EACN,uBAS5B,yBAAK/K,UAAWpB,EAAQ4hB,YACpB,kBAACvZ,GAAA,EAAD,CACI7K,MAAO,UACP4D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAKugB,EAAc,KAHhC,sBAOA,kBAAC7Z,GAAA,EAAD,CACIiF,SAAUjC,EACV5D,KAAM,SACN3F,QAAS,YACTtE,MAAO,WAJX,wBAYI,IAAfykB,GACG,0BACI7gB,UAAWpB,EAAQuhB,YACnB/U,SAAU,SAAAC,GACNA,EAAEC,iBACHwV,EAAc,KAGjB,yBAAK9gB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,iFAEI,6BAFJ,kOAMA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAACnD,UAAU,YAC5B,kBAAC8Z,GAAA,EAAD,CACI3W,UAAQ,EACRzE,MAAOia,EAAOI,mBACd1f,SAAUgJ,EACN,sBAEJgM,KAAG,GAEH,kBAACtJ,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,iBAEV,kBAACgF,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,sBAQ9B,kBAACia,GAAA,EAAD,CAAUC,GAAkC,SAA9BtB,EAAOI,oBACjB,yBAAKzhB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,0EAEI,6BAFJ,0KAMA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAACnD,UAAU,YAC5B,kBAAC8Z,GAAA,EAAD,CACI3W,UAAQ,EACRzE,MAAO+Z,EACPpf,SAAU,SAAAsJ,GACiB,UAAnBA,EAAEL,OAAO5D,OACT2a,EAAU,2BACHV,GADE,IAELK,QAAS,MAGjBN,EAAU/V,EAAEL,OAAO5D,QAEvB2P,KAAG,GAEH,kBAACtJ,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,iBAEV,kBAACgF,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,4BAS9B,kBAACia,GAAA,EAAD,CAAUC,GAAe,SAAXxB,GACV,yBAAKnhB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,+DAIA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC+V,GAAD,CACIvY,MAAOia,EAAOK,QACd3f,SAAUgJ,EAAa,WACvBc,SAAwC,SAA9BwV,EAAOI,oBAA4C,SAAXN,EAClD1Y,MAAO,0BAU/B,yBAAKzI,UAAWpB,EAAQ4hB,YACpB,kBAACvZ,GAAA,EAAD,CACI7K,MAAO,UACP4D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAKugB,EAAc,KAHhC,sBAOC,IACD,kBAAC7Z,GAAA,EAAD,CACIiF,SAAUjC,EACV5D,KAAM,SACN3F,QAAS,YACTtE,MAAO,WAJX,wBAaI,IAAfykB,GACG,0BAAM7gB,UAAWpB,EAAQuhB,YACnB/U,SAAU,SAAAC,GACZA,EAAEC,iBACFwV,EAAc,KAId,yBAAK9gB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,kFAIA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAACnD,UAAU,YAC5B,kBAAC8Z,GAAA,EAAD,CACI3W,UAAQ,EACRzE,MAA0B,MAAnBia,EAAOO,QAAkB,QAAU,OAC1C7f,SAAU,SAAAsJ,GACgB,SAAnBA,EAAEL,OAAO5D,MACR2a,EAAU,2BACHV,GADE,IAELO,QAAS,cAGbG,EAAU,2BACHV,GADE,IAELO,QAAS,QAIrB7K,KAAG,GAEH,kBAACtJ,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,iBAEV,kBAACgF,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,4BAQ9B,kBAACia,GAAA,EAAD,CAAUC,GAAuB,MAAnBtB,EAAOO,SACjB,yBAAK5hB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,kCAGA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAACgG,GAAD,CACIxI,MAAOia,EAAOO,QACd7f,SAAUgJ,EAAa,WACvB0E,IAAK,EACLI,IAAK,mBACLpH,MAAO,mDAS3B,yBAAKzI,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAgC,MAAnBgB,EAAOO,QAAkB,IAAM,MAExE,yBAAK5hB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,4EAIA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAACnD,UAAU,YAC5B,kBAAC8Z,GAAA,EAAD,CACI3W,UAAQ,EACRzE,MAA8C,KAAvCia,EAAOQ,kBAAkBC,UAAmB,QAAU,OAC7D/f,SAAU,SAAAsJ,GACgB,SAAnBA,EAAEL,OAAO5D,MACR2a,EAAU,2BACHV,GADE,IAELQ,kBAAkB,2BACXR,EAAOQ,mBADG,IAEbC,UAAU,2BAIlBC,EAAU,2BACHV,GADE,IAELQ,kBAAkB,2BACXR,EAAOQ,mBADG,IAEbC,UAAU,SAK1B/K,KAAG,GAEH,kBAACtJ,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,iBAEV,kBAACgF,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,4BAQ9B,kBAACia,GAAA,EAAD,CAAUC,GAA2C,KAAvCtB,EAAOQ,kBAAkBC,WACnC,yBAAK9hB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAgC,MAAnBgB,EAAOO,QAAkB,IAAM,MAExE,yBAAK5hB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,iJAGA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACIxE,MAAOia,EAAOQ,kBAAkBC,UAChC/f,UAzqBbuD,EA0qBiB,YA1qBT,SAAAtD,GAC/B+f,EAAU,2BACHV,GADE,IAELQ,kBAAkB,2BACXR,EAAOQ,mBADG,kBAEZvc,EAAOtD,EAAMgJ,OAAO5D,oBAgrBjB,yBAAKpH,UAAWpB,EAAQ4hB,YACpB,kBAACvZ,GAAA,EAAD,CACI7K,MAAO,UACP4D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAKugB,EAAc,KAHhC,sBAOC,IACD,kBAAC7Z,GAAA,EAAD,CACIiF,SAAUjC,EACV5D,KAAM,SACN3F,QAAS,YACTtE,MAAO,WAJX,wBAaI,IAAfykB,GACG,0BAAM7gB,UAAWpB,EAAQuhB,YAAa/U,SApqB7B,SAAAC,GACjBA,EAAEC,iBACFpB,GAAW,GAEX,IAAM0Y,EAAU,eAAOvB,GACvBuB,EAAWf,kBAAX,eAAmCe,EAAWf,mBAG/B,UAAXV,GAAoD,UAA9BE,EAAOI,qBAC7BmB,EAAWlB,QAAU,IAIzBkB,EAAWrB,WAAuC,SAA1BqB,EAAWrB,WACnCqB,EAAWnB,mBAAuD,SAAlCmB,EAAWnB,mBAC3CmB,EAAWhB,QAAU3P,SAAS2Q,EAAWhB,SACzCgB,EAAWjB,UAAqC,SAAzBiB,EAAWjB,UAClCiB,EAAWf,kBAAkBC,UAAYc,EAAWf,kBAAkBC,UAAUjP,MAAM,KAChC,IAAlD+P,EAAWf,kBAAkBC,UAAUpP,QAA8D,KAA9CkQ,EAAWf,kBAAkBC,UAAU,KAC9Fc,EAAWf,kBAAkBC,UAAY,IAG7Cjd,KAAIoG,KAAK,gBAAiB,CACtBoW,OAAQuB,IAEP7d,MAAK,WACFP,EAAe,MAAO,QAAS,kCAAWoc,EAAMS,OAAS,eAAO,gBAAO,WACvEP,EAAc,MAEjB/a,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACFmF,GAAW,MAGnBA,GAAW,KAioBC,yBAAKlK,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,sBAGxB,yBAAKvgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,wFAGA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRzE,MAAOia,EAAOrT,KACdjM,SAAUgJ,EAAa,cAM3C,yBAAK/K,UAAWpB,EAAQ4hB,YACpB,kBAACvZ,GAAA,EAAD,CACI7K,MAAO,UACP4D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAKugB,EAAc,KAHhC,sBAOC,IACD,kBAAC7Z,GAAA,EAAD,CACIiF,SAAUjC,EACV5D,KAAM,SACN3F,QAAS,YACTtE,MAAO,WAJX,kBAaI,IAAfykB,GACG,oCACA,0BAAM7gB,UAAWpB,EAAQuhB,aACrB,kBAAC1f,EAAA,EAAD,sCACUmgB,EAAMS,OAAS,eAAO,eADhC,UAGA,kBAAC5gB,EAAA,EAAD,CAAYC,QAAS,QAAStE,MAAO,iBAArC,2MAIA,yBAAK4D,UAAWpB,EAAQ4hB,YACpB,kBAACvZ,GAAA,EAAD,CACI7K,MAAO,UACP4D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAKlB,EAAQkC,KAAK,mBAH/B,sDAWZ,kBAACie,GAAD,CACIvgB,KAAmB,SAAbgiB,EACNxB,QAAM,EACNC,SAAO,EACPhZ,QAAS,kBAAMwa,EAAY,OAE/B,kBAAC1B,GAAD,CACIvgB,KAAmB,SAAbgiB,EACNvB,SAAO,EACPhZ,QAAS,kBAAMwa,EAAY,QCl5B3C,IAAMhnB,GAAYC,aAAW,SAAAJ,GAAK,MAAK,CACnComB,YAAa,CACTxmB,QAAS,uBAEbiQ,KAAM,CACF1Q,SAAU,IACV2Q,UAAW,IAEfE,cAAc,eACThQ,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BhC,QAAS,oBAGjBymB,iBAAkB,CACd/mB,QAAS,OACTyQ,aAAc,GACdnQ,QAAS,GACTa,WAAYT,EAAMU,YAAYC,OAAO,mBAAoB,CACrDC,OAAQZ,EAAMU,YAAYE,OAAOC,MACjCC,SAAUd,EAAMU,YAAYI,SAASC,gBAEzC,iBAAkB,CACd2B,gBAAiB1C,EAAMsC,QAAQK,WAAWC,UAGlD0jB,WAAY,CACRjmB,MAAO,GACPgI,OAAQ,GACR3F,gBAAiBM,YAAQhD,EAAMsC,QAAQE,UAAU+jB,MAAO,IACxDlkB,MAAOrC,EAAMsC,QAAQE,UAAUoc,aAC/BF,UAAW,SACXgB,aAAc,QAElB8G,oBAAqB,CACjBplB,YAAa,IAEjBqlB,WAAY,CACR3W,UAAW,IAEfrI,OAAQ,CACJrG,YAAapB,EAAMC,QAAQ,QAI7BymB,GAAQ,CACV,CACI7kB,MAAO,2BACP8kB,UAAU,GAEd,CACI9kB,MAAO,2BACP8kB,UAAU,GAEd,CACI9kB,MAAO,2BACP8kB,UAAU,GAEd,CACI9kB,MAAO,2BACP8kB,UAAU,GAEd,CACI9kB,MAAO,eACP8kB,UAAU,IAIH,SAASqC,GAAYnC,GAChC,IAAMhiB,EAAU1E,KACVmF,EAAUC,eAFuB,EAIHR,mBAAS,GAJN,mBAIhC+hB,EAJgC,KAIpBC,EAJoB,OAKThiB,oBAAS,GALA,mBAKhCmL,EALgC,KAKvBC,EALuB,OAMnBrG,IAAM/E,SAAS,IAAIiiB,KAAhCC,EANgC,sBAOPliB,mBAAS,IAPF,mBAOhCmiB,EAPgC,KAOtBC,EAPsB,OAQXpiB,mBAAS8hB,EAAMS,OAAOT,EAAMS,OAAO,CAC3DzC,KAAM,QACN5Q,KAAM,GACNiV,UAAW,GACXI,UAAW,GACX3B,QAAS,GACTC,UAAW,OACXL,YAAa,+BACbC,WAAY,OACZC,aAAc,4BACdC,mBAAoB,QACpBG,QAAS,IACTC,kBAAmB,CACfC,UAAW,GACXwB,SAAS,MAtBsB,mBAQhCjC,EARgC,KAQxBU,EARwB,KA0BjChX,EAAe,SAAAzF,GAAI,OAAI,SAAAtD,GACzB+f,EAAU,2BACHV,GADE,kBAEJ/b,EAAOtD,EAAMgJ,OAAO5D,WAIvBmc,EAAqB,SAAAje,GAAI,OAAI,SAAAtD,GAC/B+f,EAAU,2BACHV,GADE,IAELQ,kBAAkB,2BACXR,EAAOQ,mBADG,kBAEZvc,EAAOtD,EAAMgJ,OAAO5D,aAS3B3H,EAAWC,eACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKvI,GAA5B,OACIqD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKvI,MACvD,CAACqD,IA2CL,OACI,6BACI,kBAACgB,EAAA,EAAD,CAAYC,QAAS,MAAOkgB,EAAMS,OAAS,eAAO,eAAlD,0CACA,kBAACW,GAAA,EAAD,CAASnB,WAAYA,GAChBJ,GAAMtf,KAAI,SAACsH,EAAOiU,GACf,IAxDMhN,EAwDAuS,EAAY,GACZC,EAAa,GASnB,OARIzZ,EAAMiY,WACNwB,EAAWxB,SACP,kBAACjgB,EAAA,EAAD,CAAYC,QAAQ,WAApB,iBA5DFgP,EA+DYgN,EA9DvBsE,EAAQmB,IAAIzS,KA+DHuS,EAAUG,WAAY,GAGtB,kBAACC,GAAA,EAAD,eAAM1gB,IAAK8G,EAAM7M,OAAWqmB,GACxB,kBAACK,GAAA,EAAcJ,EAAazZ,EAAM7M,YAMlC,IAAfilB,GACG,0BACI7gB,UAAWpB,EAAQuhB,YACnB/U,SAAU,SAAAC,GACNA,EAAEC,iBACFwV,EAAc,KAIlB,yBAAK9gB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,+PAGI,0FAHJ,YAQR,yBAAKV,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,eAEI,kBAACkN,GAAA,EAAD,CACIC,KAAM,kCACN7C,OAAQ,UAFZ,wCAFJ,4DAaR,yBAAKhL,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,4KAGA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,wCAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRzE,MAAOia,EAAOmC,WACdzhB,SAAUgJ,EAAa,oBAO3C,yBAAK/K,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,sTAGA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAACnD,UAAU,YAC5B,kBAAC8Z,GAAA,EAAD,CACI3W,UAAQ,EACRzE,MAAOia,EAAOM,UACd5f,SAAUgJ,EAAa,aACvBgM,KAAG,GAEH,kBAACtJ,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,iBAEV,kBAACgF,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,sBAQ9B,yBAAKzI,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,yGAGA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC+V,GAAD,CACIvY,MAAOia,EAAOK,QACd3f,SAAUgJ,EAAa,WACvBc,UAAQ,EACRpD,MAAO,oCAMvB,yBAAKzI,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,2LAIA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,MAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRzE,MAAOia,EAAOgC,UACdthB,SAAUgJ,EAAa,iBAInC,yBAAK/K,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,MAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRzE,MAAOia,EAAO4B,UACdlhB,SAAUgJ,EAAa,mBAO3C,yBAAK/K,UAAWpB,EAAQ4hB,YACpB,kBAACvZ,GAAA,EAAD,CACIiF,SAAUjC,EACV5D,KAAM,SACN3F,QAAS,YACTtE,MAAO,WAJX,wBAYI,IAAfykB,GACG,0BACI7gB,UAAWpB,EAAQuhB,YACnB/U,SAAU,SAAAC,GACNA,EAAEC,iBACFwV,EAAc,KAGlB,yBAAK9gB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,meAIc,IACV,kBAACkN,GAAA,EAAD,CACIxR,MAAO,YACPyR,KAAM,oBACNtN,QAAS,kBAAM2gB,EAAY,UAH/B,oDAMQ,IAXZ,UAcA,yBAAKlhB,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRzE,MAAOia,EAAOC,YACdvf,SAAUgJ,EAAa,qBAO3C,yBAAK/K,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,mXAGc,IACV,kBAACkN,GAAA,EAAD,CACIxR,MAAO,YACPyR,KAAM,oBACNtN,QAAS,kBAAM2gB,EAAY,UAH/B,0DAMQ,IAVZ,UAaA,yBAAKlhB,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAACnD,UAAU,YAC5B,kBAAC8Z,GAAA,EAAD,CACIliB,aAAW,SACXgF,KAAK,UACL8B,MAAOia,EAAOE,WACdxf,SAAUgJ,EAAa,cACvBgM,KAAG,GAEH,kBAACtJ,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,mCAEV,kBAACgF,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,0BAMtB,kBAACia,GAAA,EAAD,CAAUC,GAA0B,SAAtBtB,EAAOE,YACjB,yBAAKvhB,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIC,SAC0B,SAAtBwV,EAAOE,WAEXna,MAAOia,EAAOG,aACdzf,SAAUgJ,EACN,uBAS5B,yBAAK/K,UAAWpB,EAAQ4hB,YACpB,kBAACvZ,GAAA,EAAD,CACI7K,MAAO,UACP4D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAMugB,EAAc,KAHjC,sBAOA,kBAAC7Z,GAAA,EAAD,CACIiF,SAAUjC,EACV5D,KAAM,SACN3F,QAAS,YACTtE,MAAO,WAJX,wBAYI,IAAfykB,GACG,0BACI7gB,UAAWpB,EAAQuhB,YACnB/U,SAAU,SAAAC,GACNA,EAAEC,iBACFwV,EAAc,KAGlB,yBAAK9gB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,iFAEI,6BAFJ,kOAMA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAACnD,UAAU,YAC5B,kBAAC8Z,GAAA,EAAD,CACI3W,UAAQ,EACRzE,MAAOia,EAAOI,mBACd1f,SAAU,SAAAsJ,GACmB,SAArBgW,EAAOM,WAAyC,SAAjBtW,EAAEL,OAAO5D,MAI5C2D,EACA,qBADAA,CAEEM,GALE7G,EAAe,MAAO,QAAQ,qEAAe,YAOrDuS,KAAG,GAEH,kBAACtJ,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,iBAEV,kBAACgF,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,sBAQ9B,yBAAKzI,UAAWpB,EAAQ4hB,YACpB,kBAACvZ,GAAA,EAAD,CACI7K,MAAO,UACP4D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAMugB,EAAc,KAHjC,sBAMU,IACV,kBAAC7Z,GAAA,EAAD,CACIiF,SAAUjC,EACV5D,KAAM,SACN3F,QAAS,YACTtE,MAAO,WAJX,wBAYI,IAAfykB,GACG,0BACI7gB,UAAWpB,EAAQuhB,YACnB/U,SAAU,SAAAC,GACNA,EAAEC,iBACFwV,EAAc,KAGlB,yBAAK9gB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,kFAIA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAACnD,UAAU,YAC5B,kBAAC8Z,GAAA,EAAD,CACI3W,UAAQ,EACRzE,MACuB,MAAnBia,EAAOO,QACD,QACA,OAEV7f,SAAU,SAAAsJ,GACiB,SAAnBA,EAAEL,OAAO5D,MACT2a,EAAU,2BACHV,GADE,IAELO,QAAS,cAGbG,EAAU,2BACHV,GADE,IAELO,QAAS,QAIrB7K,KAAG,GAEH,kBAACtJ,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,iBAEV,kBAACgF,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,4BAQ9B,kBAACia,GAAA,EAAD,CAAUC,GAAuB,MAAnBtB,EAAOO,SACjB,yBAAK5hB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,kCAGA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAACgG,GAAD,CACIxI,MAAOia,EAAOO,QACd7f,SAAUgJ,EAAa,WACvB0E,IAAK,EACLI,IAAK,mBACLpH,MAAO,mDAO3B,yBAAKzI,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YACA,MAAnBgB,EAAOO,QAAkB,IAAM,MAGxC,yBAAK5hB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,4EAIA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAACnD,UAAU,YAC5B,kBAAC8Z,GAAA,EAAD,CACI3W,UAAQ,EACRzE,MAEuB,KADnBia,EAAOQ,kBACFC,UACC,QACA,OAEV/f,SAAU,SAAAsJ,GACiB,SAAnBA,EAAEL,OAAO5D,MACT2a,EAAU,2BACHV,GADE,IAELQ,kBAAkB,2BACXR,EAAOQ,mBADG,IAEbC,UACI,2BAIZC,EAAU,2BACHV,GADE,IAELQ,kBAAkB,2BACXR,EAAOQ,mBADG,IAEbC,UAAW,SAK3B/K,KAAG,GAEH,kBAACtJ,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,iBAEV,kBAACgF,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,4BAQ9B,kBAACia,GAAA,EAAD,CAAUC,GAA2C,KAAvCtB,EAAOQ,kBAAkBC,WACnC,yBAAK9hB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YACA,MAAnBgB,EAAOO,QAAkB,IAAM,MAGxC,yBAAK5hB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,iJAIA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACIxE,MACIia,EAAOQ,kBACFC,UAET/f,SAAUwhB,EACN,oBAS5B,yBAAKvjB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YACnBoD,aAAU,EAAE,CACU,MAAnBpC,EAAOO,QACgC,KAAvCP,EAAOQ,kBAAkBC,cAIrC,yBAAK9hB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,mEAIA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAACnD,UAAU,YAC5B,kBAAC8Z,GAAA,EAAD,CACI3W,UAAQ,EACRzE,MAEsB,KADlBia,EAAOQ,kBACFyB,SACC,QACA,OAEVvhB,SAAU,SAAAsJ,GACiB,SAAnBA,EAAEL,OAAO5D,MACT2a,EAAU,2BACHV,GADE,IAELQ,kBAAkB,2BACXR,EAAOQ,mBADG,IAEbyB,SACI,eAIZvB,EAAU,2BACHV,GADE,IAELQ,kBAAkB,2BACXR,EAAOQ,mBADG,IAEbyB,SAAU,SAK1BvM,KAAG,GAEH,kBAACtJ,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,iBAEV,kBAACgF,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,4BAQ9B,kBAACia,GAAA,EAAD,CAAUC,GAA0C,KAAtCtB,EAAOQ,kBAAkByB,UACnC,yBAAKtjB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YACnBoD,aAAU,EAAE,CACU,MAAnBpC,EAAOO,QACgC,KAAvCP,EAAOQ,kBAAkBC,cAIrC,yBAAK9hB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,qXAIA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,yBAGA,kBAACC,GAAA,EAAD,CACIxE,MACIia,EAAOQ,kBACFyB,SAETvhB,SAAUwhB,EACN,mBAS5B,yBAAKvjB,UAAWpB,EAAQ4hB,YACpB,kBAACvZ,GAAA,EAAD,CACI7K,MAAO,UACP4D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAMugB,EAAc,KAHjC,sBAMU,IACV,kBAAC7Z,GAAA,EAAD,CACIiF,SAAUjC,EACV5D,KAAM,SACN3F,QAAS,YACTtE,MAAO,WAJX,wBAYI,IAAfykB,GACG,0BAAM7gB,UAAWpB,EAAQuhB,YAAa/U,SA7tB7B,SAAAC,GACjBA,EAAEC,iBACFpB,GAAW,GAEX,IAAM0Y,EAAU,eAAQvB,GACxBuB,EAAWf,kBAAX,eAAoCe,EAAWf,mBAG/Ce,EAAWrB,WAAuC,SAA1BqB,EAAWrB,WACnCqB,EAAWnB,mBAC2B,SAAlCmB,EAAWnB,mBACfmB,EAAWjB,UAAqC,SAAzBiB,EAAWjB,UAClCiB,EAAWhB,QAAU3P,SAAS2Q,EAAWhB,SACzCgB,EAAWf,kBAAkBC,UAAYc,EAAWf,kBAAkBC,UAAUjP,MAC5E,KAGkD,IAAlD+P,EAAWf,kBAAkBC,UAAUpP,QACO,KAA9CkQ,EAAWf,kBAAkBC,UAAU,KAEvCc,EAAWf,kBAAkBC,UAAY,IAG7Cjd,KAAIoG,KAAK,gBAAiB,CACtBoW,OAAQuB,IAEP7d,MAAK,WACFP,EAAe,MAAO,QAAS,kCAAUoc,EAAMS,OAAS,eAAO,gBAAO,WACtEP,EAAc,MAEjB/a,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACFmF,GAAW,MAGnBA,GAAW,KAyrBC,yBAAKlK,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,sBACxB,yBAAKvgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,wFAGA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRzE,MAAOia,EAAOrT,KACdjM,SAAUgJ,EAAa,cAM3C,yBAAK/K,UAAWpB,EAAQ4hB,YACpB,kBAACvZ,GAAA,EAAD,CACI7K,MAAO,UACP4D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAMugB,EAAc,KAHjC,sBAMU,IACV,kBAAC7Z,GAAA,EAAD,CACIiF,SAAUjC,EACV5D,KAAM,SACN3F,QAAS,YACTtE,MAAO,WAJX,kBAYI,IAAfykB,GACG,oCACI,0BAAM7gB,UAAWpB,EAAQuhB,aACrB,kBAAC1f,EAAA,EAAD,sCAAkBmgB,EAAMS,OAAS,eAAO,eAAxC,UACA,kBAAC5gB,EAAA,EAAD,CAAYC,QAAS,QAAStE,MAAO,iBAArC,2MAIJ,yBAAK4D,UAAWpB,EAAQ4hB,YACpB,kBAACvZ,GAAA,EAAD,CACI7K,MAAO,UACP4D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAMlB,EAAQkC,KAAK,mBAHhC,sDAWZ,kBAACie,GAAD,CACIvgB,KAAmB,SAAbgiB,EACNxB,QAAM,EACN/Y,QAAS,kBAAMwa,EAAY,OAE/B,kBAAC1B,GAAD,CACIvgB,KAAmB,SAAbgiB,EACNva,QAAS,kBAAMwa,EAAY,QC15B3C,IAAMhnB,GAAYC,aAAW,SAAAJ,GAAK,MAAK,CACnComB,YAAa,CACTxmB,QAAS,uBAEbiQ,KAAM,CACF1Q,SAAU,IACV2Q,UAAW,IAEfE,cAAc,eACThQ,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BhC,QAAS,oBAGjBymB,iBAAkB,CACd/mB,QAAS,OACTyQ,aAAc,GACdnQ,QAAS,GACTa,WAAYT,EAAMU,YAAYC,OAAO,mBAAoB,CACrDC,OAAQZ,EAAMU,YAAYE,OAAOC,MACjCC,SAAUd,EAAMU,YAAYI,SAASC,gBAEzC,iBAAkB,CACd2B,gBAAiB1C,EAAMsC,QAAQK,WAAWC,UAGlD0jB,WAAY,CACRjmB,MAAO,GACPgI,OAAQ,GACR3F,gBAAiBM,YAAQhD,EAAMsC,QAAQE,UAAU+jB,MAAO,IACxDlkB,MAAOrC,EAAMsC,QAAQE,UAAUoc,aAC/BF,UAAW,SACXgB,aAAc,QAElB8G,oBAAqB,CACjBplB,YAAa,IAEjBqlB,WAAY,CACR3W,UAAW,IAEfrI,OAAQ,CACJrG,YAAapB,EAAMC,QAAQ,IAE/B0pB,gBAAiB,CAAEC,cAAe,QAClC,UAAU,CACN,KAAO,CACHvnB,MAAO,sBACP/C,QAAS,eACTM,QAAS,UACTkpB,WAAW,0DACXpJ,aAAc,MACdhd,gBAAiB,8BAKvBgkB,GAAQ,CACV,CACI7kB,MAAO,2BACP8kB,UAAU,GAEd,CACI9kB,MAAO,2BACP8kB,UAAU,GAEd,CACI9kB,MAAO,2BACP8kB,UAAU,GAEd,CACI9kB,MAAO,2BACP8kB,UAAU,GAEd,CACI9kB,MAAO,2BACP8kB,UAAU,GAEd,CACI9kB,MAAO,eACP8kB,UAAU,IAIH,SAASkD,GAAShD,GAC7B,IAkC2Btb,EAlCrB1G,EAAU1E,KACVmF,EAAUC,eAFoB,EAIAR,mBAAS,GAJT,mBAI7B+hB,EAJ6B,KAIjBC,EAJiB,OAKNhiB,oBAAS,GALH,mBAK7BmL,EAL6B,KAKpBC,EALoB,OAMNrG,IAAM/E,SAAS,IAAIiiB,KANb,mBAM7BC,EAN6B,KAMpB6C,EANoB,OAOJ/kB,mBAAS,IAPL,mBAO7BmiB,EAP6B,KAOnBC,EAPmB,OAQRpiB,mBAAS,SARD,mBAQ7BqiB,EAR6B,KAQrBC,EARqB,OASRtiB,mBAAS8hB,EAAMS,OAAOT,EAAMS,OAAO,CAC3DzC,KAAM,MACN5Q,KAAM,GACNiV,UAAW,GACXI,UAAW,GACX3B,QAAS,GACTsB,OAAQ,GACRrB,UAAW,OACXL,YAAa,+BACbC,WAAY,OACZC,aAAc,4BACdC,mBAAoB,QACpBG,QAAS,IACTC,kBAAmB,CACfC,UAAW,MAvBiB,mBAS7BT,EAT6B,KASrBU,EATqB,OA0BLjjB,mBAAS8hB,EAAMS,OAAOT,EAAMS,OAAOvT,GAAG,GA1BjC,mBA0B7BgW,EA1B6B,KA0BpBC,EA1BoB,KA4B9BhZ,EAAe,SAAAzF,GAAI,OAAI,SAAAtD,GACzB+f,EAAU,2BACHV,GADE,kBAEJ/b,EAAOtD,EAAMgJ,OAAO5D,WAkBvB3H,EAAWC,eACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKvI,GAA5B,OACIqD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKvI,MACvD,CAACqD,IAGCukB,EAAe,SAAA3Y,GACjBA,EAAEC,iBACFpB,GAAW,GAEX,IAAM0Y,EAAU,eAAQvB,GACxBuB,EAAWf,kBAAX,eAAoCe,EAAWf,mBAEhC,UAAXV,IACAyB,EAAWlB,QAAU,IAIzBkB,EAAWrB,WAAuC,SAA1BqB,EAAWrB,WACnCqB,EAAWnB,mBAC2B,SAAlCmB,EAAWnB,mBACfmB,EAAWjB,UAAqC,SAAzBiB,EAAWjB,UAClCiB,EAAWhB,QAAU3P,SAAS2Q,EAAWhB,SACzCgB,EAAWf,kBAAkBC,UAAYc,EAAWf,kBAAkBC,UAAUjP,MAC5E,KAGkD,IAAlD+P,EAAWf,kBAAkBC,UAAUpP,QACO,KAA9CkQ,EAAWf,kBAAkBC,UAAU,KAEvCc,EAAWf,kBAAkBC,UAAY,IAG7Cjd,KAAIoG,KAAK,gBAAiB,CACtBoW,OAAQuB,IAEP7d,MAAK,SAAAC,GACFR,EAAe,MAAO,QAAS,kCAAUoc,EAAMS,OAAS,eAAO,gBAAO,WACtEP,EAAc,GACdiD,EAAY/e,EAASC,SAExBc,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACFmF,GAAW,MAGnBA,GAAW,IAqBf,OACI,6BACI,kBAACzJ,EAAA,EAAD,CAAYC,QAAS,MAAOkgB,EAAMS,OAAS,eAAO,eAAlD,oDACA,kBAACW,GAAA,EAAD,CAASnB,WAAYA,GAChBJ,GAAMtf,KAAI,SAACsH,EAAOiU,GACf,IA/EMhN,EA+EAuS,EAAY,GACZC,EAAa,GASnB,OARIzZ,EAAMiY,WACNwB,EAAWxB,SACP,kBAACjgB,EAAA,EAAD,CAAYC,QAAQ,WAApB,iBAnFFgP,EAsFYgN,EArFvBsE,EAAQmB,IAAIzS,KAsFHuS,EAAUG,WAAY,GAGtB,kBAACC,GAAA,EAAD,eAAM1gB,IAAK8G,EAAM7M,OAAWqmB,GACxB,kBAACK,GAAA,EAAcJ,EAAazZ,EAAM7M,YAMlC,IAAfilB,GACG,0BACI7gB,UAAWpB,EAAQuhB,YACnB/U,SAAU,SAAAC,GACNA,EAAEC,iBACFwV,EAAc,KAIlB,yBAAK9gB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,qQAGI,0FAHJ,YAQR,yBAAKV,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,eAEI,kBAACkN,GAAA,EAAD,CACIC,KAAM,0CACN7C,OAAQ,UAFZ,sCAFJ,0GAQ2B,0DAR3B,SAQ6C,0DAR7C,iCASS,6DAKjB,yBAAKhL,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,mFACwB,qDADxB,UAGA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,uBAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRzE,MAAOia,EAAOmC,WACdzhB,SAAUgJ,EAAa,oBAO3C,yBAAK/K,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,wUAGA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAACnD,UAAU,YAC5B,kBAAC8Z,GAAA,EAAD,CACI3W,UAAQ,EACRzE,MAAOia,EAAOM,UACd5f,SAAUgJ,EAAa,aACvBgM,KAAG,GAEH,kBAACtJ,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,iBAEV,kBAACgF,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,4BAQ9B,yBAAKzI,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,yFACyB,0DADzB,qBAEI,0DAFJ,mCAE4B,+EAE5B,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,YAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRzE,MAAOia,EAAO2B,OACdjhB,SAAUgJ,EAAa,UACvByE,WAAY,CACRyU,QAAQ,0EACRroB,MAAM,0GAQ9B,yBAAKoE,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,8GAGA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAACnD,UAAU,YAC5B,kBAAC8Z,GAAA,EAAD,CACI3W,UAAQ,EACRzE,MAAO+Z,EACPpf,SAAU,SAAAsJ,GACN+V,EAAU/V,EAAEL,OAAO5D,QAEvB2P,KAAG,GAEH,kBAACtJ,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,iBAEV,kBAACgF,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,4BAQ9B,kBAACia,GAAA,EAAD,CAAUC,GAAe,SAAXxB,GACV,yBAAKnhB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,eAEI,kBAACkN,GAAA,EAAD,CAAMC,KAAM,6CAA8C7C,OAAQ,UAAlE,yDAFJ,uPAQA,yBAAKhL,UAAWpB,EAAQgL,MACpB,kBAAC+V,GAAD,CACIvY,MAAOia,EAAOK,QACd3f,SAAUgJ,EAAa,WACvBc,SAAqB,SAAXsV,EACV1Y,MAAO,qCAO3B,yBAAKzI,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAaoD,aAAU,EAAE,CAClC,SAAXtC,MAGR,yBAAKnhB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,2BAEI,kBAACkN,GAAA,EAAD,CAAMC,KAAM,oDAAqD7C,OAAQ,UAAzE,wCAFJ,mGAOA,yBAAKhL,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,gBAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACR2D,WAAY,CACRyU,QAAQ,OACRroB,MAAM,wCAEVwL,MAAOia,EAAOgC,UACdthB,SAAUgJ,EAAa,iBAInC,yBAAK/K,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,qBAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACR2D,WAAY,CACRyU,QAAQ,OACRroB,MAAM,wCAEVwL,MAAOia,EAAO4B,UACdlhB,SAAUgJ,EAAa,mBAO3C,yBAAK/K,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAaoD,aAAU,EAAE,CAClC,SAAXtC,MAGR,yBAAKnhB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,0DAGA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRzE,MAAOia,EAAOrT,KACdjM,SAAUgJ,EAAa,cAO3C,yBAAK/K,UAAWpB,EAAQ4hB,YACpB,kBAACvZ,GAAA,EAAD,CACIiF,SAAUjC,EACV5D,KAAM,SACN3F,QAAS,YACTtE,MAAO,WAJX,wBAYI,IAAfykB,GACG,0BACI7gB,UAAWpB,EAAQuhB,YACnB/U,SAAU,SAAAC,GACNA,EAAEC,iBACFwV,EAAc,KAGlB,yBAAK9gB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,meAIc,IACV,kBAACkN,GAAA,EAAD,CACIxR,MAAO,YACPyR,KAAM,oBACNtN,QAAS,kBAAM2gB,EAAY,UAH/B,oDAMQ,IAXZ,UAcA,yBAAKlhB,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRzE,MAAOia,EAAOC,YACdvf,SAAUgJ,EAAa,qBAO3C,yBAAK/K,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,mXAGc,IACV,kBAACkN,GAAA,EAAD,CACIxR,MAAO,YACPyR,KAAM,oBACNtN,QAAS,kBAAM2gB,EAAY,UAH/B,0DAMQ,IAVZ,UAaA,yBAAKlhB,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAACnD,UAAU,YAC5B,kBAAC8Z,GAAA,EAAD,CACIliB,aAAW,SACXgF,KAAK,UACL8B,MAAOia,EAAOE,WACdxf,SAAUgJ,EAAa,cACvBgM,KAAG,GAEH,kBAACtJ,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,mCAEV,kBAACgF,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,0BAMtB,kBAACia,GAAA,EAAD,CAAUC,GAA0B,SAAtBtB,EAAOE,YACjB,yBAAKvhB,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIC,SAC0B,SAAtBwV,EAAOE,WAEXna,MAAOia,EAAOG,aACdzf,SAAUgJ,EACN,uBAS5B,yBAAK/K,UAAWpB,EAAQ4hB,YACpB,kBAACvZ,GAAA,EAAD,CACI7K,MAAO,UACP4D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAMugB,EAAc,KAHjC,sBAOA,kBAAC7Z,GAAA,EAAD,CACIiF,SAAUjC,EACV5D,KAAM,SACN3F,QAAS,YACTtE,MAAO,WAJX,wBAYI,IAAfykB,GACG,0BACI7gB,UAAWpB,EAAQuhB,YACnB/U,SAAU,SAAAC,GACNA,EAAEC,iBACFwV,EAAc,KAGlB,yBAAK9gB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,iFAEI,6BAFJ,kOAMA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAACnD,UAAU,YAC5B,kBAAC8Z,GAAA,EAAD,CACI3W,UAAQ,EACRzE,MAAOia,EAAOI,mBACd1f,SAAU,SAAAsJ,GACmB,SAArBgW,EAAOM,WAAyC,SAAjBtW,EAAEL,OAAO5D,MAI5C2D,EACA,qBADAA,CAEEM,GALE7G,EAAe,MAAO,QAAQ,qEAAe,YAOrDuS,KAAG,GAEH,kBAACtJ,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,iBAEV,kBAACgF,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,sBAQ9B,yBAAKzI,UAAWpB,EAAQ4hB,YACpB,kBAACvZ,GAAA,EAAD,CACI7K,MAAO,UACP4D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAMugB,EAAc,KAHjC,sBAMU,IACV,kBAAC7Z,GAAA,EAAD,CACIiF,SAAUjC,EACV5D,KAAM,SACN3F,QAAS,YACTtE,MAAO,WAJX,wBAYI,IAAfykB,GACG,0BACI7gB,UAAWpB,EAAQuhB,YACnB/U,SAAU4Y,GAEV,yBAAKhkB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,kFAIA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAACnD,UAAU,YAC5B,kBAAC8Z,GAAA,EAAD,CACI3W,UAAQ,EACRzE,MACuB,MAAnBia,EAAOO,QACD,QACA,OAEV7f,SAAU,SAAAsJ,GACiB,SAAnBA,EAAEL,OAAO5D,MACT2a,EAAU,2BACHV,GADE,IAELO,QAAS,cAGbG,EAAU,2BACHV,GADE,IAELO,QAAS,QAIrB7K,KAAG,GAEH,kBAACtJ,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,iBAEV,kBAACgF,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,4BAQ9B,kBAACia,GAAA,EAAD,CAAUC,GAAuB,MAAnBtB,EAAOO,SACjB,yBAAK5hB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,kCAGA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAACgG,GAAD,CACIxI,MAAOia,EAAOO,QACd7f,SAAUgJ,EAAa,WACvB0E,IAAK,EACLI,IAAK,mBACLpH,MAAO,mDAO3B,yBAAKzI,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YACA,MAAnBgB,EAAOO,QAAkB,IAAM,MAGxC,yBAAK5hB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,4EAIA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAACnD,UAAU,YAC5B,kBAAC8Z,GAAA,EAAD,CACI3W,UAAQ,EACRzE,MAEuB,KADnBia,EAAOQ,kBACFC,UACC,QACA,OAEV/f,SAAU,SAAAsJ,GACiB,SAAnBA,EAAEL,OAAO5D,MACT2a,EAAU,2BACHV,GADE,IAELQ,kBAAkB,2BACXR,EAAOQ,mBADG,IAEbC,UACI,2BAIZC,EAAU,2BACHV,GADE,IAELQ,kBAAkB,2BACXR,EAAOQ,mBADG,IAEbC,UAAW,SAK3B/K,KAAG,GAEH,kBAACtJ,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,iBAEV,kBAACgF,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,4BAQ9B,kBAACia,GAAA,EAAD,CAAUC,GAA2C,KAAvCtB,EAAOQ,kBAAkBC,WACnC,yBAAK9hB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YACA,MAAnBgB,EAAOO,QAAkB,IAAM,MAGxC,yBAAK5hB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,iJAIA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACIxE,MACIia,EAAOQ,kBACFC,UAET/f,UAlvBbuD,EAmvBiB,YAnvBT,SAAAtD,GAC/B+f,EAAU,2BACHV,GADE,IAELQ,kBAAkB,2BACXR,EAAOQ,mBADG,kBAEZvc,EAAOtD,EAAMgJ,OAAO5D,oBAuvBjB,yBAAKpH,UAAWpB,EAAQ4hB,YACpB,kBAACvZ,GAAA,EAAD,CACI7K,MAAO,UACP4D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAMugB,EAAc,KAHjC,sBAMU,IACV,kBAAC7Z,GAAA,EAAD,CACIiF,SAAUjC,EACV5D,KAAM,SACN3F,QAAS,YACTtE,MAAO,WAJX,wBAYI,IAAfykB,GACG,0BAAM7gB,UAAWpB,EAAQuhB,YAAa/U,SAAU4Y,GAC5C,yBAAKhkB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,sBACxB,yBAAKvgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,wbAIA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC3C,GAAA,EAAD,CACIiF,SAAUjC,EACV7N,MAAO,YACPsE,QAAS,YACTV,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBA5tBrC2J,GAAW,QACXrF,KAAIoG,KAAK,qBAAsB,CAC3B9I,GAAI2hB,IAEH/e,MAAK,WACFP,EAAe,MAAO,QAAS,6CAAW,WAC1Csc,EAAc,MAEjB/a,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACFmF,GAAW,OAitBStL,QAAS,CAAE6J,MAAO7J,EAAQ8kB,kBAN9B,gDAaZ,yBAAK1jB,UAAWpB,EAAQ4hB,YACpB,kBAACvZ,GAAA,EAAD,CACI7K,MAAO,UACP4D,UAAWpB,EAAQ4C,OACnBjB,QAAS,WACLugB,GAAc,SAAAoD,GAAc,OAAIA,EAAiB,KACjDL,GAAW,SAAAM,GACP,IAAMC,EAAa,IAAIrD,IAAIoD,EAAYE,UAEvC,OADAD,EAAWE,IAAIzD,GACRuD,OARnB,gBAeU,MAKN,IAAfvD,GACG,oCACI,0BAAM7gB,UAAWpB,EAAQuhB,aACrB,kBAAC1f,EAAA,EAAD,sCAAkBmgB,EAAMS,OAAS,eAAO,eAAxC,UACA,kBAAC5gB,EAAA,EAAD,CAAYC,QAAS,QAAStE,MAAO,iBAArC,2MAIJ,yBAAK4D,UAAWpB,EAAQ4hB,YACpB,kBAACvZ,GAAA,EAAD,CACI7K,MAAO,UACP4D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAMlB,EAAQkC,KAAK,mBAHhC,sDAWZ,kBAACie,GAAD,CACIvgB,KAAmB,SAAbgiB,EACNxB,QAAM,EACN/Y,QAAS,kBAAMwa,EAAY,OAE/B,kBAAC1B,GAAD,CACIvgB,KAAmB,SAAbgiB,EACNva,QAAS,kBAAMwa,EAAY,QC78B3C,IAAMhnB,GAAYC,aAAW,SAAAJ,GAAK,MAAK,CACnComB,YAAa,CACTxmB,QAAS,uBAEbiQ,KAAM,CACF1Q,SAAU,IACV2Q,UAAW,IAEfE,cAAc,eACThQ,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BhC,QAAS,oBAGjBymB,iBAAkB,CACd/mB,QAAS,OACTyQ,aAAc,GACdnQ,QAAS,GACTa,WAAYT,EAAMU,YAAYC,OAAO,mBAAoB,CACrDC,OAAQZ,EAAMU,YAAYE,OAAOC,MACjCC,SAAUd,EAAMU,YAAYI,SAASC,gBAEzC,iBAAkB,CACd2B,gBAAiB1C,EAAMsC,QAAQK,WAAWC,UAGlD0jB,WAAY,CACRjmB,MAAO,GACPgI,OAAQ,GACR3F,gBAAiBM,YAAQhD,EAAMsC,QAAQE,UAAU+jB,MAAO,IACxDlkB,MAAOrC,EAAMsC,QAAQE,UAAUoc,aAC/BF,UAAW,SACXgB,aAAc,QAElB8G,oBAAqB,CACjBplB,YAAa,IAEjBqlB,WAAY,CACR3W,UAAW,IAEfrI,OAAQ,CACJrG,YAAapB,EAAMC,QAAQ,QAI7BymB,GAAQ,CACV,CACI7kB,MAAO,2BACP8kB,UAAU,GAEd,CACI9kB,MAAO,2BACP8kB,UAAU,GAEd,CACI9kB,MAAO,2BACP8kB,UAAU,GAEd,CACI9kB,MAAO,2BACP8kB,UAAU,GAEd,CACI9kB,MAAO,eACP8kB,UAAU,IAIH,SAAS6D,GAAW3D,GAC/B,IAAMhiB,EAAU1E,KACVmF,EAAUC,eAFsB,EAIFR,mBAAS,GAJP,mBAI/B+hB,EAJ+B,KAInBC,EAJmB,OAKRhiB,oBAAS,GALD,mBAK/BmL,EAL+B,KAKtBC,EALsB,OAMlBrG,IAAM/E,SAAS,IAAIiiB,KAAhCC,EAN+B,sBAONliB,mBAAS,IAPH,mBAO/BmiB,EAP+B,KAOrBC,EAPqB,OAQVpiB,mBAAS8hB,EAAMS,OAAOT,EAAMS,OAAO,CAC3DzC,KAAM,QACN5Q,KAAM,GACNiV,UAAW,GACXI,UAAW,GACX3B,QAAS,GACTC,UAAW,QACXL,YAAa,+BACbC,WAAY,OACZC,aAAc,4BACdC,mBAAoB,QACpBG,QAAS,IACTC,kBAAmB,CACfC,UAAW,GACX3G,MAAM,MAtBwB,mBAQ/BkG,EAR+B,KAQvBU,EARuB,KA0BhChX,EAAe,SAAAzF,GAAI,OAAI,SAAAtD,GACzB+f,EAAU,2BACHV,GADE,kBAEJ/b,EAAOtD,EAAMgJ,OAAO5D,WAIvBmc,EAAqB,SAAAje,GAAI,OAAI,SAAAtD,GAC/B+f,EAAU,2BACHV,GADE,IAELQ,kBAAkB,2BACXR,EAAOQ,mBADG,kBAEZvc,EAAOtD,EAAMgJ,OAAO5D,aAS3B3H,EAAWC,eACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKvI,GAA5B,OACIqD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKvI,MACvD,CAACqD,IA2CL,OACI,6BACI,kBAACgB,EAAA,EAAD,CAAYC,QAAS,MAAOkgB,EAAMS,OAAS,eAAO,eAAlD,gDACA,kBAACW,GAAA,EAAD,CAASnB,WAAYA,GAChBJ,GAAMtf,KAAI,SAACsH,EAAOiU,GACf,IAxDMhN,EAwDAuS,EAAY,GACZC,EAAa,GASnB,OARIzZ,EAAMiY,WACNwB,EAAWxB,SACP,kBAACjgB,EAAA,EAAD,CAAYC,QAAQ,WAApB,iBA5DFgP,EA+DYgN,EA9DvBsE,EAAQmB,IAAIzS,KA+DHuS,EAAUG,WAAY,GAGtB,kBAACC,GAAA,EAAD,eAAM1gB,IAAK8G,EAAM7M,OAAWqmB,GACxB,kBAACK,GAAA,EAAcJ,EAAazZ,EAAM7M,YAMlC,IAAfilB,GACG,0BACI7gB,UAAWpB,EAAQuhB,YACnB/U,SAAU,SAAAC,GACNA,EAAEC,iBACFwV,EAAc,KAIlB,yBAAK9gB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,qQAGI,0FAHJ,YAQR,yBAAKV,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,eAEI,kBAACkN,GAAA,EAAD,CACIC,KAAM,kDACN7C,OAAQ,UAFZ,kCAFJ,sDAaR,yBAAKhL,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,wFAGA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRzE,MAAOia,EAAOmC,WACdzhB,SAAUgJ,EAAa,oBAO3C,yBAAK/K,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,8OAGA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRzE,MAAOia,EAAOgC,UACdthB,SAAUgJ,EAAa,iBAInC,yBAAK/K,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRzE,MAAOia,EAAO4B,UACdlhB,SAAUgJ,EAAa,mBAO3C,yBAAK/K,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,kLAGA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC+V,GAAD,CACIvY,MAAOia,EAAOK,QACd3f,SAAUgJ,EAAa,WACvBc,UAAQ,EACRpD,MAAO,gCAMvB,yBAAKzI,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,qKAC+B,6BAD/B,yPAIA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAACnD,UAAU,YAC5B,kBAAC8Z,GAAA,EAAD,CACI3W,UAAQ,EACRzE,MAAOia,EAAOM,UACd5f,SAAUgJ,EAAa,aACvBgM,KAAG,GAEH,kBAACtJ,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,gDAEV,kBAACgF,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,qDAQ9B,kBAACia,GAAA,EAAD,CAAUC,GAAyB,SAArBtB,EAAOM,WACjB,yBAAK3hB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAIJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,oFAGA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,yCAGA,kBAACC,GAAA,EAAD,CACIxE,MACIia,EAAOQ,kBACF1G,MAETpZ,SAAUwhB,EACN,SAEJ1X,SAA+B,SAArBwV,EAAOM,iBASzC,yBAAK3hB,UAAWpB,EAAQ4hB,YACpB,kBAACvZ,GAAA,EAAD,CACIiF,SAAUjC,EACV5D,KAAM,SACN3F,QAAS,YACTtE,MAAO,WAJX,wBAYI,IAAfykB,GACG,0BACI7gB,UAAWpB,EAAQuhB,YACnB/U,SAAU,SAAAC,GACNA,EAAEC,iBACFwV,EAAc,KAGlB,yBAAK9gB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,meAIc,IACV,kBAACkN,GAAA,EAAD,CACIxR,MAAO,YACPyR,KAAM,oBACNtN,QAAS,kBAAM2gB,EAAY,UAH/B,oDAMQ,IAXZ,UAcA,yBAAKlhB,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRzE,MAAOia,EAAOC,YACdvf,SAAUgJ,EAAa,qBAO3C,yBAAK/K,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,mXAGc,IACV,kBAACkN,GAAA,EAAD,CACIxR,MAAO,YACPyR,KAAM,oBACNtN,QAAS,kBAAM2gB,EAAY,UAH/B,0DAMQ,IAVZ,UAaA,yBAAKlhB,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAACnD,UAAU,YAC5B,kBAAC8Z,GAAA,EAAD,CACIliB,aAAW,SACXgF,KAAK,UACL8B,MAAOia,EAAOE,WACdxf,SAAUgJ,EAAa,cACvBgM,KAAG,GAEH,kBAACtJ,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,mCAEV,kBAACgF,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,0BAMtB,kBAACia,GAAA,EAAD,CAAUC,GAA0B,SAAtBtB,EAAOE,YACjB,yBAAKvhB,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIC,SAC0B,SAAtBwV,EAAOE,WAEXna,MAAOia,EAAOG,aACdzf,SAAUgJ,EACN,uBAS5B,yBAAK/K,UAAWpB,EAAQ4hB,YACpB,kBAACvZ,GAAA,EAAD,CACI7K,MAAO,UACP4D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAMugB,EAAc,KAHjC,sBAOA,kBAAC7Z,GAAA,EAAD,CACIiF,SAAUjC,EACV5D,KAAM,SACN3F,QAAS,YACTtE,MAAO,WAJX,wBAYI,IAAfykB,GACG,0BACI7gB,UAAWpB,EAAQuhB,YACnB/U,SAAU,SAAAC,GACNA,EAAEC,iBACFwV,EAAc,KAGlB,yBAAK9gB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,iFAEI,6BAFJ,kOAMA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAACnD,UAAU,YAC5B,kBAAC8Z,GAAA,EAAD,CACI3W,UAAQ,EACRzE,MAAOia,EAAOI,mBACd1f,SAAU,SAAAsJ,GACmB,SAArBgW,EAAOM,WAAyC,SAAjBtW,EAAEL,OAAO5D,MAI5C2D,EACA,qBADAA,CAEEM,GALE7G,EAAe,MAAO,QAAQ,8FAAyB,YAO/DuS,KAAG,GAEH,kBAACtJ,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,iBAEV,kBAACgF,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,sBAQ9B,yBAAKzI,UAAWpB,EAAQ4hB,YACpB,kBAACvZ,GAAA,EAAD,CACI7K,MAAO,UACP4D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAMugB,EAAc,KAHjC,sBAMU,IACV,kBAAC7Z,GAAA,EAAD,CACIiF,SAAUjC,EACV5D,KAAM,SACN3F,QAAS,YACTtE,MAAO,WAJX,wBAYI,IAAfykB,GACG,0BACI7gB,UAAWpB,EAAQuhB,YACnB/U,SAAU,SAAAC,GACNA,EAAEC,iBACFwV,EAAc,KAGlB,yBAAK9gB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,kFAIA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAACnD,UAAU,YAC5B,kBAAC8Z,GAAA,EAAD,CACI3W,UAAQ,EACRzE,MACuB,MAAnBia,EAAOO,QACD,QACA,OAEV7f,SAAU,SAAAsJ,GACiB,SAAnBA,EAAEL,OAAO5D,MACT2a,EAAU,2BACHV,GADE,IAELO,QAAS,cAGbG,EAAU,2BACHV,GADE,IAELO,QAAS,QAIrB7K,KAAG,GAEH,kBAACtJ,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,iBAEV,kBAACgF,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,4BAQ9B,kBAACia,GAAA,EAAD,CAAUC,GAAuB,MAAnBtB,EAAOO,SACjB,yBAAK5hB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,kCAGA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAACgG,GAAD,CACIxI,MAAOia,EAAOO,QACd7f,SAAUgJ,EAAa,WACvB0E,IAAK,EACLI,IAAK,mBACLpH,MAAO,mDAO3B,yBAAKzI,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YACA,MAAnBgB,EAAOO,QAAkB,IAAM,MAGxC,yBAAK5hB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,4EAIA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAACnD,UAAU,YAC5B,kBAAC8Z,GAAA,EAAD,CACI3W,UAAQ,EACRzE,MAEuB,KADnBia,EAAOQ,kBACFC,UACC,QACA,OAEV/f,SAAU,SAAAsJ,GACiB,SAAnBA,EAAEL,OAAO5D,MACT2a,EAAU,2BACHV,GADE,IAELQ,kBAAkB,2BACXR,EAAOQ,mBADG,IAEbC,UACI,2BAIZC,EAAU,2BACHV,GADE,IAELQ,kBAAkB,2BACXR,EAAOQ,mBADG,IAEbC,UAAW,SAK3B/K,KAAG,GAEH,kBAACtJ,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,iBAEV,kBAACgF,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,4BAQ9B,kBAACia,GAAA,EAAD,CAAUC,GAA2C,KAAvCtB,EAAOQ,kBAAkBC,WACnC,yBAAK9hB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YACA,MAAnBgB,EAAOO,QAAkB,IAAM,MAGxC,yBAAK5hB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,iJAIA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACIxE,MACIia,EAAOQ,kBACFC,UAET/f,SAAUwhB,EACN,oBAS5B,yBAAKvjB,UAAWpB,EAAQ4hB,YACpB,kBAACvZ,GAAA,EAAD,CACI7K,MAAO,UACP4D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAMugB,EAAc,KAHjC,sBAMU,IACV,kBAAC7Z,GAAA,EAAD,CACIiF,SAAUjC,EACV5D,KAAM,SACN3F,QAAS,YACTtE,MAAO,WAJX,wBAYI,IAAfykB,GACG,0BAAM7gB,UAAWpB,EAAQuhB,YAAa/U,SAzpB7B,SAAAC,GACjBA,EAAEC,iBACFpB,GAAW,GAEX,IAAM0Y,EAAU,eAAQvB,GACxBuB,EAAWf,kBAAX,eAAoCe,EAAWf,mBAG/Ce,EAAWrB,WAAuC,SAA1BqB,EAAWrB,WACnCqB,EAAWnB,mBAC2B,SAAlCmB,EAAWnB,mBACfmB,EAAWjB,UAAqC,SAAzBiB,EAAWjB,UAClCiB,EAAWhB,QAAU3P,SAAS2Q,EAAWhB,SACzCgB,EAAWf,kBAAkBC,UAAYc,EAAWf,kBAAkBC,UAAUjP,MAC5E,KAGkD,IAAlD+P,EAAWf,kBAAkBC,UAAUpP,QACO,KAA9CkQ,EAAWf,kBAAkBC,UAAU,KAEvCc,EAAWf,kBAAkBC,UAAY,IAG7Cjd,KAAIoG,KAAK,gBAAiB,CACtBoW,OAAQuB,IAEP7d,MAAK,WACFP,EAAe,MAAO,QAAS,kCAAUoc,EAAMS,OAAS,eAAO,gBAAO,WACtEP,EAAc,MAEjB/a,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACFmF,GAAW,MAGnBA,GAAW,KAqnBC,yBAAKlK,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,sBACxB,yBAAKvgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,wFAGA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRzE,MAAOia,EAAOrT,KACdjM,SAAUgJ,EAAa,cAM3C,yBAAK/K,UAAWpB,EAAQ4hB,YACpB,kBAACvZ,GAAA,EAAD,CACI7K,MAAO,UACP4D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAMugB,EAAc,KAHjC,sBAMU,IACV,kBAAC7Z,GAAA,EAAD,CACIiF,SAAUjC,EACV5D,KAAM,SACN3F,QAAS,YACTtE,MAAO,WAJX,kBAYI,IAAfykB,GACG,oCACI,0BAAM7gB,UAAWpB,EAAQuhB,aACrB,kBAAC1f,EAAA,EAAD,sCAAkBmgB,EAAMS,OAAS,eAAO,eAAxC,UACA,kBAAC5gB,EAAA,EAAD,CAAYC,QAAS,QAAStE,MAAO,iBAArC,2MAIJ,yBAAK4D,UAAWpB,EAAQ4hB,YACpB,kBAACvZ,GAAA,EAAD,CACI7K,MAAO,UACP4D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAMlB,EAAQkC,KAAK,mBAHhC,sDAWZ,kBAACie,GAAD,CACIvgB,KAAmB,SAAbgiB,EACNxB,QAAM,EACN/Y,QAAS,kBAAMwa,EAAY,OAE/B,kBAAC1B,GAAD,CACIvgB,KAAmB,SAAbgiB,EACNva,QAAS,kBAAMwa,EAAY,QCn1B3C,IAAMhnB,GAAYC,aAAW,SAAAJ,GAAK,MAAK,CACnComB,YAAa,CACTxmB,QAAS,uBAEbiQ,KAAM,CACF1Q,SAAU,IACV2Q,UAAW,IAEfE,cAAc,eACThQ,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BhC,QAAS,oBAGjBymB,iBAAkB,CACd/mB,QAAS,OACTyQ,aAAc,GACdnQ,QAAS,GACTa,WAAYT,EAAMU,YAAYC,OAAO,mBAAoB,CACrDC,OAAQZ,EAAMU,YAAYE,OAAOC,MACjCC,SAAUd,EAAMU,YAAYI,SAASC,gBAEzC,iBAAkB,CACd2B,gBAAiB1C,EAAMsC,QAAQK,WAAWC,UAGlD0jB,WAAY,CACRjmB,MAAO,GACPgI,OAAQ,GACR3F,gBAAiBM,YAAQhD,EAAMsC,QAAQE,UAAU+jB,MAAO,IACxDlkB,MAAOrC,EAAMsC,QAAQE,UAAUoc,aAC/BF,UAAW,SACXgB,aAAc,QAElB8G,oBAAqB,CACjBplB,YAAa,IAEjBqlB,WAAY,CACR3W,UAAW,IAEfrI,OAAQ,CACJrG,YAAapB,EAAMC,QAAQ,IAE/B0pB,gBAAiB,CAAEC,cAAe,QAClC,UAAU,CACN,KAAO,CACHvnB,MAAO,sBACP/C,QAAS,eACTM,QAAS,UACTkpB,WAAW,0DACXpJ,aAAc,MACdhd,gBAAiB,8BAKvBgkB,GAAQ,CACV,CACI7kB,MAAO,2BACP8kB,UAAU,GAEd,CACI9kB,MAAO,2BACP8kB,UAAU,GAEd,CACI9kB,MAAO,2BACP8kB,UAAU,GAEd,CACI9kB,MAAO,2BACP8kB,UAAU,GAEd,CACI9kB,MAAO,2BACP8kB,UAAU,GAEd,CACI9kB,MAAO,iCACP8kB,UAAU,GAEd,CACI9kB,MAAO,eACP8kB,UAAU,IAIH,SAAS8D,GAAS5D,GAC7B,IAmC2Btb,EAnCrB1G,EAAU1E,KACVmF,EAAUC,eAFoB,EAIAR,mBAAS,GAJT,mBAI7B+hB,EAJ6B,KAIjBC,EAJiB,OAKNhiB,oBAAS,GALH,mBAK7BmL,EAL6B,KAKpBC,EALoB,OAMNrG,IAAM/E,SAAS,IAAIiiB,KANb,mBAM7BC,EAN6B,KAMpB6C,EANoB,OAOJ/kB,mBAAS,IAPL,mBAO7BmiB,EAP6B,KAOnBC,EAPmB,OAQRpiB,mBAAS,SARD,mBAQ7BqiB,EAR6B,KAQrBC,EARqB,OASRtiB,mBAAS8hB,EAAMS,OAAOT,EAAMS,OAAO,CAC3DzC,KAAM,MACN5Q,KAAM,GACNiV,UAAW,GACXI,UAAW,GACX3B,QAAS,GACTsB,OAAQ,GACRrB,UAAW,OACXL,YAAa,+BACbC,WAAY,OACZC,aAAc,4BACdC,mBAAoB,QACpBG,QAAS,IACTC,kBAAmB,CACfC,UAAW,MAvBiB,mBAS7BT,EAT6B,KASrBU,EATqB,OA0BLjjB,mBAAS8hB,EAAMS,OAAOT,EAAMS,OAAOvT,GAAG,GA1BjC,mBA0B7BgW,EA1B6B,KA0BpBC,EA1BoB,OA2BTjlB,mBAAS,cA3BA,mBA2B7B2lB,EA3B6B,KA2BtBC,EA3BsB,KA6B9B3Z,EAAe,SAAAzF,GAAI,OAAI,SAAAtD,GACzB+f,EAAU,2BACHV,GADE,kBAEJ/b,EAAOtD,EAAMgJ,OAAO5D,WAkBvB3H,EAAWC,eACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKvI,GAA5B,OACIqD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKvI,MACvD,CAACqD,IAoFL,OACI,6BACI,kBAACgB,EAAA,EAAD,CAAYC,QAAS,MAAOkgB,EAAMS,OAAS,eAAO,eAAlD,oDACA,kBAACW,GAAA,EAAD,CAASnB,WAAYA,GAChBJ,GAAMtf,KAAI,SAACsH,EAAOiU,GACf,IAjGMhN,EAiGAuS,EAAY,GACZC,EAAa,GASnB,OARIzZ,EAAMiY,WACNwB,EAAWxB,SACP,kBAACjgB,EAAA,EAAD,CAAYC,QAAQ,WAApB,iBArGFgP,EAwGYgN,EAvGvBsE,EAAQmB,IAAIzS,KAwGHuS,EAAUG,WAAY,GAGtB,kBAACC,GAAA,EAAD,eAAM1gB,IAAK8G,EAAM7M,OAAWqmB,GACxB,kBAACK,GAAA,EAAcJ,EAAazZ,EAAM7M,YAMlC,IAAfilB,GACG,0BACI7gB,UAAWpB,EAAQuhB,YACnB/U,SAAU,SAAAC,GACNA,EAAEC,iBACFwV,EAAc,KAIlB,yBAAK9gB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,qQAGI,0FAHJ,YAQR,yBAAKV,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,eAEI,kBAACkN,GAAA,EAAD,CACIC,KAAM,yCACN7C,OAAQ,UAFZ,sCAFJ,0CAaR,yBAAKhL,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,yGACqB,0DADrB,wCAGA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACI4D,WAAY,CACRyU,QAAQ,oBACRroB,MAAM,sFAEViQ,UAAQ,EACRzE,MAAOia,EAAOmC,WACdzhB,SAAUgJ,EAAa,oBAO3C,yBAAK/K,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,6IAEI,0DAFJ,sKAKA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAACnD,UAAU,YAC5B,kBAAC8Z,GAAA,EAAD,CACI3W,UAAQ,EACRzE,MAAOia,EAAOM,UACd5f,SAAUgJ,EAAa,aACvBgM,KAAG,GAEH,kBAACtJ,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,6BAEV,kBAACgF,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,8CAQ9B,yBAAKzI,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,yFACyB,0DADzB,yCAEQ,2DAER,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC+V,GAAD,CACIvY,MAAOia,EAAO2B,OACdjhB,SAAUgJ,EAAa,UACvBc,UAAQ,EACRpD,MAAO,gCAMvB,yBAAKzI,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,8GAGA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAACnD,UAAU,YAC5B,kBAAC8Z,GAAA,EAAD,CACI3W,UAAQ,EACRzE,MAAO+Z,EACPpf,SAAU,SAAAsJ,GACN+V,EAAU/V,EAAEL,OAAO5D,QAEvB2P,KAAG,GAEH,kBAACtJ,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,iBAEV,kBAACgF,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,4BAQ9B,kBAACia,GAAA,EAAD,CAAUC,GAAe,SAAXxB,GACV,yBAAKnhB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,eAEI,kBAACkN,GAAA,EAAD,CAAMC,KAAM,oDAAqD7C,OAAQ,UAAzE,yDAFJ,mQAQA,yBAAKhL,UAAWpB,EAAQgL,MACpB,kBAAC+V,GAAD,CACIvY,MAAOia,EAAOK,QACd3f,SAAUgJ,EAAa,WACvBc,SAAqB,SAAXsV,EACV1Y,MAAO,qCAO3B,yBAAKzI,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAaoD,aAAU,EAAE,CAClC,SAAXtC,MAGR,yBAAKnhB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,2BAEI,kBAACkN,GAAA,EAAD,CAAMC,KAAM,6CAA8C7C,OAAQ,UAAlE,4BAFJ,uOAOA,yBAAKhL,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,YAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACR2D,WAAY,CACRyU,QAAQ,OACRroB,MAAM,wCAEVwL,MAAOia,EAAOgC,UACdthB,SAAUgJ,EAAa,iBAInC,yBAAK/K,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,aAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACR2D,WAAY,CACRyU,QAAQ,OACRroB,MAAM,wCAEVwL,MAAOia,EAAO4B,UACdlhB,SAAUgJ,EAAa,mBAO3C,yBAAK/K,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAaoD,aAAU,EAAE,CAClC,SAAXtC,MAGR,yBAAKnhB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,0DAGA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRzE,MAAOia,EAAOrT,KACdjM,SAAUgJ,EAAa,cAO3C,yBAAK/K,UAAWpB,EAAQ4hB,YACpB,kBAACvZ,GAAA,EAAD,CACIiF,SAAUjC,EACV5D,KAAM,SACN3F,QAAS,YACTtE,MAAO,WAJX,wBAYI,IAAfykB,GACG,0BACI7gB,UAAWpB,EAAQuhB,YACnB/U,SAAU,SAAAC,GACNA,EAAEC,iBACFwV,EAAc,KAGlB,yBAAK9gB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,meAIc,IACV,kBAACkN,GAAA,EAAD,CACIxR,MAAO,YACPyR,KAAM,oBACNtN,QAAS,kBAAM2gB,EAAY,UAH/B,oDAMQ,IAXZ,UAcA,yBAAKlhB,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRzE,MAAOia,EAAOC,YACdvf,SAAUgJ,EAAa,qBAO3C,yBAAK/K,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,mXAGc,IACV,kBAACkN,GAAA,EAAD,CACIxR,MAAO,YACPyR,KAAM,oBACNtN,QAAS,kBAAM2gB,EAAY,UAH/B,0DAMQ,IAVZ,UAaA,yBAAKlhB,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAACnD,UAAU,YAC5B,kBAAC8Z,GAAA,EAAD,CACIliB,aAAW,SACXgF,KAAK,UACL8B,MAAOia,EAAOE,WACdxf,SAAUgJ,EAAa,cACvBgM,KAAG,GAEH,kBAACtJ,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,mCAEV,kBAACgF,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,0BAMtB,kBAACia,GAAA,EAAD,CAAUC,GAA0B,SAAtBtB,EAAOE,YACjB,yBAAKvhB,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIC,SAC0B,SAAtBwV,EAAOE,WAEXna,MAAOia,EAAOG,aACdzf,SAAUgJ,EACN,uBAS5B,yBAAK/K,UAAWpB,EAAQ4hB,YACpB,kBAACvZ,GAAA,EAAD,CACI7K,MAAO,UACP4D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAMugB,EAAc,KAHjC,sBAOA,kBAAC7Z,GAAA,EAAD,CACIiF,SAAUjC,EACV5D,KAAM,SACN3F,QAAS,YACTtE,MAAO,WAJX,wBAYI,IAAfykB,GACG,0BACI7gB,UAAWpB,EAAQuhB,YACnB/U,SAAU,SAAAC,GACNA,EAAEC,iBACFwV,EAAc,KAGlB,yBAAK9gB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,iFAEI,6BAFJ,kOAMA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAACnD,UAAU,YAC5B,kBAAC8Z,GAAA,EAAD,CACI3W,UAAQ,EACRzE,MAAOia,EAAOI,mBACd1f,SAAU,SAAAsJ,GACmB,SAArBgW,EAAOM,WAAyC,SAAjBtW,EAAEL,OAAO5D,MAI5C2D,EACA,qBADAA,CAEEM,GALE7G,EAAe,MAAO,QAAQ,qEAAe,YAOrDuS,KAAG,GAEH,kBAACtJ,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,iBAEV,kBAACgF,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,sBAQ9B,yBAAKzI,UAAWpB,EAAQ4hB,YACpB,kBAACvZ,GAAA,EAAD,CACI7K,MAAO,UACP4D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAMugB,EAAc,KAHjC,sBAMU,IACV,kBAAC7Z,GAAA,EAAD,CACIiF,SAAUjC,EACV5D,KAAM,SACN3F,QAAS,YACTtE,MAAO,WAJX,wBAYI,IAAfykB,GACG,0BACI7gB,UAAWpB,EAAQuhB,YACnB/U,SA1kBK,SAAAC,GACjBA,EAAEC,iBACFpB,GAAW,GAEX,IAAM0Y,EAAU,eAAQvB,GACxBuB,EAAWf,kBAAX,eAAoCe,EAAWf,mBAEhC,UAAXV,IACAyB,EAAWlB,QAAUL,EAAO2B,QAIhCJ,EAAWrB,WAAuC,SAA1BqB,EAAWrB,WACnCqB,EAAWnB,mBAC2B,SAAlCmB,EAAWnB,mBACfmB,EAAWjB,UAAqC,SAAzBiB,EAAWjB,UAClCiB,EAAWhB,QAAU3P,SAAS2Q,EAAWhB,SACzCgB,EAAWf,kBAAkBC,UAAYc,EAAWf,kBAAkBC,UAAUjP,MAC5E,KAGkD,IAAlD+P,EAAWf,kBAAkBC,UAAUpP,QACO,KAA9CkQ,EAAWf,kBAAkBC,UAAU,KAEvCc,EAAWf,kBAAkBC,UAAY,IAG7Cjd,KAAIoG,KAAK,gBAAiB,CACtBoW,OAAQuB,IAEP7d,MAAK,SAAAC,GACFR,EAAe,MAAO,QAAS,kCAAUoc,EAAMS,OAAS,eAAO,gBAAO,WACtEP,EAAc,GACdiD,EAAY/e,EAASC,SAExBc,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACFmF,GAAW,MAGnBA,GAAW,KAkiBC,yBAAKlK,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,kFAIA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAACnD,UAAU,YAC5B,kBAAC8Z,GAAA,EAAD,CACI3W,UAAQ,EACRzE,MACuB,MAAnBia,EAAOO,QACD,QACA,OAEV7f,SAAU,SAAAsJ,GACiB,SAAnBA,EAAEL,OAAO5D,MACT2a,EAAU,2BACHV,GADE,IAELO,QAAS,cAGbG,EAAU,2BACHV,GADE,IAELO,QAAS,QAIrB7K,KAAG,GAEH,kBAACtJ,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,iBAEV,kBAACgF,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,4BAQ9B,kBAACia,GAAA,EAAD,CAAUC,GAAuB,MAAnBtB,EAAOO,SACjB,yBAAK5hB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,kCAGA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAACgG,GAAD,CACIxI,MAAOia,EAAOO,QACd7f,SAAUgJ,EAAa,WACvB0E,IAAK,EACLI,IAAK,mBACLpH,MAAO,mDAO3B,yBAAKzI,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YACA,MAAnBgB,EAAOO,QAAkB,IAAM,MAGxC,yBAAK5hB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,4EAIA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAACnD,UAAU,YAC5B,kBAAC8Z,GAAA,EAAD,CACI3W,UAAQ,EACRzE,MAEuB,KADnBia,EAAOQ,kBACFC,UACC,QACA,OAEV/f,SAAU,SAAAsJ,GACiB,SAAnBA,EAAEL,OAAO5D,MACT2a,EAAU,2BACHV,GADE,IAELQ,kBAAkB,2BACXR,EAAOQ,mBADG,IAEbC,UACI,2BAIZC,EAAU,2BACHV,GADE,IAELQ,kBAAkB,2BACXR,EAAOQ,mBADG,IAEbC,UAAW,SAK3B/K,KAAG,GAEH,kBAACtJ,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,iBAEV,kBAACgF,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,4BAQ9B,kBAACia,GAAA,EAAD,CAAUC,GAA2C,KAAvCtB,EAAOQ,kBAAkBC,WACnC,yBAAK9hB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YACA,MAAnBgB,EAAOO,QAAkB,IAAM,MAGxC,yBAAK5hB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,iJAIA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACIxE,MACIia,EAAOQ,kBACFC,UAET/f,UAjwBbuD,EAkwBiB,YAlwBT,SAAAtD,GAC/B+f,EAAU,2BACHV,GADE,IAELQ,kBAAkB,2BACXR,EAAOQ,mBADG,kBAEZvc,EAAOtD,EAAMgJ,OAAO5D,oBAswBjB,yBAAKpH,UAAWpB,EAAQ4hB,YACpB,kBAACvZ,GAAA,EAAD,CACI7K,MAAO,UACP4D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAMugB,EAAc,KAHjC,sBAMU,IACV,kBAAC7Z,GAAA,EAAD,CACIiF,SAAUjC,EACV5D,KAAM,SACN3F,QAAS,YACTtE,MAAO,WAJX,wBAYI,IAAfykB,GACG,0BAAM7gB,UAAWpB,EAAQuhB,aACrB,yBAAKngB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,sBACxB,yBAAKvgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,ocAIA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC3C,GAAA,EAAD,CACIiF,SAAUjC,EACV7N,MAAO,YACPsE,QAAS,YACTV,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBA3uBrC2J,GAAW,QACXrF,KAAIoG,KAAK,qBAAsB,CAC3B9I,GAAI2hB,IAEH/e,MAAK,WACFP,EAAe,MAAO,QAAS,6CAAW,WAC1Csc,EAAc,MAEjB/a,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACFmF,GAAW,OAguBStL,QAAS,CAAE6J,MAAO7J,EAAQ8kB,kBAN9B,gDAaZ,yBAAK1jB,UAAWpB,EAAQ4hB,YACpB,kBAACvZ,GAAA,EAAD,CACI7K,MAAO,UACP4D,UAAWpB,EAAQ4C,OACnBjB,QAAS,WACLugB,GAAc,SAAAoD,GAAc,OAAIA,EAAiB,KACjDL,GAAW,SAAAM,GACP,IAAMC,EAAa,IAAIrD,IAAIoD,EAAYE,UAEvC,OADAD,EAAWE,IAAIzD,GACRuD,OARnB,gBAeU,MAKN,IAAfvD,GACG,0BAAM7gB,UAAWpB,EAAQuhB,aACrB,yBAAKngB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,sBACxB,yBAAKvgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,wGAEK,kBAACkN,GAAA,EAAD,CAAMC,KAAM,qDAAsD7C,OAAQ,UAA1E,sBAFL,sZAIyB,6BAAK,8BAE9B,kBAACvK,EAAA,EAAD,CAAYC,QAAS,SAArB,mbAGA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAApB,8CAGA,kBAACK,GAAA,EAAD,CACI5E,MAAOqd,EACP1iB,SAAU,SAAAsJ,GAAC,OAAEqZ,EAAUrZ,EAAEL,OAAO5D,QAChCyE,UAAQ,GAER,kBAACI,GAAA,EAAD,CAAU7E,MAAO,cAAjB,0CACA,kBAAC6E,GAAA,EAAD,CAAU7E,MAAO,cAAjB,0CACA,kBAAC6E,GAAA,EAAD,CAAU7E,MAAO,gBAAjB,0CACA,kBAAC6E,GAAA,EAAD,CAAU7E,MAAO,qBAAjB,8CACA,kBAAC6E,GAAA,EAAD,CAAU7E,MAAO,eAAjB,4DACA,kBAAC6E,GAAA,EAAD,CAAU7E,MAAO,aAAjB,0CACA,kBAAC6E,GAAA,EAAD,CAAU7E,MAAO,eAAjB,0CACA,kBAAC6E,GAAA,EAAD,CAAU7E,MAAO,gBAAjB,gDACA,kBAAC6E,GAAA,EAAD,CAAU7E,MAAO,oBAAjB,0CACA,kBAAC6E,GAAA,EAAD,CAAU7E,MAAO,cAAjB,mDAKZ,yBAAKpH,UAAWpB,EAAQgL,MACpB,kBAAC3C,GAAA,EAAD,CACIiF,SAAUjC,EACV7N,MAAO,YACPsE,QAAS,YACTV,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAlyBrC2J,GAAW,QACXrF,KAAIoG,KAAK,oBAAqB,CAC1B9I,GAAI2hB,EACJW,OAAOA,IAEN1f,MAAK,WACFP,EAAe,MAAO,QAAS,mDAAY,WAC3Csc,EAAc,MAEjB/a,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACFmF,GAAW,OAsxBStL,QAAS,CAAE6J,MAAO7J,EAAQ8kB,kBAN9B,gDAaZ,yBAAK1jB,UAAWpB,EAAQ4hB,YACpB,kBAACvZ,GAAA,EAAD,CACI7K,MAAO,UACP4D,UAAWpB,EAAQ4C,OACnBjB,QAAS,WACLugB,GAAc,SAAAoD,GAAc,OAAIA,EAAiB,KACjDL,GAAW,SAAAM,GACP,IAAMC,EAAa,IAAIrD,IAAIoD,EAAYE,UAEvC,OADAD,EAAWE,IAAIzD,GACRuD,OARnB,gBAeU,MAKN,IAAfvD,GACG,oCACI,0BAAM7gB,UAAWpB,EAAQuhB,aACrB,kBAAC1f,EAAA,EAAD,sCAAkBmgB,EAAMS,OAAS,eAAO,eAAxC,UACA,kBAAC5gB,EAAA,EAAD,CAAYC,QAAS,QAAStE,MAAO,iBAArC,2MAIJ,yBAAK4D,UAAWpB,EAAQ4hB,YACpB,kBAACvZ,GAAA,EAAD,CACI7K,MAAO,UACP4D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAMlB,EAAQkC,KAAK,mBAHhC,sDAWZ,kBAACie,GAAD,CACIvgB,KAAmB,SAAbgiB,EACNxB,QAAM,EACN/Y,QAAS,kBAAMwa,EAAY,OAE/B,kBAAC1B,GAAD,CACIvgB,KAAmB,SAAbgiB,EACNva,QAAS,kBAAMwa,EAAY,QC5iC3C,IAAMhnB,GAAYC,aAAW,SAAAJ,GAAK,MAAK,CACnComB,YAAa,CACTxmB,QAAS,uBAEbiQ,KAAM,CACF1Q,SAAU,IACV2Q,UAAW,IAEfE,cAAc,eACThQ,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BhC,QAAS,oBAGjBymB,iBAAkB,CACd/mB,QAAS,OACTyQ,aAAc,GACdnQ,QAAS,GACTa,WAAYT,EAAMU,YAAYC,OAAO,mBAAoB,CACrDC,OAAQZ,EAAMU,YAAYE,OAAOC,MACjCC,SAAUd,EAAMU,YAAYI,SAASC,gBAEzC,iBAAkB,CACd2B,gBAAiB1C,EAAMsC,QAAQK,WAAWC,UAGlD0jB,WAAY,CACRjmB,MAAO,GACPgI,OAAQ,GACR3F,gBAAiBM,YAAQhD,EAAMsC,QAAQE,UAAU+jB,MAAO,IACxDlkB,MAAOrC,EAAMsC,QAAQE,UAAUoc,aAC/BF,UAAW,SACXgB,aAAc,QAElB8G,oBAAqB,CACjBplB,YAAa,IAEjBqlB,WAAY,CACR3W,UAAW,IAEfrI,OAAQ,CACJrG,YAAapB,EAAMC,QAAQ,IAE/B0pB,gBAAiB,CAAEC,cAAe,QAClC,UAAU,CACN,KAAO,CACHvnB,MAAO,sBACP/C,QAAS,eACTM,QAAS,UACTkpB,WAAW,0DACXpJ,aAAc,MACdhd,gBAAiB,8BAKvBgkB,GAAQ,CACV,CACI7kB,MAAO,2BACP8kB,UAAU,GAEd,CACI9kB,MAAO,2BACP8kB,UAAU,GAEd,CACI9kB,MAAO,2BACP8kB,UAAU,GAEd,CACI9kB,MAAO,2BACP8kB,UAAU,GAEd,CACI9kB,MAAO,eACP8kB,UAAU,IAIH,SAASiE,GAAc/D,GAClC,IAAMhiB,EAAU1E,KACVmF,EAAUC,eAFyB,EAILR,mBAAS,GAJJ,mBAIlC+hB,EAJkC,KAItBC,EAJsB,OAKXhiB,oBAAS,GALE,mBAKlCmL,EALkC,KAKzBC,EALyB,OAMtBrG,IAAM/E,SAAS,IAAIiiB,KAA/BC,EANkC,sBAOTliB,mBAAS,IAPA,mBAOlCmiB,EAPkC,KAOxBC,EAPwB,OAQbpiB,mBAAS8hB,EAAMS,OACrCT,EAAMS,OACN,CACFzC,KAAM,WACN5Q,KAAM,GACNwV,WAAW,GACXP,UAAW,GACXI,UAAW,GACX3B,QAAS,GACTsB,OAAQ,mCACRrB,UAAW,OACXL,YAAa,+BACbC,WAAY,OACZC,aAAc,4BACdC,mBAAoB,QACpBG,QAAS,IACTC,kBAAmB,CACfC,UAAW,GACX8C,YAAY,MA1BqB,mBAQlCvD,EARkC,KAQ1BU,EAR0B,OA6BVjjB,mBAAS8hB,EAAMS,OAAOT,EAAMS,OAAOvT,GAAG,GA7B5B,mBA6BlCgW,EA7BkC,KA6BzBC,EA7ByB,OA8BNjlB,oBAAS,GA9BH,mBA8BlC+lB,EA9BkC,KA8BvBC,EA9BuB,KAgCnC/Z,EAAe,SAAAzF,GAAI,OAAI,SAAAtD,GACzB+f,EAAU,2BACHV,GADE,kBAEJ/b,EAAOtD,EAAMgJ,OAAO5D,WAkBvB3H,EAAWC,eACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKvI,GAA5B,OACIqD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKvI,MACvD,CAACqD,IAGLK,qBAAU,WACN+E,KAAIoG,KAAK,iBAAkB,CACvBC,KAAM,CAAC,aAENnG,MAAK,SAAAC,GACGA,EAASC,KAAKnB,QAAQpC,WAAW,aAClCojB,GAAc,GAE2B,KAAzCzD,EAAOQ,kBAAkB+C,aACzB7C,EAAU,2BACHV,GADE,IAELQ,kBAAkB,2BACXR,EAAOQ,mBADG,IAEb+C,YAAa,IAAIG,IAAI,iCAAkC/f,EAASC,KAAKnB,SAASiK,mBAK7FhI,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,cAExD,IAEF,IA5C2BX,EAwG3B,OACI,6BACI,kBAAC6G,GAAD,CACIlN,KAAM4lB,EACNne,QAAS,kBAAIoe,GAAc,IAC3BlpB,MAAO,eACP+I,IAAK,gOAET,kBAAClE,EAAA,EAAD,CAAYC,QAAS,MAAOkgB,EAAMS,OAAS,eAAO,eAAlD,sCACA,kBAACW,GAAA,EAAD,CAASnB,WAAYA,GAChBJ,GAAMtf,KAAI,SAACsH,EAAOiU,GACf,IAzGMhN,EAyGAuS,EAAY,GACZC,EAAa,GASnB,OARIzZ,EAAMiY,WACNwB,EAAWxB,SACP,kBAACjgB,EAAA,EAAD,CAAYC,QAAQ,WAApB,iBA7GFgP,EAgHYgN,EA/GvBsE,EAAQmB,IAAIzS,KAgHHuS,EAAUG,WAAY,GAGtB,kBAACC,GAAA,EAAD,eAAM1gB,IAAK8G,EAAM7M,OAAWqmB,GACxB,kBAACK,GAAA,EAAcJ,EAAazZ,EAAM7M,YAMlC,IAAfilB,GACG,0BACI7gB,UAAWpB,EAAQuhB,YACnB/U,SAAU,SAAAC,GACNA,EAAEC,iBACFwV,EAAc,KAIlB,yBAAK9gB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,eAEI,kBAACkN,GAAA,EAAD,CACIC,KAAM,sFACN7C,OAAQ,UAFZ,8EAMC,IARL,eAQY,IACR,kBAAC4C,GAAA,EAAD,CACIC,KAAM,qFACN7C,OAAQ,UAFZ,oFATJ,yDAec,wDAfd,oCAoBR,yBAAKhL,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,4BACQ,0DADR,yCACiC,oDADjC,yBAMR,yBAAKV,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,+GAEI,kFAFJ,sBAE6B,uJAF7B,SAGI,uEAHJ,qBAIO,qCAJP,2BAI2B,8BAAO2gB,EAAOQ,kBAAkB+C,aAJ3D,6DAUR,yBAAK5kB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,2EACgB,8CADhB,iCACoC,iFADpC,8CAIA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,0FAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRzE,MAAOia,EAAOmC,WACdzhB,SAAUgJ,EAAa,oBAO3C,yBAAK/K,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,qEACe,gEADf,iCAEI,4EAFJ,qBAGO,0DAHP,qBAG2B,8CAH3B,4HAKA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,sEAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRzE,MAAOia,EAAO4B,UACdlhB,SAAUgJ,EAAa,mBAO3C,yBAAK/K,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,oEAGA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAACnD,UAAU,YAC5B,kBAAC8Z,GAAA,EAAD,CACI3W,UAAQ,EACRzE,MAAOia,EAAO2B,OACdjhB,SAAUgJ,EAAa,UACvBgM,KAAG,GAEH,kBAACtJ,GAAA,EAAD,CACIrG,MAAO,6CACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,uBAEV,kBAACgF,GAAA,EAAD,CACIrG,MAAO,yDACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,wCAQ9B,yBAAKzI,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,0DAGA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRzE,MAAOia,EAAOrT,KACdjM,SAAUgJ,EAAa,cAO3C,yBAAK/K,UAAWpB,EAAQ4hB,YACpB,kBAACvZ,GAAA,EAAD,CACIiF,SAAUjC,EACV5D,KAAM,SACN3F,QAAS,YACTtE,MAAO,WAJX,wBAYI,IAAfykB,GACG,0BACI7gB,UAAWpB,EAAQuhB,YACnB/U,SAAU,SAAAC,GACNA,EAAEC,iBACFwV,EAAc,KAGlB,yBAAK9gB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,meAIc,IACV,kBAACkN,GAAA,EAAD,CACIxR,MAAO,YACPyR,KAAM,oBACNtN,QAAS,kBAAM2gB,EAAY,UAH/B,oDAMQ,IAXZ,UAcA,yBAAKlhB,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRzE,MAAOia,EAAOC,YACdvf,SAAUgJ,EAAa,qBAO3C,yBAAK/K,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,mXAGc,IACV,kBAACkN,GAAA,EAAD,CACIxR,MAAO,YACPyR,KAAM,oBACNtN,QAAS,kBAAM2gB,EAAY,UAH/B,0DAMQ,IAVZ,UAaA,yBAAKlhB,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAACnD,UAAU,YAC5B,kBAAC8Z,GAAA,EAAD,CACIliB,aAAW,SACXgF,KAAK,UACL8B,MAAOia,EAAOE,WACdxf,SAAUgJ,EAAa,cACvBgM,KAAG,GAEH,kBAACtJ,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,mCAEV,kBAACgF,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,0BAMtB,kBAACia,GAAA,EAAD,CAAUC,GAA0B,SAAtBtB,EAAOE,YACjB,yBAAKvhB,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIC,SAC0B,SAAtBwV,EAAOE,WAEXna,MAAOia,EAAOG,aACdzf,SAAUgJ,EACN,uBAS5B,yBAAK/K,UAAWpB,EAAQ4hB,YACpB,kBAACvZ,GAAA,EAAD,CACI7K,MAAO,UACP4D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAMugB,EAAc,KAHjC,sBAOA,kBAAC7Z,GAAA,EAAD,CACIiF,SAAUjC,EACV5D,KAAM,SACN3F,QAAS,YACTtE,MAAO,WAJX,wBAYI,IAAfykB,GACG,0BACI7gB,UAAWpB,EAAQuhB,YACnB/U,SArYK,SAAAC,GACjBA,EAAEC,iBACFpB,GAAW,GAEX,IAAM0Y,EAAU,eAAQvB,GACxBuB,EAAWf,kBAAX,eAAoCe,EAAWf,mBAGrB,qCAAtBe,EAAWI,OACXJ,EAAWlB,QAAU,uDAErBkB,EAAWlB,QAAU,+CAIzBkB,EAAWrB,WAAuC,SAA1BqB,EAAWrB,WACnCqB,EAAWnB,mBAC2B,SAAlCmB,EAAWnB,mBACfmB,EAAWjB,UAAqC,SAAzBiB,EAAWjB,UAClCiB,EAAWhB,QAAU3P,SAAS2Q,EAAWhB,SACzCgB,EAAWf,kBAAkBC,UAAYc,EAAWf,kBAAkBC,UAAUjP,MAC5E,KAGkD,IAAlD+P,EAAWf,kBAAkBC,UAAUpP,QACO,KAA9CkQ,EAAWf,kBAAkBC,UAAU,KAEvCc,EAAWf,kBAAkBC,UAAY,IAG7Cjd,KAAIoG,KAAK,gBAAiB,CACtBoW,OAAQuB,IAEP7d,MAAK,SAAAC,GACFR,EAAe,MAAO,QAAS,kCAAUoc,EAAMS,OAAS,eAAO,gBAAO,WACtEP,EAAc,GACdiD,EAAY/e,EAASC,SAExBc,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACFmF,GAAW,MAGnBA,GAAW,KA0VC,yBAAKlK,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,kFAIA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAACnD,UAAU,YAC5B,kBAAC8Z,GAAA,EAAD,CACI3W,UAAQ,EACRzE,MACuB,MAAnBia,EAAOO,QACD,QACA,OAEV7f,SAAU,SAAAsJ,GACiB,SAAnBA,EAAEL,OAAO5D,MACT2a,EAAU,2BACHV,GADE,IAELO,QAAS,cAGbG,EAAU,2BACHV,GADE,IAELO,QAAS,QAIrB7K,KAAG,GAEH,kBAACtJ,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,iBAEV,kBAACgF,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,4BAQ9B,kBAACia,GAAA,EAAD,CAAUC,GAAuB,MAAnBtB,EAAOO,SACjB,yBAAK5hB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YAAxB,MAEJ,yBAAKrgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,kCAGA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAACgG,GAAD,CACIxI,MAAOia,EAAOO,QACd7f,SAAUgJ,EAAa,WACvB0E,IAAK,EACLI,IAAK,mBACLpH,MAAO,mDAO3B,yBAAKzI,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YACA,MAAnBgB,EAAOO,QAAkB,IAAM,MAGxC,yBAAK5hB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,4EAIA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAACnD,UAAU,YAC5B,kBAAC8Z,GAAA,EAAD,CACI3W,UAAQ,EACRzE,MAEuB,KADnBia,EAAOQ,kBACFC,UACC,QACA,OAEV/f,SAAU,SAAAsJ,GACiB,SAAnBA,EAAEL,OAAO5D,MACT2a,EAAU,2BACHV,GADE,IAELQ,kBAAkB,2BACXR,EAAOQ,mBADG,IAEbC,UACI,2BAIZC,EAAU,2BACHV,GADE,IAELQ,kBAAkB,2BACXR,EAAOQ,mBADG,IAEbC,UAAW,SAK3B/K,KAAG,GAEH,kBAACtJ,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,iBAEV,kBAACgF,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,4BAQ9B,kBAACia,GAAA,EAAD,CAAUC,GAA2C,KAAvCtB,EAAOQ,kBAAkBC,WACnC,yBAAK9hB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,qBACpB,yBAAKvgB,UAAWpB,EAAQyhB,YACA,MAAnBgB,EAAOO,QAAkB,IAAM,MAGxC,yBAAK5hB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,iJAIA,yBAAKV,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACIxE,MACIia,EAAOQ,kBACFC,UAET/f,UA/lBbuD,EAgmBiB,YAhmBT,SAAAtD,GAC/B+f,EAAU,2BACHV,GADE,IAELQ,kBAAkB,2BACXR,EAAOQ,mBADG,kBAEZvc,EAAOtD,EAAMgJ,OAAO5D,oBAomBjB,yBAAKpH,UAAWpB,EAAQ4hB,YACpB,kBAACvZ,GAAA,EAAD,CACI7K,MAAO,UACP4D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAMugB,EAAc,KAHjC,sBAMU,IACV,kBAAC7Z,GAAA,EAAD,CACIiF,SAAUjC,EACV5D,KAAM,SACN3F,QAAS,YACTtE,MAAO,WAJX,wBAYI,IAAfykB,GACG,0BAAM7gB,UAAWpB,EAAQuhB,aACrB,yBAAKngB,UAAWpB,EAAQwhB,kBACpB,yBAAKpgB,UAAWpB,EAAQ2hB,sBACxB,yBAAKvgB,UAAWpB,EAAQ2jB,gBACpB,kBAAC9hB,EAAA,EAAD,CAAYC,QAAS,SAArB,iCACUkgB,EAAMS,OAAS,eAAO,eADhC,4hBAMA,yBAAKrhB,UAAWpB,EAAQgL,MACpB,kBAAC3C,GAAA,EAAD,CACIiF,SAAUjC,EACV7N,MAAO,YACPsE,QAAS,YACTV,UAAWpB,EAAQ4C,OACnBjB,QAlmBd,WACd2J,GAAW,GACXrF,KAAIC,IAAI,iBAAmBgf,EAAW,UACjC/e,MAAK,SAAAC,GACFa,OAAOtG,SAASsO,KAAO7I,EAASC,QAEnCc,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,SAC9CiE,GAAW,OA2lBStL,QAAS,CAAE6J,MAAO7J,EAAQ8kB,kBAN9B,2CAaZ,yBAAK1jB,UAAWpB,EAAQ4hB,cAKhB,IAAfK,GACG,oCACI,0BAAM7gB,UAAWpB,EAAQuhB,aACrB,kBAAC1f,EAAA,EAAD,yDACA,kBAACA,EAAA,EAAD,CAAYC,QAAS,QAAStE,MAAO,iBAArC,2MAIJ,yBAAK4D,UAAWpB,EAAQ4hB,YACpB,kBAACvZ,GAAA,EAAD,CACI7K,MAAO,UACP4D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAMlB,EAAQkC,KAAK,mBAHhC,sDAWZ,kBAACie,GAAD,CACIvgB,KAAmB,SAAbgiB,EACNxB,QAAM,EACN/Y,QAAS,kBAAMwa,EAAY,OAE/B,kBAAC1B,GAAD,CACIvgB,KAAmB,SAAbgiB,EACNva,QAAS,kBAAMwa,EAAY,QCtzB3C,IAAMhnB,GAAYC,aAAW,SAAAJ,GAAK,YAAK,CACnCd,MAAI,mBACCc,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BX,WAAY,MAFhB,6BAIc,IAJd,GAMJpB,QAAS,CACLD,QAASI,EAAMC,QAAQ,QAKhB,SAASgrB,KACpB,IAAMpmB,EAAU1E,KAERmM,EAAS4e,eAAT5e,KAER,OACI,6BACI,kBAACoB,GAAA,EAAD,CAAO3F,QAAM,EAAC9B,UAAWpB,EAAQhF,SACrB,UAAPyM,GAAgB,kBAACsa,GAAD,MACT,WAAPta,GAAiB,kBAAC0c,GAAD,MACV,UAAP1c,GAAgB,kBAAC,GAAD,MACT,QAAPA,GAAc,kBAACud,GAAD,MACP,UAAPvd,GAAgB,kBAACke,GAAD,MACT,QAAPle,GAAc,kBAACme,GAAD,MACP,aAAPne,GAAmB,kBAACse,GAAD,QCrBrB,SAASO,GAAQtE,GAAQ,IAAD,EAEZ9hB,oBAAS,GAAvBoL,EAF0B,sBAGPpL,mBAAS8hB,EAAMS,QAHR,mBAG5BA,EAH4B,KAGpBU,EAHoB,KAK7BhX,EAAe,SAAAzF,GAAI,OAAI,SAAAtD,GACzB+f,EAAU,2BACHV,GADE,kBAEJ/b,EAAOtD,EAAMgJ,OAAO5D,WAIvBmc,EAAqB,SAAAje,GAAI,OAAI,SAAAtD,GAC/B+f,EAAU,2BACHV,GADE,IAELQ,kBAAkB,2BACXR,EAAOQ,mBADG,kBAEZvc,EAAOtD,EAAMgJ,OAAO5D,aAK3B3H,EAAWC,eACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKvI,GAA5B,OACIqD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKvI,MACvD,CAACqD,IA+CL,OACI,6BACI,kBAACgB,EAAA,EAAD,CAAYC,QAAS,MAArB,wCACA,kBAAC8d,GAAA,EAAD,KACI,0BAAMpT,SAhDG,SAAAC,GACjBA,EAAEC,iBACFpB,GAAW,GAEX,IAAM0Y,EAAU,eAAQvB,GACxBuB,EAAWf,kBAAX,eAAoCe,EAAWf,mBAG/Ce,EAAWrB,WAAuC,SAA1BqB,EAAWrB,WACnCqB,EAAWjB,UAAqC,SAAzBiB,EAAWjB,UAClCiB,EAAWnB,mBAC2B,SAAlCmB,EAAWnB,mBACfmB,EAAWhB,QAAU3P,SAAS2Q,EAAWhB,SACzCgB,EAAWf,kBAAkBC,UAAYc,EAAWf,kBAAkBC,UAAUjP,MAC5E,KAGkD,IAAlD+P,EAAWf,kBAAkBC,UAAUpP,QACO,KAA9CkQ,EAAWf,kBAAkBC,UAAU,KAEvCc,EAAWf,kBAAkBC,UAAY,IAG7Cjd,KAAIoG,KAAK,gBAAiB,CACtBoW,OAAQuB,IAEP7d,MAAK,WACFP,EACI,MACA,QACA,kCAAWoc,EAAMS,OAAS,eAAO,gBACjC,cAGPtb,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACFmF,GAAW,MAGnBA,GAAW,KAQC,kBAACwM,GAAA,EAAD,CAAOpW,aAAW,gBACd,kBAACqW,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,2BACA,kBAACA,GAAA,EAAD,eACA,kBAACA,GAAA,EAAD,uBAGR,kBAACC,GAAA,EAAD,KACI,kBAACF,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAWnO,UAAU,KAAKsO,MAAM,OAAhC,MAGA,kBAACH,GAAA,EAAD,KAAYwK,EAAOvT,IACnB,kBAAC+I,GAAA,EAAD,8CAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAWnO,UAAU,KAAKsO,MAAM,OAAhC,gBAGA,kBAACH,GAAA,EAAD,KAAYwK,EAAOzC,MACnB,kBAAC/H,GAAA,EAAD,8CAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAWnO,UAAU,KAAKsO,MAAM,OAAhC,gBAGA,kBAACH,GAAA,EAAD,KACI,kBAACrL,GAAA,EAAD,KACI,kBAACI,GAAA,EAAD,CACIC,UAAQ,EACRzE,MAAOia,EAAOrT,KACdjM,SAAUgJ,EAAa,YAInC,kBAAC8L,GAAA,EAAD,wCAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAWnO,UAAU,KAAKsO,MAAM,OAAhC,UAGA,kBAACH,GAAA,EAAD,KACI,kBAACrL,GAAA,EAAD,KACI,kBAACI,GAAA,EAAD,CACIxE,MAAOia,EAAO2B,OACdjhB,SAAUgJ,EAAa,cAInC,kBAAC8L,GAAA,EAAD,qCAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAWnO,UAAU,KAAKsO,MAAM,OAAhC,cAGA,kBAACH,GAAA,EAAD,KACI,kBAACrL,GAAA,EAAD,KACI,kBAACI,GAAA,EAAD,CACIxE,MAAOia,EAAOmC,WACdzhB,SAAUgJ,EAAa,kBAInC,kBAAC8L,GAAA,EAAD,wCAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAWnO,UAAU,KAAKsO,MAAM,OAAhC,4BAGA,kBAACH,GAAA,EAAD,KACI,kBAACrL,GAAA,EAAD,KACI,kBAACgX,GAAA,EAAD,CACI3W,UAAQ,EACRzE,MAAOia,EAAOM,UACd5f,SAAUgJ,EAAa,aACvBgM,KAAG,GAEH,kBAACtJ,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,WAEV,kBAACgF,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,cAKtB,kBAACoO,GAAA,EAAD,oDAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAWnO,UAAU,KAAKsO,MAAM,OAAhC,qCAGA,kBAACH,GAAA,EAAD,KACI,kBAACrL,GAAA,EAAD,KACI,kBAACI,GAAA,EAAD,CACIxE,MAAOia,EAAOK,QACd3f,SAAUgJ,EAAa,eAInC,kBAAC8L,GAAA,EAAD,kGAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAWnO,UAAU,KAAKsO,MAAM,OAAhC,aAGA,kBAACH,GAAA,EAAD,KACI,kBAACrL,GAAA,EAAD,KACI,kBAACI,GAAA,EAAD,CACIG,WAAS,EACT4D,QAAS,GACTvI,MAAOia,EAAOgC,UACdthB,SAAUgJ,EAAa,iBAInC,kBAAC8L,GAAA,EAAD,uCAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAWnO,UAAU,KAAKsO,MAAM,OAAhC,aAGA,kBAACH,GAAA,EAAD,KACI,kBAACrL,GAAA,EAAD,KACI,kBAACI,GAAA,EAAD,CACIG,WAAS,EACT4D,QAAS,GACTvI,MAAOia,EAAO4B,UACdlhB,SAAUgJ,EAAa,iBAInC,kBAAC8L,GAAA,EAAD,mBAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAWnO,UAAU,KAAKsO,MAAM,OAAhC,sDAGA,kBAACH,GAAA,EAAD,KACI,kBAACrL,GAAA,EAAD,KACI,kBAACI,GAAA,EAAD,CACIvF,KAAM,SACNmJ,WAAY,CACRC,IAAI,EACJC,KAAK,GAETtI,MAAOia,EAAOO,QACd7f,SAAUgJ,EAAa,eAInC,kBAAC8L,GAAA,EAAD,6HAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAWnO,UAAU,KAAKsO,MAAM,OAAhC,kCAGA,kBAACH,GAAA,EAAD,KACI,kBAACrL,GAAA,EAAD,KACI,kBAACgX,GAAA,EAAD,CACI3W,UAAQ,EACRzE,MAAOia,EAAOE,WACdxf,SAAUgJ,EAAa,cACvBgM,KAAG,GAEH,kBAACtJ,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,WAEV,kBAACgF,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,cAKtB,kBAACoO,GAAA,EAAD,0GAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAWnO,UAAU,KAAKsO,MAAM,OAAhC,4BAGA,kBAACH,GAAA,EAAD,KACI,kBAACrL,GAAA,EAAD,KACI,kBAACI,GAAA,EAAD,CACIG,WAAS,EACT3E,MAAOia,EAAOC,YACdvf,SAAUgJ,EAAa,mBAInC,kBAAC8L,GAAA,EAAD,0DAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAWnO,UAAU,KAAKsO,MAAM,OAAhC,kCAGA,kBAACH,GAAA,EAAD,KACI,kBAACrL,GAAA,EAAD,KACI,kBAACI,GAAA,EAAD,CACIG,WAAS,EACT3E,MAAOia,EAAOG,aACdzf,SAAUgJ,EAAa,oBAInC,kBAAC8L,GAAA,EAAD,gEAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAWnO,UAAU,KAAKsO,MAAM,OAAhC,wCAGA,kBAACH,GAAA,EAAD,KACI,kBAACrL,GAAA,EAAD,KACI,kBAACgX,GAAA,EAAD,CACI3W,UAAQ,EACRzE,MAAOia,EAAOI,mBACd1f,SAAUgJ,EAAa,sBACvBgM,KAAG,GAEH,kBAACtJ,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,WAEV,kBAACgF,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAAC+U,GAAA,EAAD,CAAOrmB,MAAO,YAElBqM,MAAM,cAKtB,kBAACoO,GAAA,EAAD,sQAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAWnO,UAAU,KAAKsO,MAAM,OAAhC,8CAGA,kBAACH,GAAA,EAAD,KACI,kBAACrL,GAAA,EAAD,KACI,kBAACI,GAAA,EAAD,CACIG,WAAS,EACT3E,MAAOia,EAAOQ,kBAAkB1G,MAChCpZ,SAAUwhB,EAAmB,aAIzC,kBAAC1M,GAAA,EAAD,4EAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAWnO,UAAU,KAAKsO,MAAM,OAAhC,8CAGA,kBAACH,GAAA,EAAD,KACI,kBAACrL,GAAA,EAAD,KACI,kBAACI,GAAA,EAAD,CACIG,WAAS,EACT3E,MAAOia,EAAOQ,kBAAkBC,UAChC/f,SAAUwhB,EAAmB,iBAIzC,kBAAC1M,GAAA,EAAD,oDAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAWnO,UAAU,KAAKsO,MAAM,OAAhC,+BAGA,kBAACH,GAAA,EAAD,KACI,kBAACrL,GAAA,EAAD,KACI,kBAACI,GAAA,EAAD,CACIG,WAAS,EACT3E,MAAOia,EAAOQ,kBAAkByB,SAChCvhB,SAAUwhB,EAAmB,gBAIzC,kBAAC1M,GAAA,EAAD,sEAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAWnO,UAAU,KAAKsO,MAAM,OAAhC,2CAGA,kBAACH,GAAA,EAAD,KACI,kBAACrL,GAAA,EAAD,KACI,kBAACI,GAAA,EAAD,CACIG,WAAS,EACT3E,MAAOia,EAAOQ,kBAAkB+C,YAChC7iB,SAAUwhB,EAAmB,mBAIzC,kBAAC1M,GAAA,EAAD,kEAIZ,kBAAC5P,GAAA,EAAD,CACIZ,KAAM,SACNjK,MAAO,UACPsE,QAAS,YACTsI,MAAO,CAAC1P,OAAO,IAJnB,+BC5YpB,IAAMY,GAAYC,aAAW,SAAAJ,GAAK,YAAK,CACnCd,MAAI,mBACCc,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BX,WAAY,MAFhB,6BAIc,IAJd,GAMJpB,QAAS,CACLD,QAASI,EAAMC,QAAQ,QAKhB,SAASmrB,KACpB,IAAMvmB,EAAU1E,KADyB,EAElB4E,mBAAS,IAFS,mBAElCuH,EAFkC,KAE7B+e,EAF6B,OAGdtmB,mBAAS,IAHK,mBAGlCuiB,EAHkC,KAG3BU,EAH2B,OAKrBkD,eAAZI,EALiC,EAKjCA,KAAKljB,EAL4B,EAK5BA,GAEP1C,EAAWC,eACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKvI,GAA5B,OACIqD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKvI,MACvD,CAACqD,IAwBL,OApBAK,qBAAU,WACNslB,EAAQ,IACRvgB,KAAIC,IAAI,iBAAmB3C,GACtB4C,MAAK,SAAAC,GACFA,EAASC,KAAKwc,mBAAsBzc,EAASC,KAAKwc,mBAAqB,OAAS,QAChFzc,EAASC,KAAKsc,WAAcvc,EAASC,KAAKsc,WAAa,OAAS,QAChEvc,EAASC,KAAK2c,QAAW5c,EAASC,KAAK2c,QAAQ7T,WAC/C/I,EAASC,KAAK0c,UAAa3c,EAASC,KAAK0c,UAAY,OAAS,QAC9D3c,EAASC,KAAK4c,kBAAkBC,UAC5B9c,EAASC,KAAK4c,kBAAkBC,UAChC9c,EAASC,KAAK4c,kBAAkBC,UAAUwD,KAAK,KAC3C,GACRvD,EAAU/c,EAASC,MACnBmgB,EAAQpgB,EAASC,KAAK2Z,SAEzB7Y,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,cAExD,CAAC9D,IAGC,6BACI,kBAACsF,GAAA,EAAD,CAAO3F,QAAM,EAAC9B,UAAWpB,EAAQhF,SACnB,UAATyrB,GACG,oCACY,UAAPhf,GAAgB,kBAACsa,GAAD,CAAYU,OAAQA,IAC7B,WAAPhb,GAAiB,kBAAC0c,GAAD,CAAa1B,OAAQA,IAC/B,UAAPhb,GAAgB,kBAAC,GAAD,CAAYgb,OAAQA,IAC7B,QAAPhb,GAAc,kBAACud,GAAD,CAAUvC,OAAQA,IACzB,UAAPhb,GAAgB,kBAACke,GAAD,CAAYlD,OAAQA,IAC7B,QAAPhb,GAAc,kBAACme,GAAD,CAAUnD,OAAQA,IACzB,aAAPhb,GAAmB,kBAACse,GAAD,CAAetD,OAAQA,KAIzC,QAATgE,GAA2B,KAAThf,GACf,kBAAC6e,GAAD,CAAS7D,OAAQA,MC5DrC,IAAMnnB,GAAYC,aAAW,SAAAJ,GAAK,YAAK,CACnCd,MAAI,mBACCc,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BX,WAAY,MAFhB,6BAIc,IAJd,GAMJpB,QAAS,CACLD,QAASI,EAAMC,QAAQ,IAE3BwM,UAAW,CACP/K,UAAW,QAEf8X,eAAgB,CACZ1J,UAAW,IAEfoT,OAAQ,CACJ5jB,QAAS,OACT2C,eAAgB,iBAEpBkhB,YAAa,OAGXC,GAAU,CACZ,CAAEhb,GAAI,IAAKsG,MAAO,IAAK5F,SAAU,IACjC,CAAEV,GAAI,OAAQsG,MAAO,eAAM5F,SAAU,KACrC,CAAEV,GAAI,OAAQsG,MAAO,2BAAQ5F,SAAU,KACvC,CACIV,GAAI,QACJsG,MAAO,iCACP5F,SAAU,GACVua,MAAO,SAEX,CACIjb,GAAI,OACJsG,MAAO,2BACP5F,SAAU,IACVua,MAAO,SAEX,CACIjb,GAAI,SACJsG,MAAO,eACP5F,SAAU,IACVua,MAAO,UASA,SAASjf,KACpB,IAAMS,EAAU1E,KADY,EAEA4E,mBAAS,IAFT,mBAErBqO,EAFqB,KAEbC,EAFa,OAGEtO,mBAAS,IAHX,mBAGrBye,EAHqB,KAGZC,EAHY,OAIJ1e,mBAAS,GAJL,mBAIrB0W,EAJqB,KAIfC,EAJe,OAKI3W,mBAAS,IALb,mBAKrB4W,EALqB,KAKX+H,EALW,OAMF3e,mBAAS,GANP,mBAMrB6W,EANqB,KAMdC,EANc,OAOI/R,IAAM/E,SAAS,IAPnB,mBAOrBwd,EAPqB,KAOXgB,EAPW,KAStB/d,EAAWC,eACXH,EAAUC,eACV2e,EAfC,IAAIC,gBAAgB1e,eAAc2e,QAiBnC1e,EAAWC,eACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKvI,GAA5B,OACIqD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKvI,MACvD,CAACqD,IAGLK,qBAAU,WACmB,MAAtBme,EAAMnZ,IAAI,QACTN,EAAe,MAAO,QAAS,2BAAQ,WACjCyZ,EAAMnZ,IAAI,QAA6B,KAAnBmZ,EAAMnZ,IAAI,QACpCN,EAAe,MAAO,QAASyZ,EAAMnZ,IAAI,OAAS,KAAMmZ,EAAMnZ,IAAI,OAAQ,aAGhF,CAACvF,IAEH,IAAM8e,EAAW,WACbxZ,KAAIoG,KAAK,oBAAqB,CAC1BuK,KAAMA,EACNM,UAAWJ,EACXK,SAAU,YAEThR,MAAK,SAAAC,GACFoI,EAAUpI,EAASC,KAAK5H,OACxBmgB,EAAWxY,EAASC,KAAKsY,SACzB3H,EAAS5Q,EAASC,KAAK0Q,OACvB2H,EAAYtY,EAASC,KAAKqX,aAE7BvW,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,aAI1DnG,qBAAU,WACNue,MACD,CAAC7I,EAAME,IAaV,OACI,6BACI,yBAAK1V,UAAWpB,EAAQqe,QACpB,kBAAChW,GAAA,EAAD,CACI7K,MAAO,UACPmE,QAAS,kBAAMlB,EAAQkC,KAAK,qBAC5Bb,QAAS,aAHb,kCAOA,yBAAKV,UAAWpB,EAAQse,aACpB,kBAACjW,GAAA,EAAD,CACI7K,MAAO,UACPmE,QAAS,kBAAM8d,KACf3d,QAAS,YAHb,kBAUR,kBAAC+G,GAAA,EAAD,CAAO3F,QAAM,EAAC9B,UAAWpB,EAAQ2U,gBAC7B,kBAACiL,GAAA,EAAD,CAAgBxe,UAAWpB,EAAQ4H,WAC/B,kBAACkQ,GAAA,EAAD,CAAOpW,aAAW,eAAekI,KAAM,SACnC,kBAACmO,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAU5N,MAAO,CAAC5G,OAAO,KACpB+a,GAAQhc,KAAI,SAAAsd,GAAM,OACf,kBAAC5H,GAAA,EAAD,CACIlV,IAAK8c,EAAOtc,GACZib,MAAOqB,EAAOrB,MACdpU,MAAO,CAAEnG,SAAU4b,EAAO5b,WAEzB4b,EAAOhW,YAKxB,kBAACqO,GAAA,EAAD,KACK3J,EAAOhM,KAAI,SAAA4V,GAAG,OACX,kBAACH,GAAA,EAAD,CAAU8H,OAAK,EAAC/c,IAAKoV,EAAIjJ,IACrB,kBAAC+I,GAAA,EAAD,KAAYE,EAAIjJ,IAChB,kBAAC+I,GAAA,EAAD,KAAYE,EAAI/I,MAChB,kBAAC6I,GAAA,EAAD,KACwB,OAAnBE,EAAIwO,YAAuBxO,EAAIwO,WAAWpkB,KAAI,SAACqkB,EAAI7jB,GAChD,IAAIwE,EAAM,GAOV,OANImW,EAASkJ,KACTrf,GAAOmW,EAASkJ,GAAKxX,MAErBrM,IAAQoV,EAAIwO,WAAW7S,OAAO,IAC9BvM,GAAO,OAEJA,MAGf,kBAAC0Q,GAAA,EAAD,CAAWuG,MAAO,cACO/b,IAApBkc,EAAQxG,EAAIjJ,KACTyP,EAAQxG,EAAIjJ,IAAI+Q,kBAExB,kBAAChI,GAAA,EAAD,CAAWuG,MAAO,cACO/b,IAApBkc,EAAQxG,EAAIjJ,KACToJ,aAAaH,EAAI0O,aAEzB,kBAAC5O,GAAA,EAAD,CAAWuG,MAAO,SACd,kBAAC0B,GAAA,EAAD,CAASljB,MAAO,gBACZ,kBAACyE,EAAA,EAAD,CAAYE,QAAS,kBA3EvC4B,EA2EwD4U,EAAIjJ,QA1E9EjJ,KAAImT,OAAO,gBAAkB7V,GACxB4C,MAAK,WACFsZ,IACA7Z,EAAe,MAAO,QAAS,uCAAU,cAE5CuB,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAPrC,IAAC9D,GA2EiEqG,KAAM,SACjD,kBAACgP,GAAA,EAAD,QAGR,kBAACsH,GAAA,EAAD,CAASljB,MAAO,gBACZ,kBAACyE,EAAA,EAAD,CAAYE,QAAS,kBAAIlB,EAAQkC,KAAK,qBAAuBwV,EAAIjJ,KAAKtF,KAAM,SACxE,kBAACwW,GAAA,EAAD,gBAUhC,kBAACC,GAAA,EAAD,CACIC,mBAAoB,CAAC,GAAI,GAAI,KAC7BxW,UAAU,MACVwP,MAAOvC,EACPwJ,YAAazJ,EACbF,KAAMA,EAAO,EACb4J,aAAc,SAAC/T,EAAGgU,GAAJ,OAAU5J,EAAQ4J,EAAI,IACpCC,oBAAqB,SAAAjU,GACjBoS,EAAYpS,EAAEL,OAAO5D,OACrBqO,EAAQ,QC1MhC,IAAMvb,GAAYC,aAAW,SAAAJ,GAAK,YAAK,CACnCd,MAAI,mBACCc,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BX,WAAY,MAFhB,6BAIc,IAJd,GAMJ4O,KAAM,CACF1Q,SAAU,IACV2Q,UAAW,GACXC,aAAc,IAElBC,cAAc,eACThQ,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BhC,QAAS,wBAKrB,SAAS+rB,GAAUpgB,EAAMqgB,EAAY5rB,GACjC,MAAO,CACHoD,YACkC,IAA9BwoB,EAAWC,QAAQtgB,GACbvL,EAAM8rB,WAAWC,kBACjB/rB,EAAM8rB,WAAWE,kBAIpB,SAASC,GAAUpF,GAC9B,IAAMhiB,EAAU1E,KADqB,EAEP4E,oBAAS,GAFF,mBAE9BmL,EAF8B,KAErBC,EAFqB,OAGXpL,mBACtB8hB,EAAMpO,MACAoO,EAAMpO,MACN,CACI1E,GAAI,EACJE,KAAM,GACNyX,WAAY,aACZQ,aAAc,OACdC,cAAe,OACfC,WAAY,IACZZ,WAAY,CAAC,KACb1D,kBAAmB,CAEfuE,eAAgB,OAChBrL,cAAe,KACfsL,cAAe,IACfC,gBAAiB,OAnBE,mBAG9B9T,EAH8B,KAGvBC,EAHuB,OAuBL3T,mBAAS,IAvBJ,mBAuB9Bwd,EAvB8B,KAuBpBgB,EAvBoB,KAyB/BvjB,EAAQ8E,cACRQ,EAAUC,eAEVG,EAAWC,eACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKvI,GAA5B,OACIqD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKvI,MACvD,CAACqD,IAGLK,qBAAU,WACN+E,KAAIoG,KAAK,qBAAsB,CAC3BuK,KAAM,EACNM,UAAW,IACXC,SAAU,SACVuI,WAAY,KAEXvZ,MAAK,SAAAC,GACF,IAAMmB,EAAM,GACZnB,EAASC,KAAK5H,MAAM8H,SAAQ,SAAAC,GACxBe,EAAIf,EAAE0I,IAAM1I,EAAE4I,QAElBsP,EAAYnX,MAEfJ,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,cAEvD,IAEH,IAAM8E,EAAe,SAAAzF,GAAI,OAAI,SAAAtD,GACzByQ,EAAS,2BACFD,GADC,kBAEHlN,EAAOtD,EAAMgJ,OAAO5D,WAIvB8O,EAAoB,SAAA5Q,GAAI,OAAI,SAAAtD,GAC9B,IAAMoF,EAAQpF,EAAMgJ,OAAOuC,QAAU,OAAS,QAC9CkF,EAAS,2BACFD,GADC,kBAEHlN,EAAO8B,OAIVmf,EAA0B,SAAAjhB,GAAI,OAAI,SAAAtD,GACpC,IAAMoF,EAAQpF,EAAMgJ,OAAOuC,QAAU,OAAS,QAC9CkF,EAAS,2BACFD,GADC,IAEJqP,kBAAkB,2BACXrP,EAAMqP,mBADI,kBAEZvc,EAAO8B,SAKdmc,EAAqB,SAAAje,GAAI,OAAI,SAAAtD,GAC/ByQ,EAAS,2BACFD,GADC,IAEJqP,kBAAkB,2BACXrP,EAAMqP,mBADI,kBAEZvc,EAAOtD,EAAMgJ,OAAO5D,aA2EjC,OACI,6BACI,0BAAMgE,SAxEC,SAAAC,GACXA,EAAEC,iBACF,IAAMsH,EAAS,2BACRJ,GADQ,IAEXqP,kBAAkB,eAAMrP,EAAMqP,qBAoClC,GAhCA,CAAC,eAAgB,iBAAiB1c,SAAQ,SAAAC,GACtCwN,EAAUxN,GAAsB,SAAjBwN,EAAUxN,MAE7B,CACI,mBACA,eACA,oBACA,iBACA,aACA,SACFD,SAAQ,SAAAC,QACiC/D,IAAnCuR,EAAUiP,kBAAkBzc,KAC5BwN,EAAUiP,kBAAkBzc,GAAwC,SAAnCwN,EAAUiP,kBAAkBzc,OAKrE,CAAC,aAAc,cAAcD,SAAQ,SAAAC,GACjCwN,EAAUxN,GAAK6M,SAASW,EAAUxN,OAEtC,CACI,gBACA,mBACFD,SAAQ,SAAAC,QACiC/D,IAAnCuR,EAAUiP,kBAAkBzc,KAC5BwN,EAAUiP,kBAAkBzc,GAAK6M,SAASW,EAAUiP,kBAAkBzc,QAG9EwN,EAAU2S,WAAa3S,EAAU2S,WAAWpkB,KAAI,SAAAiE,GAC5C,OAAO6M,SAAS7M,MAGhBwN,EAAU2S,WAAW7S,OAAS,GAAsB,IAAjBE,EAAU9E,GAC7CtJ,EAAe,MAAO,QAAS,6FAAmB,eADtD,CAMA,IACIoO,EAAUiP,kBAAkB9G,cAAgB/E,KAAKC,MAAMrD,EAAUiP,kBAAkB9G,eACtF,MAAO1P,GAEJ,YADA7G,EAAe,MAAO,QAAS,mDAAiB,WAIpD0F,GAAW,GACXrF,KAAIoG,KAAK,eAAgB,CACrBuH,MAAOI,IAEN7N,MAAK,WACF1F,EAAQkC,KAAK,gBACbiD,EAAe,MAAO,QAAS,4BAASoc,EAAMpO,MAAQ,eAAO,gBAAO,cAEvEzM,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACFmF,GAAW,SAQX,yBAAKlK,UAAWpB,EAAQ3F,MACpB,kBAACwH,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GACnB,IAAb8K,EAAM1E,IAAY,iCACL,IAAb0E,EAAM1E,IAAY,gBAAQ0E,EAAMxE,MAGrC,yBAAKhO,UAAWpB,EAAQmL,eAEN,IAAbyI,EAAM1E,IAAY,oCACf,yBAAK9N,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIxE,MAAOoL,EAAMxE,KACbjM,SAAUgJ,EAAa,QACvBc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,0CAMR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,wCAGA,kBAACK,GAAA,EAAD,CACIuE,QAAQ,0BACRpO,GAAG,oBACHqkB,UAAQ,EACRpf,MAAOoL,EAAM+S,WACbxjB,SAAUgJ,EAAa,cACvBmI,MAAO,kBAACtH,GAAA,EAAD,CAAOzJ,GAAG,yBACjBskB,YAAa,SAAAC,GAAQ,OACjB,yBAAK1mB,UAAWpB,EAAQ+nB,OACnBD,EAASvlB,KAAI,SAAAiG,GAAK,OACf,kBAACmB,GAAA,EAAD,CACIS,MAAO,CAAE1P,OAAQ,GACjBqI,IAAKyF,EACLoB,KAAM,QACNC,MAAO6T,EAASlV,GAChBpH,UAAWpB,EAAQgoB,aAMlCzb,OAAOD,KAAKoR,GAAUnb,KAAI,SAAAqkB,GAAG,OAC1B,kBAACvZ,GAAA,EAAD,CACItK,IAAK6jB,EACLpe,MAAOoe,EACPxc,MAAO0c,GACHF,EACAhT,EAAM+S,WACNxrB,IAGHuiB,EAASkJ,QAItB,kBAAC1Z,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,wNAMR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACmE,GAAD,CACIxI,MAAOoL,EAAMiT,WACb1jB,SAAUgJ,EAAa,cACvB0E,IAAK,EACLI,IAAK,mBACLpH,MAAO,2BACPoD,UAAQ,KAGhB,kBAACC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,gGAOR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACmE,GAAD,CACIxI,MAAOoL,EAAM2T,WACbpkB,SAAUgJ,EAAa,cACvB0E,IAAK,EACLI,IAAK,mBACLpH,MAAO,2BACPqH,OAAQ,KACRjE,UAAQ,KAGhB,kBAACC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,uUAMU,IAAbqQ,EAAM1E,IAAY,yBAAK9N,UAAWpB,EAAQgL,MACvC,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACgC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIJ,QAC2B,SAAvBiF,EAAMyT,aAEVlkB,SAAUmU,EACN,kBAIZzN,MAAM,yCAEV,kBAACqD,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,0FAOR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACgC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIJ,QAE4B,SADxBiF,EAAMqP,kBACDuE,eAETrkB,SAAUwkB,EACN,oBAIZ9d,MAAM,yCAEV,kBAACqD,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,wHAMR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACgC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIJ,QAEwB,SADpBiF,EAAMqP,kBACDgF,WAET9kB,SAAUwkB,EACN,gBAIZ9d,MAAM,+CAEV,kBAACqD,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,wHAMM,IAAbqQ,EAAM1E,IAAY,yBAAK9N,UAAWpB,EAAQgL,MACvC,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACgC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIJ,QAC4B,SAAxBiF,EAAM0T,cAEVnkB,SAAUmU,EACN,mBAIZzN,MAAM,WAEV,kBAACqD,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,oHAMR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACgC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIJ,QAGI,SAFAiF,EAAMqP,kBACDiF,kBAGT/kB,SAAUwkB,EACN,uBAIZ9d,MAAM,qDAEV,kBAACqD,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,0LAMM,IAAbqQ,EAAM1E,IAAY,yBAAK9N,UAAWpB,EAAQgL,MACvC,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACgC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIJ,QAEmB,SADfiF,EAAMqP,kBACDkF,MAEThlB,SAAUwkB,EACN,WAIZ9d,MAAM,6BAEV,kBAACqD,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,0FAOR,kBAACugB,GAAA,EAAD,CAAUC,GAAsC,SAAlCnQ,EAAMqP,kBAAkBkF,OAClC,yBAAK/mB,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACIG,WAAS,EACT3E,MACIoL,EAAMqP,kBACD9G,cAEThZ,SAAUwhB,EACN,mBAGR,kBAACzX,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,4XAUZ,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACgC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIJ,QAE8B,SAD1BiF,EAAMqP,kBACDmF,iBAETjlB,SAAUwkB,EACN,sBAIZ9d,MAAM,6BAEV,kBAACqD,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,0FAMM,IAAbqQ,EAAM1E,IAAY,yBAAK9N,UAAWpB,EAAQgL,MACvC,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACgC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIJ,QAE0B,SADtBiF,EAAMqP,kBACDoF,aAETllB,SAAUwkB,EACN,kBAIZ9d,MAAM,iDAEV,kBAACqD,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,uFAMR,kBAACugB,GAAA,EAAD,CACIC,GAA6C,SAAzCnQ,EAAMqP,kBAAkBoF,cAE5B,yBAAKjnB,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACmE,GAAD,CACIxI,MACIoL,EAAMqP,kBACDwE,cAETtkB,SAAUwhB,EACN,iBAEJ9T,IAAK,EACLI,IAAK,mBACLpH,MAAO,4DAGf,kBAACqD,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,0KAMJ,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACmE,GAAD,CACIxI,MACIoL,EAAMqP,kBACDyE,gBAETvkB,SAAUwhB,EACN,mBAEJ9T,IAAK,EACLI,IAAK,mBACLpH,MAAO,4DAGf,kBAACqD,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,mLAQhB,yBAAKnC,UAAWpB,EAAQ3F,MACpB,kBAACgO,GAAA,EAAD,CACIiF,SAAUjC,EACV5D,KAAM,SACN3F,QAAS,YACTtE,MAAO,WAJX,mBCljBL,SAAS8qB,KAAqB,IAAD,EACfpoB,mBAAS,IADM,mBACjC0T,EADiC,KAC3BC,EAD2B,KAGjCtQ,EAAO8iB,eAAP9iB,GAED1C,EAAWC,eACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKvI,GAA5B,OACIqD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKvI,MACvD,CAACqD,IA4DL,OAxDAK,qBAAU,WACN2S,EAAS,IACT5N,KAAIC,IAAI,gBAAkB3C,GACrB4C,MAAK,SAAAC,GAmCF,GAjCA,CAAC,eAAgB,iBAAiBG,SAAQ,SAAAC,GACtCJ,EAASC,KAAKG,GAAKJ,EAASC,KAAKG,GAAG,OAAO,WAE/C,CACI,mBACA,eACA,oBACA,iBACA,aACA,SACFD,SAAQ,SAAAC,QACqC/D,IAAvC2D,EAASC,KAAK4c,kBAAkBzc,KAChCJ,EAASC,KAAK4c,kBAAkBzc,GAAKJ,EAASC,KAAK4c,kBAAkBzc,GAAG,OAAO,YAKvF,CAAC,aAAc,cAAcD,SAAQ,SAAAC,GACjCJ,EAASC,KAAKG,GAAKJ,EAASC,KAAKG,GAAG2I,cAExC,CACI,gBACA,mBACF5I,SAAQ,SAAAC,QACqC/D,IAAvC2D,EAASC,KAAK4c,kBAAkBzc,KAChCJ,EAASC,KAAK4c,kBAAkBzc,GAAKJ,EAASC,KAAK4c,kBAAkBzc,GAAG2I,eAGhF/I,EAASC,KAAKsgB,WAAavgB,EAASC,KAAKsgB,WAAWpkB,KAAI,SAAAiE,GACpD,OAAOA,EAAE2I,mBAIwC1M,IAAlD2D,EAASC,KAAK4c,kBAAkB9G,cAC/B/V,EAASC,KAAK4c,kBAAkB9G,cAAgB,UAEhD,IACI/V,EAASC,KAAK4c,kBAAkB9G,cAAgB/E,KAAKsB,UAAUtS,EAASC,KAAK4c,kBAAkB9G,eAClG,MAAO1P,GAEJ,YADA7G,EAAe,MAAO,QAAS,mDAAiB,WAKxDiO,EAASzN,EAASC,SAErBc,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,cAExD,CAAC9D,IAGC,kCACkBd,IAAbmR,EAAM1E,IACH,kBAACkY,GAAD,CAAWxT,MAAOA,K,gDChEnB,SAAS2U,GAAT,GAA2D,IAAtCvJ,EAAqC,EAArCA,UAAUwJ,EAA2B,EAA3BA,UAAUnoB,EAAiB,EAAjBA,KAAMyH,EAAW,EAAXA,QAAW,EAC5C5H,mBAAS,CAC9BuT,SAAS,MACTgV,OAAO,QAH0D,mBAC9DnU,EAD8D,KACxDC,EADwD,OAK1CrU,mBAAS,IALiC,mBAK9DqO,EAL8D,KAKvDC,EALuD,OAMtCtO,mBAAS,IAN6B,mBAM9DwoB,EAN8D,KAMrDC,EANqD,KAQ/D9nB,EAAWC,eACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKvI,GAA5B,OACIqD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKvI,MACvD,CAACqD,IAGCsL,EAAe,SAAAzF,GAAI,OAAI,SAAAtD,GACzBmR,EAAS,2BAAID,GAAL,kBAAY5N,EAAMtD,EAAMgJ,OAAO5D,WAG3CtH,qBAAU,WACN+E,KAAIC,IAAI,iBACHC,MAAK,SAAAC,GACFoI,EAAUpI,EAASC,SAEtBc,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,cAExD,IAqBF,OACI,kBAACQ,GAAA,EAAD,CACIxH,KAAMA,EACNyH,QAASA,EACTC,kBAAgB,qBAChBC,mBAAiB,2BACjB6E,WAAS,EACTvS,SAAU,MAEV,kBAAC2N,GAAA,EAAD,CAAa1E,GAAG,sBAAhB,4BAGA,kBAAC2E,GAAA,EAAD,KACI,kBAAC0E,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYvJ,GAAG,4BAAf,sBACA,kBAAC6J,GAAA,EAAD,CACIuE,QAAQ,2BACRpO,GAAG,qBACHiF,MAAO8L,EAAMb,SACbtQ,SAAUgJ,EAAa,aAEvB,kBAACkB,GAAA,EAAD,CAAU7E,MAAO,OAAjB,gBACC+F,EAAOhM,KAAI,SAAAiE,GACR,OAAa,IAATA,EAAE0I,GACK,KAGP,kBAAC7B,GAAA,EAAD,CACItK,IAAKyD,EAAE0I,GACP1G,MAAOhC,EAAE0I,GAAGC,YAEX3I,EAAE4I,WAMvB,kBAACxC,GAAA,EAAD,CAAaC,WAAS,EAACzC,MAAO,CAACa,UAAU,KACrC,kBAAC6B,GAAA,EAAD,CAAYvJ,GAAG,4BAAf,4BACA,kBAAC6J,GAAA,EAAD,CACIuE,QAAQ,2BACRpO,GAAG,qBACHiF,MAAO8L,EAAMmU,OACbtlB,SAAUgJ,EAAa,WAEvB,kBAACkB,GAAA,EAAD,CAAU7E,MAAO,OAAjB,gBACA,kBAAC6E,GAAA,EAAD,CAAU7E,MAAO,KAAjB,gBACA,kBAAC6E,GAAA,EAAD,CAAU7E,MAAO,KAAjB,sBACA,kBAAC6E,GAAA,EAAD,CAAU7E,MAAO,KAAjB,sBACA,kBAAC6E,GAAA,EAAD,CAAU7E,MAAO,KAAjB,gDAGR,kBAACoE,GAAA,EAAD,CAAaC,WAAS,EAACzC,MAAO,CAACa,UAAU,KACrC,kBAACwF,GAAA,EAAD,CAAWjI,MAAOkgB,EAAUvlB,SAAU,SAAAsJ,GAAC,OAAEkc,EAAYlc,EAAEL,OAAO5D,QAAQjF,GAAG,iBAAiBsG,MAAM,qDAGxG,kBAACzB,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQ1G,QAASmG,EAAStK,MAAM,WAAhC,gBAGA,kBAAC6K,GAAA,EAAD,CAAQ1G,QA/EL,WACX,IAAM4F,EAAM,GACZgF,OAAOD,KAAKgI,GAAO/N,SAAQ,SAAAC,GACP,QAAb8N,EAAM9N,KACLe,EAAIf,GAAK8N,EAAM9N,OAGvBwY,EAAUzX,GAENihB,EADa,KAAbE,EACU,CACNE,KAAKF,EACLG,MAAMH,GAGA,IAEd5gB,KA+DiCtK,MAAM,WAA/B,kB,eC/FVlC,GAAYC,aAAW,SAAAJ,GAAK,YAAK,CACnCd,MAAI,mBACCc,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BX,WAAY,MAFhB,6BAIc,IAJd,GAMJpB,QAAS,CACLD,QAASI,EAAMC,QAAQ,IAE3BwM,UAAW,CACP/K,UAAW,QAEf8X,eAAgB,CACZ1J,UAAW,IAEfoT,OAAQ,CACJ5jB,QAAS,OACT2C,eAAgB,iBAEpBkhB,YAAa,GACb3K,UAC2B,UAAvBxY,EAAMsC,QAAQgK,KACR,CACIjK,MAAOrC,EAAMsC,QAAQE,UAAUU,KAC/BR,gBAAiBM,YAAQhD,EAAMsC,QAAQE,UAAU+jB,MAAO,MAE5D,CACIlkB,MAAOrC,EAAMsC,QAAQC,KAAKU,QAC1BP,gBAAiB1C,EAAMsC,QAAQE,UAAU6c,MAEvDsO,eAAgB,CACZC,OAAQ,EACRC,KAAM,gBACNxlB,OAAQ,EACR9I,QAAS,EACTwpB,SAAU,SACVnpB,QAAS,EACTuG,SAAU,WACV2nB,IAAK,GACLztB,MAAO,OAIA,SAAS+D,KACpB,IAAMS,EAAU1E,KADY,EAEF4E,mBAAS,IAFP,mBAErB4G,EAFqB,KAEdoiB,EAFc,OAGJhpB,mBAAS,GAHL,mBAGrB0W,EAHqB,KAGfC,EAHe,OAII3W,mBAAS,IAJb,mBAIrB4W,EAJqB,KAIX+H,EAJW,OAKF3e,mBAAS,GALP,mBAKrB6W,EALqB,KAKdC,EALc,OAMA9W,mBAAS,IANT,mBAMrBsY,EANqB,KAMbwG,EANa,OAOA9e,mBAAS,IAPT,mBAOrBqf,EAPqB,KAObiJ,EAPa,OAQEtoB,mBAAS,CAAC,KAAM,SARlB,mBAQrBipB,EARqB,KAQZC,EARY,OASYlpB,oBAAS,GATrB,mBASrBmpB,EATqB,KASPC,EATO,OAUIppB,mBAAS,IAVb,mBAUrB4nB,EAVqB,KAUXyB,EAVW,OAWCrpB,oBAAS,GAXV,mBAWrBmL,EAXqB,KAWbC,EAXa,KAatB7K,EAAUC,eACVvF,EAAQ8E,cAERY,EAAWC,eACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKvI,GAA5B,OACIqD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKvI,MACvD,CAACqD,IAGC4e,EAAW,WACbxZ,KAAIoG,KAAK,mBAAoB,CACzBuK,KAAMA,EACNM,UAAWJ,EACXK,SAAUgS,EAAQzC,KAAK,KACvBhH,WAAYlH,EACZgR,SAAUjK,IAETpZ,MAAK,SAAAC,GACF8iB,EAAS9iB,EAASC,KAAK5H,OACvBuY,EAAS5Q,EAASC,KAAK0Q,OACvBwS,EAAY,OAEfpiB,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,aAI1DnG,qBAAU,WACNue,MACD,CAAC7I,EAAME,EAAUqS,EAAS3Q,EAAQ+G,IAErC,IA4EMkK,GAAa,SAAAlmB,GAAE,OAA8B,IAA1BukB,EAASd,QAAQzjB,IAE1C,OACI,6BACI,kBAACglB,GAAD,CACI/P,OAAQA,EACRnY,KAAMgpB,EACNvhB,QAAS,kBAAMwhB,GAAgB,IAC/Bd,UAAWA,EACXxJ,UAAWA,IAEf,yBAAK5d,UAAWpB,EAAQqe,QACpB,kBAAChW,GAAA,EAAD,CACI+B,MAAO,CAAEsf,UAAW,UACpBlsB,MAAO,UACPmE,QAAS,kBAAMlB,EAAQkC,KAAK,oBAC5Bb,QAAS,aAJb,4BAQA,yBAAKV,UAAWpB,EAAQse,aACpB,kBAAC4B,GAAA,EAAD,CAASljB,MAAM,gBAEP,kBAACyE,EAAA,EAAD,CACI2I,MAAO,CAAE7N,YAAa,GACtBoF,QAAS,kBAAM2nB,GAAgB,KAClC,kBAACK,GAAA,EAAD,CACGnsB,MAAM,YACNsE,QAAQ,MACR8nB,UACmC,IAA/Brd,OAAOD,KAAKiT,GAAQzL,QACW,IAA/BvH,OAAOD,KAAKkM,GAAQ1E,QAGxB,kBAAC+V,GAAA,EAAD,SAKZ,kBAACxhB,GAAA,EAAD,CACI7K,MAAO,UACPmE,QAAS,kBAAM8d,KACf3d,QAAS,YAHb,kBAUR,kBAAC+G,GAAA,EAAD,CAAO3F,QAAM,EAAC9B,UAAWpB,EAAQ2U,gBAC5BmT,EAAShU,OAAS,GACf,kBAACtS,EAAA,EAAD,CAASJ,UAAWpB,EAAQ2T,WACxB,kBAAC9R,EAAA,EAAD,CACIuI,MAAO,CAAEoT,KAAM,YACfhgB,MAAM,UACNsE,QAAQ,aAHZ,sBAKSgmB,EAAShU,OALlB,uBAOA,kBAACoM,GAAA,EAAD,CAASljB,MAAM,gBACX,kBAACyE,EAAA,EAAD,CAAYE,QA1HhB,WAChB2J,GAAW,GACXrF,KAAIoG,KAAK,qBAAqB,CAAC9I,GAAGukB,IAC7B3hB,MAAK,WACFsZ,IACA7Z,EAAe,MAAO,QAAS,iCAAS,cAE3CuB,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAC/ClB,MAAK,WACRmF,GAAW,OAgHuCgC,SAAUjC,EAAS3J,aAAW,UAC5D,kBAACkX,GAAA,EAAD,SAKhB,kBAACgH,GAAA,EAAD,CAAgBxe,UAAWpB,EAAQ4H,WAC/B,kBAACkQ,GAAA,EAAD,CAAOpW,aAAW,eAAekI,KAAM,SACnC,kBAACmO,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAU5N,MAAO,CAAE5G,OAAQ,KACvB,kBAACyU,GAAA,EAAD,CAAWld,QAAQ,YACf,kBAAC+uB,GAAA,EAAD,CACIC,cACIjC,EAAShU,OAAS,GAClBgU,EAAShU,OAAShN,EAAMgN,OAE5BnF,QACI7H,EAAMgN,OAAS,GACfgU,EAAShU,SAAWhN,EAAMgN,OAE9B3Q,SA7GP,SAAAC,GACzB,GAAIA,EAAMgJ,OAAOuC,QAAjB,CACI,IAAMqb,EAAeljB,EAAMvE,KAAI,SAAA0nB,GAAC,OAAIA,EAAE/a,MACtCqa,EAAYS,QAGhBT,EAAY,KAwGoB3Y,WAAY,CACR,aAAc,0BAI1B,kBAACqH,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,KAC1B,kBAACimB,GAAA,EAAD,CACIhsB,OAAuB,OAAfirB,EAAQ,GAChBhnB,UAAWgnB,EAAQ,GACnBxnB,QAAS,kBACLynB,EAAW,CACP,KACe,QAAfD,EAAQ,GACF,OACA,UARlB,IAaoB,OAAfA,EAAQ,GACL,0BACI/nB,UACIpB,EAAQ8oB,gBAGI,SAAfK,EAAQ,GACH,oBACA,oBAEV,OAGZ,kBAAClR,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,MAC1B,kBAACimB,GAAA,EAAD,CACIhsB,OAAuB,SAAfirB,EAAQ,GAChBhnB,UAAWgnB,EAAQ,GACnBxnB,QAAS,kBACLynB,EAAW,CACP,OACe,QAAfD,EAAQ,GACF,OACA,UARlB,eAaoB,SAAfA,EAAQ,GACL,0BACI/nB,UACIpB,EAAQ8oB,gBAGI,SAAfK,EAAQ,GACH,oBACA,oBAEV,OAGZ,kBAAClR,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,MAC1B,kBAACimB,GAAA,EAAD,CACIhsB,OAAuB,UAAfirB,EAAQ,GAChBhnB,UAAWgnB,EAAQ,GACnBxnB,QAAS,kBACLynB,EAAW,CACP,QACe,QAAfD,EAAQ,GACF,OACA,UARlB,QAaoB,UAAfA,EAAQ,GACL,0BACI/nB,UACIpB,EAAQ8oB,gBAGI,SAAfK,EAAQ,GACH,oBACA,oBAEV,OAGZ,kBAAClR,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,KAA9B,sBAGA,kBAACgU,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,KAA9B,gBAGA,kBAACgU,GAAA,EAAD,CACIuG,MAAO,QACPpU,MAAO,CAAEnG,SAAU,KAEnB,kBAACimB,GAAA,EAAD,CACIhsB,OAAuB,YAAfirB,EAAQ,GAChBhnB,UAAWgnB,EAAQ,GACnBxnB,QAAS,kBACLynB,EAAW,CACP,UACe,QAAfD,EAAQ,GACF,OACA,UARlB,2BAaoB,YAAfA,EAAQ,GACL,0BACI/nB,UACIpB,EAAQ8oB,gBAGI,SAAfK,EAAQ,GACH,oBACA,oBAEV,OAGZ,kBAAClR,GAAA,EAAD,CACI7N,MAAO,CAAEnG,SAAU,MADvB,kBAOR,kBAACiU,GAAA,EAAD,KACKpR,EAAMvE,KAAI,SAAA4V,GAAG,OACV,kBAACH,GAAA,EAAD,CACI8H,OAAK,EACL/c,IAAKoV,EAAIjJ,GACTib,KAAK,WACLrC,SAAU2B,GAAWtR,EAAIjJ,KAEzB,kBAAC+I,GAAA,EAAD,CAAWld,QAAQ,YACf,kBAAC+uB,GAAA,EAAD,CACInoB,QAAS,SAAAyB,GAAK,OAhPlC,SAACA,EAAOsD,GACxB,IAAM0jB,EAAgBtC,EAASd,QAAQtgB,GACnC2jB,EAAc,IAEK,IAAnBD,EACAC,EAAcA,EAAYC,OAAOxC,EAAUphB,GAClB,IAAlB0jB,EACPC,EAAcA,EAAYC,OAAOxC,EAASyC,MAAM,IACzCH,IAAkBtC,EAAShU,OAAS,EAC3CuW,EAAcA,EAAYC,OAAOxC,EAASyC,MAAM,GAAI,IAC7CH,EAAgB,IACvBC,EAAcA,EAAYC,OACtBxC,EAASyC,MAAM,EAAGH,GAClBtC,EAASyC,MAAMH,EAAgB,KAIvCb,EAAYc,GAgO4BG,CAAYpnB,EAAO+U,EAAIjJ,KAE3BP,QAAS8a,GAAWtR,EAAIjJ,OAGhC,kBAAC+I,GAAA,EAAD,KAAYE,EAAIjJ,IAChB,kBAAC+I,GAAA,EAAD,KAAYE,EAAIsS,MAChB,kBAACxS,GAAA,EAAD,KAAYE,EAAIuS,OAChB,kBAACzS,GAAA,EAAD,KACI,kBAACjJ,GAAA,EAAD,CACIC,KACI,uBACAkJ,EAAI5Y,MAAM2P,IAGbiJ,EAAI5Y,MAAM6P,OAGnB,kBAAC6I,GAAA,EAAD,KACoB,IAAfE,EAAIwS,QACD,kBAAC9oB,EAAA,EAAD,CACIuI,MAAO,CACH5M,MACIrC,EAAMsC,QAAQmtB,QACTvsB,MAEbyD,QAAS,SANb,gBAWY,IAAfqW,EAAIwS,QACD,kBAAC9oB,EAAA,EAAD,CACIrE,MAAO,gBACPsE,QAAS,SAFb,sBAOY,IAAfqW,EAAIwS,QACD,kBAAC9oB,EAAA,EAAD,CACIrE,MAAO,QACPsE,QAAS,SAFb,sBAOY,IAAfqW,EAAIwS,QACD,kBAAC9oB,EAAA,EAAD,CACIrE,MAAO,QACPsE,QAAS,SAFb,6BAQR,kBAACmW,GAAA,EAAD,CAAWuG,MAAO,SACblG,aAAaH,EAAI7Y,UAEtB,kBAAC2Y,GAAA,EAAD,KACI,kBAACiI,GAAA,EAAD,CAASljB,MAAO,gBACZ,kBAACyE,EAAA,EAAD,CACI6L,SAAUjC,EACV1J,QAAS,kBAxWhC4B,EAyWwC4U,EAAIjJ,GAxW7D5D,GAAW,QACXrF,KAAIoG,KAAK,qBAAqB,CAAC9I,GAAG,CAACA,KAC9B4C,MAAK,WACFsZ,IACA7Z,EAAe,MAAO,QAAS,iCAAS,cAE3CuB,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAC/ClB,MAAK,WACRmF,GAAW,MAVE,IAAA/H,GA2WuBqG,KAAM,SAEN,kBAACgP,GAAA,EAAD,QAGR,kBAACsH,GAAA,EAAD,CAASljB,MAAO,gBACZ,kBAACyE,EAAA,EAAD,CACIE,QAAS,kBACLlB,EAAQkC,KACJ,oBACIwV,EAAIjJ,KAGhBtF,KAAM,SAEN,kBAACwW,GAAA,EAAD,QAGR,kBAACF,GAAA,EAAD,CAASljB,MAAO,6BACZ,kBAACyE,EAAA,EAAD,CACI6L,SAAUjC,EACV1J,QAAS,kBApWvC4B,EAoWiD4U,EAAIjJ,GAnW/D5D,GAAW,QACXrF,KAAIqC,MAAM,mBAAmB/E,GACxB4C,MAAK,SAAAC,GACF8iB,EAASpiB,EAAMvE,KAAI,SAAAiE,GACf,OAAIA,EAAE0I,KAAO3L,EACI,2BAAOiD,GAAP,IAASmkB,OAAOvkB,EAASC,OAGnCG,SAGdW,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAC/ClB,MAAK,WACRmF,GAAW,MAfL,IAAA/H,GAqW8BqG,KAAM,SAEN,kBAACihB,GAAA,EAAD,gBAShC,kBAACxK,GAAA,EAAD,CACIC,mBAAoB,CAAC,GAAI,GAAI,KAC7BxW,UAAU,MACVwP,MAAOvC,EACPwJ,YAAazJ,EACbF,KAAMA,EAAO,EACb4J,aAAc,SAAC/T,EAAGgU,GAAJ,OAAU5J,EAAQ4J,EAAI,IACpCC,oBAAqB,SAAAjU,GACjBoS,EAAYpS,EAAEL,OAAO5D,OACrBqO,EAAQ,QC3fhC,IAAMvb,GAAYC,aAAW,SAAAJ,GAAK,YAAK,CACnCd,MAAI,mBACCc,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BX,WAAY,MAFhB,6BAIc,IAJd,GAMJ4O,KAAM,CACF1Q,SAAU,IACV2Q,UAAW,GACXC,aAAc,IAElBC,cAAc,eACThQ,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BhC,QAAS,wBAIN,SAAS+vB,GAAS9I,GAC7B,IAAMhiB,EAAU1E,KADoB,EAEN4E,oBAAS,GAFH,mBAE7BmL,EAF6B,KAEpBC,EAFoB,OAGZpL,mBACpB8hB,EAAMnb,KACAmb,EAAMnb,KACN,CACIqI,GAAI,EACJwb,MAAO,GACPD,KAAM,GACNM,SAAU,GACVJ,OAAQ,IACRK,QAAS,IACTC,MAAO,MAbe,mBAG7BpkB,EAH6B,KAGvBqkB,EAHuB,OAgBRhrB,mBAAS,IAhBD,mBAgB7BqO,EAhB6B,KAgBrBC,EAhBqB,KAkB9B/N,EAAUC,eAEVG,EAAWC,eACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKvI,GAA5B,OACIqD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKvI,MACvD,CAACqD,IAGLK,qBAAU,WACN+E,KAAIC,IAAI,iBACHC,MAAK,SAAAC,GACFoI,EAAUpI,EAASC,SAEtBc,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,cAEvD,IAEH,IAAM8E,EAAe,SAAAzF,GAAI,OAAI,SAAAtD,GACzB8nB,EAAQ,2BACDrkB,GADA,kBAEFH,EAAOtD,EAAMgJ,OAAO5D,WA8B7B,OACI,6BACI,0BAAMgE,SA5BC,SAAAC,GACXA,EAAEC,iBACF,IAAMye,EAAQ,eAAOtkB,GAGrB,CAAC,SAAU,UAAU,SAASN,SAAQ,SAAAC,GAClC2kB,EAAS3kB,GAAK6M,SAAS8X,EAAS3kB,OAGpC8E,GAAW,GACXrF,KAAIoG,KAAK,cAAe,CACpBxF,KAAMskB,EACNC,SAASD,EAASJ,WAEjB5kB,MAAK,WACF1F,EAAQkC,KAAK,eACbiD,EAAe,MAAO,QAAS,sBAAQoc,EAAMnb,KAAO,eAAO,gBAAO,cAErEM,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACFmF,GAAW,QAOX,yBAAKlK,UAAWpB,EAAQ3F,MACpB,kBAACwH,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GACpB,IAAZjC,EAAKqI,IAAY,2BACL,IAAZrI,EAAKqI,IAAY,gBAAQrI,EAAK4jB,MAGnC,yBAAKrpB,UAAWpB,EAAQmL,eAEpB,yBAAK/J,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,gBAGA,kBAACC,GAAA,EAAD,CACIxE,MAAO3B,EAAK6jB,MACZjjB,KAAM,QACNtE,SAAUgJ,EAAa,SACvBc,UAAQ,MAKpB,yBAAK7L,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,gBAGA,kBAACC,GAAA,EAAD,CACIxE,MAAO3B,EAAK4jB,KACZtnB,SAAUgJ,EAAa,QACvBc,UAAQ,MAKpB,yBAAK7L,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,gBAGA,kBAACC,GAAA,EAAD,CACIvF,KAAM,WACNe,MAAO3B,EAAKkkB,SACZ5nB,SAAUgJ,EAAa,YACvBc,SAAsB,IAAZpG,EAAKqI,KAEnB,kBAAChC,GAAA,EAAD,CAAgB3J,GAAG,yBACF,IAAZsD,EAAKqI,IAAY,gDAK9B,yBAAK9N,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,sBAGA,kBAACK,GAAA,EAAD,CACI5E,MAAO3B,EAAKmkB,QACZ7nB,SAAUgJ,EACN,WAEJc,UAAQ,GAEPsB,EAAOhM,KAAI,SAAAiE,GACR,OAAa,IAATA,EAAE0I,GACK,KAGP,kBAAC7B,GAAA,EAAD,CACItK,IAAKyD,EAAE0I,GACP1G,MAAOhC,EAAE0I,GAAGC,YAEX3I,EAAE4I,UAKnB,kBAAClC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,gDAMR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,gBAGA,kBAACK,GAAA,EAAD,CACI5E,MAAO3B,EAAK8jB,OACZxnB,SAAUgJ,EACN,UAEJc,UAAQ,GAER,kBAACI,GAAA,EAAD,CAAU7E,MAAO,KAAjB,gBACA,kBAAC6E,GAAA,EAAD,CAAU7E,MAAO,KAAjB,sBACA,kBAAC6E,GAAA,EAAD,CAAU7E,MAAO,KAAjB,sBACA,kBAAC6E,GAAA,EAAD,CAAU7E,MAAO,KAAjB,iDAKZ,yBAAKpH,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,gBAGA,kBAACC,GAAA,EAAD,CACIvF,KAAM,SACNmJ,WAAY,CACRC,IAAI,EACJC,KAAK,GAETtI,MAAO3B,EAAKokB,MACZ9nB,SAAUgJ,EAAa,SACvBc,UAAQ,QAO5B,yBAAK7L,UAAWpB,EAAQ3F,MACpB,kBAACgO,GAAA,EAAD,CACIiF,SAAUjC,EACV5D,KAAM,SACN3F,QAAS,YACTtE,MAAO,WAJX,mBChOL,SAAS6tB,KAAoB,IAAD,EAChBnrB,mBAAS,IADO,mBAChC2G,EADgC,KAC3BqkB,EAD2B,KAGhC3nB,EAAO8iB,eAAP9iB,GAED1C,EAAWC,eACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKvI,GAA5B,OACIqD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKvI,MACvD,CAACqD,IAmBL,OAfAK,qBAAU,WACNgqB,EAAQ,IACRjlB,KAAIC,IAAI,eAAiB3C,GACpB4C,MAAK,SAAAC,GAEF,CAAC,SAAU,UAAU,SAASG,SAAQ,SAAAC,GAClCJ,EAASC,KAAKG,GAAKJ,EAASC,KAAKG,GAAG2I,cAExC+b,EAAQ9kB,EAASC,SAEpBc,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,cAExD,CAAC9D,IAGC,kCACiBd,IAAZoE,EAAKqI,IACF,kBAAC4b,GAAD,CAAUjkB,KAAMA,K,eCvBjB,SAASykB,GAAT,GAA2D,IAAtCtM,EAAqC,EAArCA,UAAUwJ,EAA2B,EAA3BA,UAAUnoB,EAAiB,EAAjBA,KAAMyH,EAAW,EAAXA,QAAW,EAC5C5H,mBAAS,CAC9BqrB,UAAU,MACVC,QAAQ,KAHyD,mBAC9DlX,EAD8D,KACxDC,EADwD,OAKtCrU,mBAAS,IAL6B,mBAK9Dwd,EAL8D,KAKrDgB,EALqD,OAMtCxe,mBAAS,IAN6B,mBAM9DwoB,EAN8D,KAMrDC,EANqD,KAQ/D9nB,EAAWC,eACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKvI,GAA5B,OACIqD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKvI,MACvD,CAACqD,IAGCsL,EAAe,SAAAzF,GAAI,OAAI,SAAAtD,GACzBmR,EAAS,2BAAID,GAAL,kBAAY5N,EAAMtD,EAAMgJ,OAAO5D,WAG3CtH,qBAAU,WACN+E,KAAIoG,KAAK,qBAAsB,CAC3BuK,KAAM,EACNM,UAAW,IACXC,SAAU,SACVuI,WAAY,KAEXvZ,MAAK,SAAAC,GACFsY,EAAYtY,EAASC,KAAK5H,UAE7B0I,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,cAExD,IAoBF,OACI,kBAACQ,GAAA,EAAD,CACIxH,KAAMA,EACNyH,QAASA,EACTC,kBAAgB,qBAChBC,mBAAiB,2BACjB6E,WAAS,EACTvS,SAAU,MAEV,kBAAC2N,GAAA,EAAD,CAAa1E,GAAG,sBAAhB,4BAGA,kBAAC2E,GAAA,EAAD,KACI,kBAAC0E,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYvJ,GAAG,4BAAf,4BACA,kBAAC6J,GAAA,EAAD,CACIuE,QAAQ,2BACRpO,GAAG,qBACHiF,MAAO8L,EAAMiX,UACbpoB,SAAUgJ,EAAa,cAEvB,kBAACkB,GAAA,EAAD,CAAU7E,MAAO,OAAjB,gBACCkV,EAASnb,KAAI,SAAAiE,GACV,OAAa,IAATA,EAAE0I,GACK,KAGP,kBAAC7B,GAAA,EAAD,CACItK,IAAKyD,EAAE0I,GACP1G,MAAOhC,EAAE0I,GAAGC,YAEX3I,EAAE4I,WAMvB,kBAACxC,GAAA,EAAD,CAAaC,WAAS,EAACzC,MAAO,CAACa,UAAU,KACrC,kBAACwF,GAAA,EAAD,CAAWjI,MAAO8L,EAAMkX,QAASroB,SAAUgJ,EAAa,WAAY5I,GAAG,iBAAiBsG,MAAM,0BAElG,kBAAC+C,GAAA,EAAD,CAAaC,WAAS,EAACzC,MAAO,CAACa,UAAU,KACrC,kBAACwF,GAAA,EAAD,CAAWjI,MAAOkgB,EAAUvlB,SAAU,SAAAsJ,GAAC,OAAEkc,EAAYlc,EAAEL,OAAO5D,QAAQjF,GAAG,iBAAiBsG,MAAM,sCAGxG,kBAACzB,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQ1G,QAASmG,EAAStK,MAAM,WAAhC,gBAGA,kBAAC6K,GAAA,EAAD,CAAQ1G,QAlEL,WACX,IAAM4F,EAAM,GACZgF,OAAOD,KAAKgI,GAAO/N,SAAQ,SAAAC,GACP,QAAb8N,EAAM9N,IAA6B,KAAb8N,EAAM9N,KAC3Be,EAAIf,GAAK8N,EAAM9N,OAGvBwY,EAAUzX,GAENihB,EADa,KAAbE,EACU,CACNhiB,KAAKgiB,GAGC,IAEd5gB,KAmDiCtK,MAAM,WAA/B,kBCvFhB,IAAMlC,GAAYC,aAAW,SAAAJ,GAAK,YAAK,CACnCd,MAAI,mBACCc,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BX,WAAY,MAFhB,6BAIc,IAJd,GAMJpB,QAAS,CACLD,QAASI,EAAMC,QAAQ,IAE3BwM,UAAW,CACP/K,UAAW,QAEf8X,eAAgB,CACZ1J,UAAW,IAEfoT,OAAQ,CACJ5jB,QAAS,OACT2C,eAAgB,gBAChBD,WAAY,cAEhBmhB,YAAa,GACb3K,UAC2B,UAAvBxY,EAAMsC,QAAQgK,KACR,CACIjK,MAAOrC,EAAMsC,QAAQE,UAAUU,KAC/BR,gBAAiBM,YAAQhD,EAAMsC,QAAQE,UAAU+jB,MAAO,MAE5D,CACIlkB,MAAOrC,EAAMsC,QAAQC,KAAKU,QAC1BP,gBAAiB1C,EAAMsC,QAAQE,UAAU6c,MAEvDsO,eAAgB,CACZC,OAAQ,EACRC,KAAM,gBACNxlB,OAAQ,EACR9I,QAAS,EACTwpB,SAAU,SACVnpB,QAAS,EACTuG,SAAU,WACV2nB,IAAK,GACLztB,MAAO,OAIA,SAASiwB,KACpB,IAAMzrB,EAAU1E,KADW,EAED4E,mBAAS,IAFR,mBAEpB0G,EAFoB,KAEb8kB,EAFa,OAGHxrB,mBAAS,GAHN,mBAGpB0W,EAHoB,KAGdC,EAHc,OAIK3W,mBAAS,IAJd,mBAIpB4W,EAJoB,KAIV+H,EAJU,OAKD3e,mBAAS,GALR,mBAKpB6W,EALoB,KAKbC,EALa,OAMC9W,mBAAS,IANV,mBAMpBsY,EANoB,KAMZwG,EANY,OAOD9e,mBAAS,IAPR,mBAOpB4G,EAPoB,KAOboiB,EAPa,OAQChpB,mBAAS,IARV,mBAQpBqf,EARoB,KAQZiJ,EARY,OASGtoB,mBAAS,CAAC,KAAM,SATnB,mBASpBipB,EAToB,KASXC,EATW,OAUalpB,oBAAS,GAVtB,mBAUpBmpB,EAVoB,KAUNC,EAVM,OAWKppB,mBAAS,IAXd,mBAWpB4nB,EAXoB,KAWVyB,EAXU,OAYErpB,oBAAS,GAZX,mBAYpBmL,EAZoB,KAYZC,EAZY,KAcrB7K,EAAUC,eAEVG,EAAWC,eACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKvI,GAA5B,OACIqD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKvI,MACvD,CAACqD,IAGC4e,GAAW,WACbxZ,KAAIoG,KAAK,mBAAoB,CACzBuK,KAAMA,EACNM,UAAWJ,EACXK,SAAUgS,EAAQzC,KAAK,KACvBhH,WAAYlH,EACZgR,SAAUjK,IAETpZ,MAAK,SAAAC,GACFslB,EAAStlB,EAASC,KAAK5H,OACvBuY,EAAS5Q,EAASC,KAAK0Q,OACvBwS,EAAY,IACZL,EAAS9iB,EAASC,KAAKS,UAE1BK,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,aAI1DnG,qBAAU,WACNue,OACD,CAAC7I,EAAME,EAAUqS,EAAS3Q,EAAQ+G,IAErC,IAcMoM,GAAa,SAAAC,GAAK,OAAI,WACxBtgB,GAAW,GACXrF,KAAIoG,KAAK,qBAAqB,CAAC9I,GAAGukB,EAAS8D,MAAMA,IAC5CzlB,MAAK,WACFsZ,KACA7Z,EAAe,MAAO,QAAS,+DAAc,cAEhDuB,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAC/ClB,MAAK,WACRmF,GAAW,QAiCbme,GAAa,SAAAlmB,GAAE,OAA8B,IAA1BukB,EAASd,QAAQzjB,IAE1C,OACI,6BACI,kBAAC+nB,GAAD,CACI9S,OAAQA,EACRnY,KAAMgpB,EACNvhB,QAAS,kBAAMwhB,GAAgB,IAC/Bd,UAAWA,EACXxJ,UAAWA,IAEf,yBAAK5d,UAAWpB,EAAQqe,QACpB,kBAAChW,GAAA,EAAD,CACI7K,MAAO,UACPmE,QAAS,kBAAMlB,EAAQkC,KAAK,uBAC5Bb,QAAS,YACTsI,MAAO,CACHsf,UAAW,WALnB,kCAUA,yBAAKtoB,UAAWpB,EAAQse,aACpB,kBAAC4B,GAAA,EAAD,CAASljB,MAAM,gBAEP,kBAACyE,EAAA,EAAD,CACI2I,MAAO,CAAE7N,YAAa,GACtBoF,QAAS,kBAAM2nB,GAAgB,KAClC,kBAACK,GAAA,EAAD,CACGnsB,MAAM,YACNsE,QAAQ,MACR8nB,UACmC,IAA/Brd,OAAOD,KAAKiT,GAAQzL,QACW,IAA/BvH,OAAOD,KAAKkM,GAAQ1E,QAGxB,kBAAC+V,GAAA,EAAD,SAKZ,kBAACxhB,GAAA,EAAD,CACI7K,MAAO,UACPmE,QAAS,kBAAM8d,MACf3d,QAAS,YAHb,kBAUR,kBAAC+G,GAAA,EAAD,CAAO3F,QAAM,EAAC9B,UAAWpB,EAAQ2U,gBAC5BmT,EAAShU,OAAS,GACf,kBAACtS,EAAA,EAAD,CAASJ,UAAWpB,EAAQ2T,WACxB,kBAAC9R,EAAA,EAAD,CACIuI,MAAO,CAAEoT,KAAM,YACfhgB,MAAM,UACNsE,QAAQ,aAHZ,sBAKSgmB,EAAShU,OALlB,uBAOA,kBAACoM,GAAA,EAAD,CAASljB,MAAM,gBACX,kBAACyE,EAAA,EAAD,CAAYE,QAASgqB,IAAY,GAAQre,SAAUjC,EAAS3J,aAAW,UACnE,kBAACkX,GAAA,EAAD,QAGR,kBAACsH,GAAA,EAAD,CAASljB,MAAM,4BACX,kBAACyE,EAAA,EAAD,CAAYE,QAASgqB,IAAY,GAAOre,SAAUjC,EAAS3J,aAAW,UAClE,kBAACmqB,GAAA,EAAD,SAKhB,kBAACjM,GAAA,EAAD,CAAgBxe,UAAWpB,EAAQ4H,WAC/B,kBAACkQ,GAAA,EAAD,CAAOpW,aAAW,eAAekI,KAAM,SACnC,kBAACmO,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAU5N,MAAO,CAAE5G,OAAQ,KACvB,kBAACyU,GAAA,EAAD,CAAWld,QAAQ,YACf,kBAAC+uB,GAAA,EAAD,CACIC,cACIjC,EAAShU,OAAS,GAClBgU,EAAShU,OAASlN,EAAMkN,OAE5BnF,QACI/H,EAAMkN,OAAS,GACfgU,EAAShU,SAAWlN,EAAMkN,OAE9B3Q,SApHP,SAAAC,GACzB,GAAIA,EAAMgJ,OAAOuC,QAAjB,CACI,IAAMqb,EAAepjB,EAAMrE,KAAI,SAAA0nB,GAAC,OAAIA,EAAE/a,MACtCqa,EAAYS,QAGhBT,EAAY,KA+GoB3Y,WAAY,CACR,aAAc,0BAI1B,kBAACqH,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,KAC1B,kBAACimB,GAAA,EAAD,CACIhsB,OAAuB,OAAfirB,EAAQ,GAChBhnB,UAAWgnB,EAAQ,GACnBxnB,QAAS,kBACLynB,EAAW,CACP,KACe,QAAfD,EAAQ,GACF,OACA,UARlB,IAaoB,OAAfA,EAAQ,GACL,0BACI/nB,UACIpB,EAAQ8oB,gBAGI,SAAfK,EAAQ,GACH,oBACA,oBAEV,OAGZ,kBAAClR,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,MAC1B,kBAACimB,GAAA,EAAD,CACIhsB,OAAuB,SAAfirB,EAAQ,GAChBhnB,UAAWgnB,EAAQ,GACnBxnB,QAAS,kBACLynB,EAAW,CACP,OACe,QAAfD,EAAQ,GACF,OACA,UARlB,qBAYoB,SAAfA,EAAQ,GACL,0BACI/nB,UACIpB,EAAQ8oB,gBAGI,SAAfK,EAAQ,GACH,oBACA,oBAEV,OAGZ,kBAAClR,GAAA,EAAD,CAAWuG,MAAO,QAASpU,MAAO,CAAEnG,SAAU,KAC1C,kBAACimB,GAAA,EAAD,CACIhsB,OAAuB,SAAfirB,EAAQ,GAChBhnB,UAAWgnB,EAAQ,GACnBxnB,QAAS,kBACLynB,EAAW,CACP,OACe,QAAfD,EAAQ,GACF,OACA,UARlB,eAaoB,SAAfA,EAAQ,GACL,0BACI/nB,UACIpB,EAAQ8oB,gBAGI,SAAfK,EAAQ,GACH,oBACA,oBAEV,OAGZ,kBAAClR,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,MAA9B,sBAGA,kBAACgU,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,MAA9B,sBAGA,kBAACgU,GAAA,EAAD,CACI7N,MAAO,CAAEnG,SAAU,MADvB,kBAOR,kBAACiU,GAAA,EAAD,KACKtR,EAAMrE,KAAI,SAAA4V,GAAG,OACV,kBAACH,GAAA,EAAD,CACI8H,OAAK,EACL/c,IAAKoV,EAAIjJ,GACTib,KAAK,WACLrC,SAAU2B,GAAWtR,EAAIjJ,KAEzB,kBAAC+I,GAAA,EAAD,CAAWld,QAAQ,YACf,kBAAC+uB,GAAA,EAAD,CACInoB,QAAS,SAAAyB,GAAK,OAxNlC,SAACA,EAAOsD,GACxB,IAAM0jB,EAAgBtC,EAASd,QAAQtgB,GACnC2jB,EAAc,IAEK,IAAnBD,EACAC,EAAcA,EAAYC,OAAOxC,EAAUphB,GAClB,IAAlB0jB,EACPC,EAAcA,EAAYC,OAAOxC,EAASyC,MAAM,IACzCH,IAAkBtC,EAAShU,OAAS,EAC3CuW,EAAcA,EAAYC,OAAOxC,EAASyC,MAAM,GAAI,IAC7CH,EAAgB,IACvBC,EAAcA,EAAYC,OACtBxC,EAASyC,MAAM,EAAGH,GAClBtC,EAASyC,MAAMH,EAAgB,KAIvCb,EAAYc,GAwM4BG,CAAYpnB,EAAO+U,EAAIjJ,KAE3BP,QAAS8a,GAAWtR,EAAIjJ,OAGhC,kBAAC+I,GAAA,EAAD,KAAYE,EAAIjJ,IAChB,kBAAC+I,GAAA,EAAD,KACI,kBAACjJ,GAAA,EAAD,CAAM5C,OAAQ,SAAU5O,MAAM,UAAUyR,KAAM,8BAAgCkJ,EAAIjJ,IAAKiJ,EAAI/I,OAE/F,kBAAC6I,GAAA,EAAD,CAAWuG,MAAO,SACblG,aAAaH,EAAI2T,OAEtB,kBAAC7T,GAAA,EAAD,KACI,kBAACjJ,GAAA,EAAD,CACIC,KACI,sBACAkJ,EAAI4T,QAGPjlB,EAAMqR,EAAI4T,QAAQjlB,EAAMqR,EAAI4T,QAAQtB,KAAK,iBAGlD,kBAACxS,GAAA,EAAD,KACK,IAAI3E,KAAK6E,EAAI6T,WAAWC,qBAAsB,IAC/C,IAAI3Y,KAAK6E,EAAI6T,WAAWE,sBAG5B,kBAACjU,GAAA,EAAD,KACI,kBAACiI,GAAA,EAAD,CAASljB,MAAO,gBACZ,kBAACyE,EAAA,EAAD,CACI6L,SAAUjC,EACV1J,QAAS,kBA7RhC4B,EA8RwC4U,EAAIjJ,GA7R7D5D,GAAW,QACXrF,KAAIoG,KAAK,qBAAqB,CAAC9I,GAAG,CAACA,KAC9B4C,MAAK,WACFsZ,KACA7Z,EAAe,MAAO,QAAS,+DAAc,cAEhDuB,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAC/ClB,MAAK,WACRmF,GAAW,MAVE,IAAA/H,GAgSuBqG,KAAM,SAEN,kBAACgP,GAAA,EAAD,gBAShC,kBAACyH,GAAA,EAAD,CACIC,mBAAoB,CAAC,GAAI,GAAG,GAAI,KAChCxW,UAAU,MACVwP,MAAOvC,EACPwJ,YAAazJ,EACbF,KAAMA,EAAO,EACb4J,aAAc,SAAC/T,EAAGgU,GAAJ,OAAU5J,EAAQ4J,EAAI,IACpCC,oBAAqB,SAAAjU,GACjBoS,EAAYpS,EAAEL,OAAO5D,OACrBqO,EAAQ,QC/ZjB,SAASsV,GAAT,GAA4D,IAAtCnN,EAAqC,EAArCA,UAAUwJ,EAA2B,EAA3BA,UAAUnoB,EAAiB,EAAjBA,KAAMyH,EAAW,EAAXA,QAAW,EAC7C5H,mBAAS,CAC9BksB,OAAO,MACPZ,QAAQ,KAH0D,mBAC/DlX,EAD+D,KACzDC,EADyD,OAKvCrU,mBAAS,IAL8B,mBAK/DwoB,EAL+D,KAKtDC,EALsD,KAOhExc,EAAe,SAAAzF,GAAI,OAAI,SAAAtD,GACzBmR,EAAS,2BAAID,GAAL,kBAAY5N,EAAMtD,EAAMgJ,OAAO5D,WAqB3C,OACI,kBAACX,GAAA,EAAD,CACIxH,KAAMA,EACNyH,QAASA,EACTC,kBAAgB,qBAChBC,mBAAiB,2BACjB6E,WAAS,EACTvS,SAAU,MAEV,kBAAC2N,GAAA,EAAD,CAAa1E,GAAG,sBAAhB,4BAGA,kBAAC2E,GAAA,EAAD,KACI,kBAAC0E,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYvJ,GAAG,4BAAf,kCACA,kBAAC6J,GAAA,EAAD,CACIuE,QAAQ,2BACRpO,GAAG,qBACHiF,MAAO8L,EAAM8X,OACbjpB,SAAUgJ,EAAa,WAEvB,kBAACkB,GAAA,EAAD,CAAU7E,MAAO,OAAjB,gBACA,kBAAC6E,GAAA,EAAD,CAAU7E,MAAO,KAAjB,gBACA,kBAAC6E,GAAA,EAAD,CAAU7E,MAAO,KAAjB,kBAGR,kBAACoE,GAAA,EAAD,CAAaC,WAAS,EAACzC,MAAO,CAACa,UAAU,KACrC,kBAACwF,GAAA,EAAD,CAAWjI,MAAO8L,EAAMkX,QAASroB,SAAUgJ,EAAa,WAAY5I,GAAG,iBAAiBsG,MAAM,0BAElG,kBAAC+C,GAAA,EAAD,CAAaC,WAAS,EAACzC,MAAO,CAACa,UAAU,KACrC,kBAACwF,GAAA,EAAD,CAAWjI,MAAOkgB,EAAUvlB,SAAU,SAAAsJ,GAAC,OAAEkc,EAAYlc,EAAEL,OAAO5D,QAAQjF,GAAG,iBAAiBsG,MAAM,sCAGxG,kBAACzB,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQ1G,QAASmG,EAAStK,MAAM,WAAhC,gBAGA,kBAAC6K,GAAA,EAAD,CAAQ1G,QAvDL,WACX,IAAM4F,EAAM,GACZgF,OAAOD,KAAKgI,GAAO/N,SAAQ,SAAAC,GACP,QAAb8N,EAAM9N,IAA6B,KAAb8N,EAAM9N,KAC3Be,EAAIf,GAAK8N,EAAM9N,OAGvBwY,EAAUzX,GAENihB,EADa,KAAbE,EACU,CACN2D,YAAY3D,GAGN,IAEd5gB,KAwCiCtK,MAAM,WAA/B,kBCpDhB,IAAMlC,GAAYC,aAAW,SAAAJ,GAAK,YAAK,CACnCd,MAAI,mBACCc,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BX,WAAY,MAFhB,6BAIc,IAJd,GAMJpB,QAAS,CACLD,QAASI,EAAMC,QAAQ,IAE3BwM,UAAW,CACP/K,UAAW,QAEf8X,eAAgB,CACZ1J,UAAW,IAEfoT,OAAQ,CACJ5jB,QAAS,OACT2C,eAAgB,iBAEpBkhB,YAAa,GACb3K,UAC2B,UAAvBxY,EAAMsC,QAAQgK,KACR,CACIjK,MAAOrC,EAAMsC,QAAQE,UAAUU,KAC/BR,gBAAiBM,YAAQhD,EAAMsC,QAAQE,UAAU+jB,MAAO,MAE5D,CACIlkB,MAAOrC,EAAMsC,QAAQC,KAAKU,QAC1BP,gBAAiB1C,EAAMsC,QAAQE,UAAU6c,MAEvDsO,eAAgB,CACZC,OAAQ,EACRC,KAAM,gBACNxlB,OAAQ,EACR9I,QAAS,EACTwpB,SAAU,SACVnpB,QAAS,EACTuG,SAAU,WACV2nB,IAAK,GACLztB,MAAO,OAIA,SAASkE,KACpB,IAAMM,EAAU1E,KADY,EAEA4E,mBAAS,IAFT,mBAErB8G,EAFqB,KAEbslB,EAFa,OAGJpsB,mBAAS,GAHL,mBAGrB0W,EAHqB,KAGfC,EAHe,OAII3W,mBAAS,IAJb,mBAIrB4W,EAJqB,KAIX+H,EAJW,OAKF3e,mBAAS,GALP,mBAKrB6W,EALqB,KAKdC,EALc,OAMA9W,mBAAS,IANT,mBAMrBsY,EANqB,KAMbwG,EANa,OAOF9e,mBAAS,IAPP,mBAOrB4G,EAPqB,KAOdoiB,EAPc,OAQNhpB,mBAAS,IARH,mBAQrBqsB,EARqB,KAQhBC,EARgB,OASAtsB,mBAAS,IATT,mBASrBqf,EATqB,KASbiJ,EATa,OAUEtoB,mBAAS,CAAC,KAAM,SAVlB,mBAUrBipB,EAVqB,KAUZC,EAVY,OAWYlpB,oBAAS,GAXrB,mBAWrBmpB,EAXqB,KAWPC,EAXO,OAYIppB,mBAAS,IAZb,mBAYrB4nB,EAZqB,KAYXyB,EAZW,OAaErpB,oBAAS,GAbX,mBAarBmL,EAbqB,KAaZC,GAbY,KAetBzK,GAAWC,eACX8E,GAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKvI,GAA5B,OACIqD,GAASmF,aAAeH,EAAUC,EAAYC,EAAKvI,MACvD,CAACqD,KAGC4e,GAAW,WACbxZ,KAAIoG,KAAK,oBAAqB,CAC1BuK,KAAMA,EACNM,UAAWJ,EACXK,SAAUgS,EAAQzC,KAAK,KACvBhH,WAAYlH,EACZgR,SAAUjK,IAETpZ,MAAK,SAAAC,GACF8iB,EAAS9iB,EAASC,KAAKS,OACvB0lB,EAAOpmB,EAASC,KAAKkmB,KACrBD,EAAUlmB,EAASC,KAAK5H,OACxBuY,EAAS5Q,EAASC,KAAK0Q,OACvBwS,EAAY,OAEfpiB,OAAM,SAAAC,GACHxB,GAAe,MAAO,QAASwB,EAAMC,QAAS,aAI1DnG,qBAAU,WACNue,OACD,CAAC7I,EAAME,EAAUqS,EAAS3Q,EAAQ+G,IAErC,IA2DMkK,GAAa,SAAAlmB,GAAE,OAA8B,IAA1BukB,EAASd,QAAQzjB,IAE1C,OACI,6BACI,kBAAC4oB,GAAD,CACI3T,OAAQA,EACRnY,KAAMgpB,EACNvhB,QAAS,kBAAMwhB,GAAgB,IAC/Bd,UAAWA,EACXxJ,UAAWA,IAEf,yBAAK5d,UAAWpB,EAAQqe,QACpB,yBAAKjd,UAAWpB,EAAQse,aACpB,kBAAC4B,GAAA,EAAD,CAASljB,MAAM,gBACX,kBAACyE,EAAA,EAAD,CACI2I,MAAO,CAAE7N,YAAa,GACtBoF,QAAS,kBAAM2nB,GAAgB,KAE/B,kBAACK,GAAA,EAAD,CACInsB,MAAM,YACNsE,QAAQ,MACR8nB,UACmC,IAA/Brd,OAAOD,KAAKiT,GAAQzL,QACW,IAA/BvH,OAAOD,KAAKkM,GAAQ1E,QAGxB,kBAAC+V,GAAA,EAAD,SAIZ,kBAACxhB,GAAA,EAAD,CACI7K,MAAO,UACPmE,QAAS,kBAAM8d,MACf3d,QAAS,YAHb,kBAUR,kBAAC+G,GAAA,EAAD,CAAO3F,QAAM,EAAC9B,UAAWpB,EAAQ2U,gBAC5BmT,EAAShU,OAAS,GACf,kBAACtS,EAAA,EAAD,CAASJ,UAAWpB,EAAQ2T,WACxB,kBAAC9R,EAAA,EAAD,CACIuI,MAAO,CAAEoT,KAAM,YACfhgB,MAAM,UACNsE,QAAQ,aAHZ,sBAKSgmB,EAAShU,OALlB,uBAOA,kBAACoM,GAAA,EAAD,CAASljB,MAAM,gBACX,kBAACyE,EAAA,EAAD,CACIE,QAhGR,WAChB2J,IAAW,GACXrF,KAAIoG,KAAK,sBAAuB,CAAE9I,GAAIukB,IACjC3hB,MAAK,WACFsZ,KACA7Z,GAAe,MAAO,QAAS,iCAAS,cAE3CuB,OAAM,SAAAC,GACHxB,GAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACFmF,IAAW,OAsFKgC,SAAUjC,EACV3J,aAAW,UAEX,kBAACkX,GAAA,EAAD,SAKhB,kBAACgH,GAAA,EAAD,CAAgBxe,UAAWpB,EAAQ4H,WAC/B,kBAACkQ,GAAA,EAAD,CAAOpW,aAAW,eAAekI,KAAM,SACnC,kBAACmO,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAU5N,MAAO,CAAE5G,OAAQ,KACvB,kBAACyU,GAAA,EAAD,CAAWld,QAAQ,YACf,kBAAC+uB,GAAA,EAAD,CACIC,cACIjC,EAAShU,OAAS,GAClBgU,EAAShU,OAAS9M,EAAO8M,OAE7BnF,QACI3H,EAAO8M,OAAS,GAChBgU,EAAShU,SAAW9M,EAAO8M,OAE/B3Q,SAxGP,SAAAC,GACzB,GAAIA,EAAMgJ,OAAOuC,QAAjB,CACI,IAAMqb,EAAehjB,EAAOzE,KAAI,SAAA0nB,GAAC,OAAIA,EAAE/a,MACvCqa,EAAYS,QAGhBT,EAAY,KAmGoB3Y,WAAY,CACR,aAAc,0BAI1B,kBAACqH,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,KAC1B,kBAACimB,GAAA,EAAD,CACIhsB,OAAuB,OAAfirB,EAAQ,GAChBhnB,UAAWgnB,EAAQ,GACnBxnB,QAAS,kBACLynB,EAAW,CACP,KACe,QAAfD,EAAQ,GACF,OACA,UARlB,IAaoB,OAAfA,EAAQ,GACL,0BACI/nB,UACIpB,EAAQ8oB,gBAGI,SAAfK,EAAQ,GACH,oBACA,oBAEV,OAGZ,kBAAClR,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,MAC1B,kBAACimB,GAAA,EAAD,CACIhsB,OAAuB,gBAAfirB,EAAQ,GAChBhnB,UAAWgnB,EAAQ,GACnBxnB,QAAS,kBACLynB,EAAW,CACP,cACe,QAAfD,EAAQ,GACF,OACA,UARlB,qBAaoB,gBAAfA,EAAQ,GACL,0BACI/nB,UACIpB,EAAQ8oB,gBAGI,SAAfK,EAAQ,GACH,oBACA,oBAEV,OAGZ,kBAAClR,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,KAA9B,gBAGA,kBAACgU,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,KAAOua,MAAO,SACxC,kBAAC0L,GAAA,EAAD,CACIhsB,OAAuB,UAAfirB,EAAQ,GAChBhnB,UAAWgnB,EAAQ,GACnBxnB,QAAS,kBACLynB,EAAW,CACP,QACe,QAAfD,EAAQ,GACF,OACA,UARlB,eAaoB,UAAfA,EAAQ,GACL,0BACI/nB,UACIpB,EAAQ8oB,gBAGI,SAAfK,EAAQ,GACH,oBACA,oBAEV,OAGZ,kBAAClR,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,KAAOua,MAAO,SACxC,kBAAC0L,GAAA,EAAD,CACIhsB,OAAuB,cAAfirB,EAAQ,GAChBhnB,UAAWgnB,EAAQ,GACnBxnB,QAAS,kBACLynB,EAAW,CACP,YACe,QAAfD,EAAQ,GACF,OACA,UARlB,eAaoB,cAAfA,EAAQ,GACL,0BACI/nB,UACIpB,EAAQ8oB,gBAGI,SAAfK,EAAQ,GACH,oBACA,oBAEV,OAGZ,kBAAClR,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,KAAOua,MAAO,SACxC,kBAAC0L,GAAA,EAAD,CACIhsB,OAAuB,UAAfirB,EAAQ,GAChBhnB,UAAWgnB,EAAQ,GACnBxnB,QAAS,kBACLynB,EAAW,CACP,QACe,QAAfD,EAAQ,GACF,OACA,UARlB,eAaoB,UAAfA,EAAQ,GACL,0BACI/nB,UACIpB,EAAQ8oB,gBAGI,SAAfK,EAAQ,GACH,oBACA,oBAEV,OAGZ,kBAAClR,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,MAA9B,4BAGA,kBAACgU,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,MAA9B,sBAGA,kBAACgU,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,MAA9B,sBAGA,kBAACgU,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,MAA9B,kBAKR,kBAACiU,GAAA,EAAD,KACKlR,EAAOzE,KAAI,SAAA4V,GAAG,OACX,kBAACH,GAAA,EAAD,CACI8H,OAAK,EACL/c,IAAKoV,EAAIjJ,GACTib,KAAK,WACLrC,SAAU2B,GAAWtR,EAAIjJ,KAEzB,kBAAC+I,GAAA,EAAD,CAAWld,QAAQ,YACf,kBAAC+uB,GAAA,EAAD,CACInoB,QAAS,SAAAyB,GAAK,OAvQlC,SAACA,EAAOsD,GACxB,IAAM0jB,EAAgBtC,EAASd,QAAQtgB,GACnC2jB,EAAc,IAEK,IAAnBD,EACAC,EAAcA,EAAYC,OAAOxC,EAAUphB,GAClB,IAAlB0jB,EACPC,EAAcA,EAAYC,OAAOxC,EAASyC,MAAM,IACzCH,IAAkBtC,EAAShU,OAAS,EAC3CuW,EAAcA,EAAYC,OAAOxC,EAASyC,MAAM,GAAI,IAC7CH,EAAgB,IACvBC,EAAcA,EAAYC,OACtBxC,EAASyC,MAAM,EAAGH,GAClBtC,EAASyC,MAAMH,EAAgB,KAIvCb,EAAYc,GAuP4BG,CAAYpnB,EAAO+U,EAAIjJ,KAE3BP,QAAS8a,GAAWtR,EAAIjJ,OAGhC,kBAAC+I,GAAA,EAAD,KAAYE,EAAIjJ,IAChB,kBAAC+I,GAAA,EAAD,CAAW7N,MAAO,CAACqiB,UAAW,cAC1B,kBAACzd,GAAA,EAAD,CACI5C,OAAQ,SACR5O,MAAM,UACNyR,KACI,QAAQsd,EAAIpU,EAAIjJ,KAAsB,KAAjBiJ,EAAI4S,SAAkB,GAAM,aAAa5S,EAAI4S,WAGrE5S,EAAIuU,aAGb,kBAACzU,GAAA,EAAD,KACsB,KAAjBE,EAAI4S,SAAkB,eAAO,gBAElC,kBAAC9S,GAAA,EAAD,CAAWuG,MAAO,SACbrG,EAAIwU,OAET,kBAAC1U,GAAA,EAAD,CAAWuG,MAAO,SACbrG,EAAIyU,WAET,kBAAC3U,GAAA,EAAD,CAAWuG,MAAO,SACbrG,EAAI8S,OAET,kBAAChT,GAAA,EAAD,KACKE,EAAI0U,iBAAmB,GAAM1U,EAAI0U,gBAAgB,6BACxB,IAAzB1U,EAAI0U,iBAA0B,UAEnC,kBAAC5U,GAAA,EAAD,KACI,kBAACjJ,GAAA,EAAD,CACIC,KACI,sBACAkJ,EAAI4T,QAGPjlB,EAAMqR,EAAI4T,QACLjlB,EAAMqR,EAAI4T,QAAQtB,KAClB,iBAGd,kBAACxS,GAAA,EAAD,KACK,IAAI3E,KACD6E,EAAI6T,WACNC,qBACE,IACA,IAAI3Y,KACA6E,EAAI6T,WACNE,sBAEV,kBAACjU,GAAA,EAAD,KACI,kBAACiI,GAAA,EAAD,CAASljB,MAAO,gBACZ,kBAACyE,EAAA,EAAD,CACI6L,SAAUjC,EACV1J,QAAS,kBAzWhC4B,EA0WwC4U,EAAIjJ,GAzW7D5D,IAAW,QACXrF,KAAIoG,KAAK,sBAAuB,CAAE9I,GAAI,CAACA,KAClC4C,MAAK,WACFsZ,KACA7Z,GAAe,MAAO,QAAS,iCAAS,cAE3CuB,OAAM,SAAAC,GACHxB,GAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACFmF,IAAW,MAXF,IAAA/H,GA4WuBqG,KAAM,SAEN,kBAACgP,GAAA,EAAD,gBAShC,kBAACyH,GAAA,EAAD,CACIC,mBAAoB,CAAC,GAAI,GAAI,GAAI,KACjCxW,UAAU,MACVwP,MAAOvC,EACPwJ,YAAazJ,EACbF,KAAMA,EAAO,EACb4J,aAAc,SAAC/T,EAAGgU,GAAJ,OAAU5J,EAAQ4J,EAAI,IACpCC,oBAAqB,SAAAjU,GACjBoS,EAAYpS,EAAEL,OAAO5D,OACrBqO,EAAQ,QC3dhC,IAAMvb,GAAYC,aAAW,SAAAJ,GAAK,YAAK,CACnCd,MAAI,mBACCc,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BX,WAAY,MAFhB,6BAIc,IAJd,GAMJpB,QAAS,CACLD,QAASI,EAAMC,QAAQ,IAE3BwM,UAAW,CACP/K,UAAW,QAEf8X,eAAgB,CACZ1J,UAAW,IAEfoT,OAAQ,CACJ5jB,QAAS,OACT2C,eAAgB,iBAEpBkhB,YAAa,GACb3K,UAC2B,UAAvBxY,EAAMsC,QAAQgK,KACR,CACIjK,MAAOrC,EAAMsC,QAAQE,UAAUU,KAC/BR,gBAAiBM,YAAQhD,EAAMsC,QAAQE,UAAU+jB,MAAO,MAE5D,CACIlkB,MAAOrC,EAAMsC,QAAQC,KAAKU,QAC1BP,gBAAiB1C,EAAMsC,QAAQE,UAAU6c,MAEvDsO,eAAgB,CACZC,OAAQ,EACRC,KAAM,gBACNxlB,OAAQ,EACR9I,QAAS,EACTwpB,SAAU,SACVnpB,QAAS,EACTuG,SAAU,WACV2nB,IAAK,GACLztB,MAAO,OAKA,SAASsxB,KACpB,IAAM9sB,EAAU1E,KADY,EAEA4E,mBAAS,IAFT,mBAErB6sB,EAFqB,KAEbC,EAFa,OAGJ9sB,mBAAS,GAHL,mBAGrB0W,EAHqB,KAGfC,EAHe,OAII3W,mBAAS,IAJb,mBAIrB4W,EAJqB,KAIX+H,EAJW,OAKF3e,mBAAS,GALP,mBAKrB6W,EALqB,KAKdC,EALc,OAMA9W,mBAAS,IANT,mBAMrBsY,EANqB,KAMbwG,EANa,OAOF9e,mBAAS,IAPP,mBAOrB4G,EAPqB,KAOdoiB,EAPc,OAQAhpB,mBAAS,IART,mBAQrBqf,EARqB,KAQbiJ,EARa,OASEtoB,mBAAS,CAAC,KAAM,SATlB,mBASrBipB,EATqB,KASZC,EATY,OAUYlpB,oBAAS,GAVrB,mBAUrBmpB,EAVqB,KAUPC,EAVO,OAWIppB,mBAAS,IAXb,mBAWrB4nB,EAXqB,KAWXyB,EAXW,OAYErpB,oBAAS,GAZX,mBAYrBmL,EAZqB,KAYZC,EAZY,KActBzK,EAAWC,eACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKvI,GAA5B,OACIqD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKvI,MACvD,CAACqD,IAGC4e,EAAW,WACbxZ,KAAIoG,KAAK,oBAAqB,CAC1BuK,KAAMA,EACNM,UAAWJ,EACXK,SAAUgS,EAAQzC,KAAK,KACvBhH,WAAYlH,EACZgR,SAAUjK,IAETpZ,MAAK,SAAAC,GACF8iB,EAAS9iB,EAASC,KAAKS,OACvBkmB,EAAU5mB,EAASC,KAAK5H,OACxBuY,EAAS5Q,EAASC,KAAK0Q,OACvBwS,EAAY,OAEfpiB,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,aAI1DnG,qBAAU,WACNue,MACD,CAAC7I,EAAME,EAAUqS,EAAS3Q,EAAQ+G,IAErC,IA2DMkK,GAAa,SAAAlmB,GAAE,OAA8B,IAA1BukB,EAASd,QAAQzjB,IAE1C,OACI,6BACI,kBAAC4oB,GAAD,CACI3T,OAAQA,EACRnY,KAAMgpB,EACNvhB,QAAS,kBAAMwhB,GAAgB,IAC/Bd,UAAWA,EACXxJ,UAAWA,IAEf,yBAAK5d,UAAWpB,EAAQqe,QACpB,yBAAKjd,UAAWpB,EAAQse,aACpB,kBAACjW,GAAA,EAAD,CACI7K,MAAO,UACPmE,QAAS,kBAAM8d,KACf3d,QAAS,YAHb,kBAUR,kBAAC+G,GAAA,EAAD,CAAO3F,QAAM,EAAC9B,UAAWpB,EAAQ2U,gBAC5BmT,EAAShU,OAAS,GACf,kBAACtS,EAAA,EAAD,CAASJ,UAAWpB,EAAQ2T,WACxB,kBAAC9R,EAAA,EAAD,CACIuI,MAAO,CAAEoT,KAAM,YACfhgB,MAAM,UACNsE,QAAQ,aAHZ,sBAKSgmB,EAAShU,OALlB,uBAOA,kBAACoM,GAAA,EAAD,CAASljB,MAAM,gBACX,kBAACyE,EAAA,EAAD,CACIE,QA/ER,WAChB2J,GAAW,GACXrF,KAAIoG,KAAK,sBAAuB,CAAE9I,GAAIukB,IACjC3hB,MAAK,WACFsZ,IACA7Z,EAAe,MAAO,QAAS,6CAAW,cAE7CuB,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACFmF,GAAW,OAqEKgC,SAAUjC,EACV3J,aAAW,UAEX,kBAACkX,GAAA,EAAD,SAKhB,kBAACgH,GAAA,EAAD,CAAgBxe,UAAWpB,EAAQ4H,WAC/B,kBAACkQ,GAAA,EAAD,CAAOpW,aAAW,eAAekI,KAAM,SACnC,kBAACmO,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAU5N,MAAO,CAAE5G,OAAQ,KACvB,kBAACyU,GAAA,EAAD,CAAWld,QAAQ,YACf,kBAAC+uB,GAAA,EAAD,CACIC,cACIjC,EAAShU,OAAS,GAClBgU,EAAShU,OAASiZ,EAAOjZ,OAE7BnF,QACIoe,EAAOjZ,OAAS,GAChBgU,EAAShU,SAAWiZ,EAAOjZ,OAE/B3Q,SAvFP,SAAAC,GACzB,GAAIA,EAAMgJ,OAAOuC,QAAjB,CACI,IAAMqb,EAAe+C,EAAOxqB,KAAI,SAAA0nB,GAAC,OAAIA,EAAE/a,MACvCqa,EAAYS,QAGhBT,EAAY,KAkFoB3Y,WAAY,CACR,aAAc,0BAI1B,kBAACqH,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,KAC1B,kBAACimB,GAAA,EAAD,CACIhsB,OAAuB,OAAfirB,EAAQ,GAChBhnB,UAAWgnB,EAAQ,GACnBxnB,QAAS,kBACLynB,EAAW,CACP,KACe,QAAfD,EAAQ,GACF,OACA,UARlB,IAaoB,OAAfA,EAAQ,GACL,0BACI/nB,UACIpB,EAAQ8oB,gBAGI,SAAfK,EAAQ,GACH,oBACA,oBAEV,OAGZ,kBAAClR,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,MAA9B,sBAGA,kBAACgU,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,KAA9B,gBAGA,kBAACgU,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,KAC1B,kBAACimB,GAAA,EAAD,CACIhsB,OAAuB,aAAfirB,EAAQ,GAChBhnB,UAAWgnB,EAAQ,GACnBxnB,QAAS,kBACLynB,EAAW,CACP,WACe,QAAfD,EAAQ,GACF,OACA,UARlB,qBAaoB,aAAfA,EAAQ,GACL,0BACI/nB,UACIpB,EAAQ8oB,gBAGI,SAAfK,EAAQ,GACH,oBACA,oBAEV,OAGZ,kBAAClR,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,KAAOua,MAAO,SAA5C,gBAGA,kBAACvG,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,IAAMua,MAAO,SAA3C,gBAGA,kBAACvG,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,MAA9B,gBAGA,kBAACgU,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,KAA9B,4BAGA,kBAACgU,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,MAA9B,sBAGA,kBAACgU,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,MAA9B,sBAGA,kBAACgU,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,KAA9B,kBAKR,kBAACiU,GAAA,EAAD,KACK6U,EAAOxqB,KAAI,SAAA4V,GAAG,OACX,kBAACH,GAAA,EAAD,CACI8H,OAAK,EACL/c,IAAKoV,EAAIjJ,GACTib,KAAK,WACLrC,SAAU2B,GAAWtR,EAAIjJ,KAEzB,kBAAC+I,GAAA,EAAD,CAAWld,QAAQ,YACf,kBAAC+uB,GAAA,EAAD,CACInoB,QAAS,SAAAyB,GAAK,OAjLlC,SAACA,EAAOsD,GACxB,IAAM0jB,EAAgBtC,EAASd,QAAQtgB,GACnC2jB,EAAc,IAEK,IAAnBD,EACAC,EAAcA,EAAYC,OAAOxC,EAAUphB,GAClB,IAAlB0jB,EACPC,EAAcA,EAAYC,OAAOxC,EAASyC,MAAM,IACzCH,IAAkBtC,EAAShU,OAAS,EAC3CuW,EAAcA,EAAYC,OAAOxC,EAASyC,MAAM,GAAI,IAC7CH,EAAgB,IACvBC,EAAcA,EAAYC,OACtBxC,EAASyC,MAAM,EAAGH,GAClBtC,EAASyC,MAAMH,EAAgB,KAIvCb,EAAYc,GAiK4BG,CAAYpnB,EAAO+U,EAAIjJ,KAE3BP,QAAS8a,GAAWtR,EAAIjJ,OAGhC,kBAAC+I,GAAA,EAAD,KAAYE,EAAIjJ,IAChB,kBAAC+I,GAAA,EAAD,KACKE,EAAI/I,MAET,kBAAC6I,GAAA,EAAD,KACkB,IAAbE,EAAI6H,MAAc,qBACL,IAAb7H,EAAI6H,MAAc,qBACL,IAAb7H,EAAI6H,MAAc,gBAEvB,kBAAC/H,GAAA,EAAD,KACKE,EAAI8U,SAET,kBAAChV,GAAA,EAAD,CAAWuG,MAAO,SACE,UAAfrG,EAAI+U,QAAsB/U,EAAIgV,MACf,UAAfhV,EAAI+U,QACD,8CACO/U,EAAIgV,MAAM,KAAKC,QAAQ,KAKtC,kBAACnV,GAAA,EAAD,CAAWuG,MAAO,SACbrG,EAAIa,KAGT,kBAACf,GAAA,EAAD,KACoB,IAAfE,EAAIwS,QAAgB,qBACL,IAAfxS,EAAIwS,QAAgB,sBAGzB,kBAAC1S,GAAA,EAAD,KACoB,UAAfE,EAAI+U,QAAsB,eACX,WAAf/U,EAAI+U,QAAuB,qBACZ,UAAf/U,EAAI+U,QAAsB,SAG/B,kBAACjV,GAAA,EAAD,KACI,kBAACjJ,GAAA,EAAD,CACIC,KACI,sBACAkJ,EAAI4T,QAGPjlB,EAAMqR,EAAI4T,QACLjlB,EAAMqR,EAAI4T,QAAQtB,KAClB,iBAGd,kBAACxS,GAAA,EAAD,KACK,IAAI3E,KACD6E,EAAI6T,WACNC,qBACE,IACA,IAAI3Y,KACA6E,EAAI6T,WACNE,sBAEV,kBAACjU,GAAA,EAAD,KACI,kBAACiI,GAAA,EAAD,CAASljB,MAAO,gBACZ,kBAACyE,EAAA,EAAD,CACI6L,SAAUjC,EACV1J,QAAS,kBA3RhC4B,EA4RwC4U,EAAIjJ,GA3R7D5D,GAAW,QACXrF,KAAIoG,KAAK,sBAAuB,CAAE9I,GAAI,CAACA,KAClC4C,MAAK,WACFsZ,IACA7Z,EAAe,MAAO,QAAS,6CAAW,cAE7CuB,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACFmF,GAAW,MAXF,IAAA/H,GA8RuBqG,KAAM,SAEN,kBAACgP,GAAA,EAAD,gBAShC,kBAACyH,GAAA,EAAD,CACIC,mBAAoB,CAAC,GAAI,GAAI,GAAI,KACjCxW,UAAU,MACVwP,MAAOvC,EACPwJ,YAAazJ,EACbF,KAAMA,EAAO,EACb4J,aAAc,SAAC/T,EAAGgU,GAAJ,OAAU5J,EAAQ4J,EAAI,IACpCC,oBAAqB,SAAAjU,GACjBoS,EAAYpS,EAAEL,OAAO5D,OACrBqO,EAAQ,QC1YhC,IAAMvb,GAAYC,aAAW,SAAAJ,GAAK,YAAK,CACnCd,MAAI,mBACCc,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BX,WAAY,MAFhB,6BAIc,IAJd,GAMJpB,QAAS,CACLD,QAASI,EAAMC,QAAQ,IAE3BwM,UAAW,CACP/K,UAAW,QAEf8X,eAAgB,CACZ1J,UAAW,IAEfoT,OAAQ,CACJ5jB,QAAS,OACT2C,eAAgB,iBAEpBkhB,YAAa,GACb3K,UAC2B,UAAvBxY,EAAMsC,QAAQgK,KACR,CACIjK,MAAOrC,EAAMsC,QAAQE,UAAUU,KAC/BR,gBAAiBM,YAAQhD,EAAMsC,QAAQE,UAAU+jB,MAAO,MAE5D,CACIlkB,MAAOrC,EAAMsC,QAAQC,KAAKU,QAC1BP,gBAAiB1C,EAAMsC,QAAQE,UAAU6c,MAEvDsO,eAAgB,CACZC,OAAQ,EACRC,KAAM,gBACNxlB,OAAQ,EACR9I,QAAS,EACTwpB,SAAU,SACVnpB,QAAS,EACTuG,SAAU,WACV2nB,IAAK,GACLztB,MAAO,OAIA,SAAS6xB,KACpB,IAAMrtB,EAAU1E,KADe,EAEG4E,mBAAS,IAFZ,mBAExBotB,EAFwB,KAEbC,EAFa,OAGPrtB,mBAAS,GAHF,mBAGxB0W,EAHwB,KAGlBC,EAHkB,OAIC3W,mBAAS,IAJV,mBAIxB4W,EAJwB,KAId+H,EAJc,OAKL3e,mBAAS,GALJ,mBAKxB6W,EALwB,KAKjBC,EALiB,OAMH9W,mBAAS,IANN,mBAMxBsY,EANwB,KAMhBwG,EANgB,OAOL9e,mBAAS,IAPJ,mBAOxB4G,EAPwB,KAOjBoiB,EAPiB,OAQHhpB,mBAAS,IARN,mBAQxBqf,EARwB,KAQhBiJ,EARgB,OASDtoB,mBAAS,CAAC,KAAM,SATf,mBASxBipB,EATwB,KASfC,EATe,OAUSlpB,oBAAS,GAVlB,mBAUxBmpB,EAVwB,KAUVC,EAVU,OAWCppB,mBAAS,IAXV,mBAWxB4nB,EAXwB,KAWdyB,EAXc,OAYDrpB,oBAAS,GAZR,mBAYxBmL,EAZwB,KAYfC,EAZe,KAczBzK,EAAWC,eACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKvI,GAA5B,OACIqD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKvI,MACvD,CAACqD,IAGC4e,EAAW,WACbxZ,KAAIoG,KAAK,uBAAwB,CAC7BuK,KAAMA,EACNM,UAAWJ,EACXK,SAAUgS,EAAQzC,KAAK,KACvBhH,WAAYlH,EACZgR,SAAUjK,IAETpZ,MAAK,SAAAC,GACF8iB,EAAS9iB,EAASC,KAAKS,OACvBymB,EAAannB,EAASC,KAAK5H,OAC3BuY,EAAS5Q,EAASC,KAAK0Q,OACvBwS,EAAY,OAEfpiB,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,aAI1DnG,qBAAU,WACNue,MACD,CAAC7I,EAAME,EAAUqS,EAAS3Q,EAAQ+G,IAErC,IA2DMkK,GAAa,SAAAlmB,GAAE,OAA8B,IAA1BukB,EAASd,QAAQzjB,IAE1C,OACI,6BACI,kBAAC4oB,GAAD,CACI3T,OAAQA,EACRnY,KAAMgpB,EACNvhB,QAAS,kBAAMwhB,GAAgB,IAC/Bd,UAAWA,EACXxJ,UAAWA,IAEf,yBAAK5d,UAAWpB,EAAQqe,QACpB,yBAAKjd,UAAWpB,EAAQse,aACpB,kBAACjW,GAAA,EAAD,CACI7K,MAAO,UACPmE,QAAS,kBAAM8d,KACf3d,QAAS,YAHb,kBAUR,kBAAC+G,GAAA,EAAD,CAAO3F,QAAM,EAAC9B,UAAWpB,EAAQ2U,gBAC5BmT,EAAShU,OAAS,GACf,kBAACtS,EAAA,EAAD,CAASJ,UAAWpB,EAAQ2T,WACxB,kBAAC9R,EAAA,EAAD,CACIuI,MAAO,CAAEoT,KAAM,YACfhgB,MAAM,UACNsE,QAAQ,aAHZ,sBAKSgmB,EAAShU,OALlB,uBAOA,kBAACoM,GAAA,EAAD,CAASljB,MAAM,gBACX,kBAACyE,EAAA,EAAD,CACIE,QA/ER,WAChB2J,GAAW,GACXrF,KAAIoG,KAAK,yBAA0B,CAAE9I,GAAIukB,IACpC3hB,MAAK,WACFsZ,IACA7Z,EAAe,MAAO,QAAS,iCAAS,cAE3CuB,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACFmF,GAAW,OAqEKgC,SAAUjC,EACV3J,aAAW,UAEX,kBAACkX,GAAA,EAAD,SAKhB,kBAACgH,GAAA,EAAD,CAAgBxe,UAAWpB,EAAQ4H,WAC/B,kBAACkQ,GAAA,EAAD,CAAOpW,aAAW,eAAekI,KAAM,SACnC,kBAACmO,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAU5N,MAAO,CAAE5G,OAAQ,KACvB,kBAACyU,GAAA,EAAD,CAAWld,QAAQ,YACf,kBAAC+uB,GAAA,EAAD,CACIC,cACIjC,EAAShU,OAAS,GAClBgU,EAAShU,OAASwZ,EAAUxZ,OAEhCnF,QACI2e,EAAUxZ,OAAS,GACnBgU,EAAShU,SAAWwZ,EAAUxZ,OAElC3Q,SAvFP,SAAAC,GACzB,GAAIA,EAAMgJ,OAAOuC,QAAjB,CACI,IAAMqb,EAAesD,EAAU/qB,KAAI,SAAA0nB,GAAC,OAAIA,EAAE/a,MAC1Cqa,EAAYS,QAGhBT,EAAY,KAkFoB3Y,WAAY,CACR,aAAc,0BAI1B,kBAACqH,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,KAC1B,kBAACimB,GAAA,EAAD,CACIhsB,OAAuB,OAAfirB,EAAQ,GAChBhnB,UAAWgnB,EAAQ,GACnBxnB,QAAS,kBACLynB,EAAW,CACP,KACe,QAAfD,EAAQ,GACF,OACA,UARlB,IAaoB,OAAfA,EAAQ,GACL,0BACI/nB,UACIpB,EAAQ8oB,gBAGI,SAAfK,EAAQ,GACH,oBACA,oBAEV,OAGZ,kBAAClR,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,MAA9B,sBAGA,kBAACgU,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,KAA9B,gBAGA,kBAACgU,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,KAAOua,MAAO,SACxC,kBAAC0L,GAAA,EAAD,CACIhsB,OAAuB,eAAfirB,EAAQ,GAChBhnB,UAAWgnB,EAAQ,GACnBxnB,QAAS,kBACLynB,EAAW,CACP,aACe,QAAfD,EAAQ,GACF,OACA,UARlB,eAaoB,eAAfA,EAAQ,GACL,0BACI/nB,UACIpB,EAAQ8oB,gBAGI,SAAfK,EAAQ,GACH,oBACA,oBAEV,OAGZ,kBAAClR,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,MAA9B,sBAGA,kBAACgU,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,MAA9B,sBAGA,kBAACgU,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,KAA9B,kBAKR,kBAACiU,GAAA,EAAD,KACKoV,EAAU/qB,KAAI,SAAA4V,GAAG,OACd,kBAACH,GAAA,EAAD,CACI8H,OAAK,EACL/c,IAAKoV,EAAIjJ,GACTib,KAAK,WACLrC,SAAU2B,GAAWtR,EAAIjJ,KAEzB,kBAAC+I,GAAA,EAAD,CAAWld,QAAQ,YACf,kBAAC+uB,GAAA,EAAD,CACInoB,QAAS,SAAAyB,GAAK,OArKlC,SAACA,EAAOsD,GACxB,IAAM0jB,EAAgBtC,EAASd,QAAQtgB,GACnC2jB,EAAc,IAEK,IAAnBD,EACAC,EAAcA,EAAYC,OAAOxC,EAAUphB,GAClB,IAAlB0jB,EACPC,EAAcA,EAAYC,OAAOxC,EAASyC,MAAM,IACzCH,IAAkBtC,EAAShU,OAAS,EAC3CuW,EAAcA,EAAYC,OAAOxC,EAASyC,MAAM,GAAI,IAC7CH,EAAgB,IACvBC,EAAcA,EAAYC,OACtBxC,EAASyC,MAAM,EAAGH,GAClBtC,EAASyC,MAAMH,EAAgB,KAIvCb,EAAYc,GAqJ4BG,CAAYpnB,EAAO+U,EAAIjJ,KAE3BP,QAAS8a,GAAWtR,EAAIjJ,OAGhC,kBAAC+I,GAAA,EAAD,KAAYE,EAAIjJ,IAChB,kBAAC+I,GAAA,EAAD,CAAW7N,MAAO,CAACqiB,UAAU,cACxBtU,EAAIqV,QAET,kBAACvV,GAAA,EAAD,KACoB,IAAfE,EAAIwS,QAAgB,eACL,IAAfxS,EAAIwS,QAAgB,qBACL,IAAfxS,EAAIwS,QAAgB,qBACL,IAAfxS,EAAIwS,QAAgB,eACL,IAAfxS,EAAIwS,QAAgB,eACL,IAAfxS,EAAIwS,QAAgB,4BACL,IAAfxS,EAAIwS,QAAgB,gBAEzB,kBAAC1S,GAAA,EAAD,CAAWuG,MAAO,SACblG,aAAaH,EAAIsV,YAEtB,kBAACxV,GAAA,EAAD,KACI,kBAACjJ,GAAA,EAAD,CACIC,KACI,sBACAkJ,EAAI4T,QAGPjlB,EAAMqR,EAAI4T,QACLjlB,EAAMqR,EAAI4T,QAAQtB,KAClB,iBAGd,kBAACxS,GAAA,EAAD,KACK,IAAI3E,KACD6E,EAAI6T,WACNC,qBACE,IACA,IAAI3Y,KACA6E,EAAI6T,WACNE,sBAEV,kBAACjU,GAAA,EAAD,KACI,kBAACiI,GAAA,EAAD,CAASljB,MAAO,gBACZ,kBAACyE,EAAA,EAAD,CACI6L,SAAUjC,EACV1J,QAAS,kBA3PhC4B,EA4PwC4U,EAAIjJ,GA3P7D5D,GAAW,QACXrF,KAAIoG,KAAK,yBAA0B,CAAE9I,GAAI,CAACA,KACrC4C,MAAK,WACFsZ,IACA7Z,EAAe,MAAO,QAAS,iCAAS,cAE3CuB,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACFmF,GAAW,MAXF,IAAA/H,GA8PuBqG,KAAM,SAEN,kBAACgP,GAAA,EAAD,gBAShC,kBAACyH,GAAA,EAAD,CACIC,mBAAoB,CAAC,GAAI,GAAI,GAAI,KACjCxW,UAAU,MACVwP,MAAOvC,EACPwJ,YAAazJ,EACbF,KAAMA,EAAO,EACb4J,aAAc,SAAC/T,EAAGgU,GAAJ,OAAU5J,EAAQ4J,EAAI,IACpCC,oBAAqB,SAAAjU,GACjBoS,EAAYpS,EAAEL,OAAO5D,OACrBqO,EAAQ,QC1WhC,IAAMvb,GAAYC,aAAW,SAAAJ,GAAK,YAAK,CACnCd,MAAI,mBACCc,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BX,WAAY,MAFhB,6BAIc,IAJd,GAMJpB,QAAS,CACLD,QAASI,EAAMC,QAAQ,IAE3BwM,UAAW,CACP/K,UAAW,QAEf8X,eAAgB,CACZ1J,UAAW,IAEfoT,OAAQ,CACJ5jB,QAAS,OACT2C,eAAgB,iBAEpBkhB,YAAa,GACb3K,UAC2B,UAAvBxY,EAAMsC,QAAQgK,KACR,CACIjK,MAAOrC,EAAMsC,QAAQE,UAAUU,KAC/BR,gBAAiBM,YAAQhD,EAAMsC,QAAQE,UAAU+jB,MAAO,MAE5D,CACIlkB,MAAOrC,EAAMsC,QAAQC,KAAKU,QAC1BP,gBAAiB1C,EAAMsC,QAAQE,UAAU6c,MAEvDsO,eAAgB,CACZC,OAAQ,EACRC,KAAM,gBACNxlB,OAAQ,EACR9I,QAAS,EACTwpB,SAAU,SACVnpB,QAAS,EACTuG,SAAU,WACV2nB,IAAK,GACLztB,MAAO,OAIA,SAASkyB,KACpB,IAAM1tB,EAAU1E,KADW,EAED4E,mBAAS,IAFR,mBAEpBytB,EAFoB,KAEbC,EAFa,OAGH1tB,mBAAS,GAHN,mBAGpB0W,EAHoB,KAGdC,EAHc,OAIK3W,mBAAS,IAJd,mBAIpB4W,EAJoB,KAIV+H,EAJU,OAKD3e,mBAAS,GALR,mBAKpB6W,EALoB,KAKbC,EALa,OAMC9W,mBAAS,IANV,mBAMpBsY,EANoB,KAMZwG,EANY,OAOD9e,mBAAS,IAPR,mBAOpB4G,EAPoB,KAOboiB,EAPa,OAQChpB,mBAAS,IARV,mBAQpBqf,EARoB,KAQZiJ,EARY,OASGtoB,mBAAS,CAAC,KAAM,SATnB,mBASpBipB,EAToB,KASXC,EATW,OAUalpB,oBAAS,GAVtB,mBAUpBmpB,EAVoB,KAUNC,EAVM,OAWKppB,mBAAS,IAXd,mBAWpB4nB,EAXoB,KAWVyB,EAXU,OAYGrpB,oBAAS,GAZZ,mBAYpBmL,EAZoB,KAYXC,EAZW,KAcrBzK,EAAWC,eACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKvI,GAA5B,OACIqD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKvI,MACvD,CAACqD,IAGC4e,EAAW,WACbxZ,KAAIoG,KAAK,mBAAoB,CACzBuK,KAAMA,EACNM,UAAWJ,EACXK,SAAUgS,EAAQzC,KAAK,KACvBhH,WAAYlH,EACZgR,SAAUjK,IAETpZ,MAAK,SAAAC,GACF8iB,EAAS9iB,EAASC,KAAKS,OACvB8mB,EAASxnB,EAASC,KAAK5H,OACvBuY,EAAS5Q,EAASC,KAAK0Q,OACvBwS,EAAY,OAEfpiB,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,aAI1DnG,qBAAU,WACNue,MACD,CAAC7I,EAAME,EAAUqS,EAAS3Q,EAAQ+G,IAErC,IAwEMkK,GAAa,SAAAlmB,GAAE,OAA8B,IAA1BukB,EAASd,QAAQzjB,IAE1C,OACI,6BACI,kBAAC4oB,GAAD,CACI3T,OAAQA,EACRnY,KAAMgpB,EACNvhB,QAAS,kBAAMwhB,GAAgB,IAC/Bd,UAAWA,EACXxJ,UAAWA,IAEf,yBAAK5d,UAAWpB,EAAQqe,QACpB,yBAAKjd,UAAWpB,EAAQse,aACpB,kBAACjW,GAAA,EAAD,CACI7K,MAAO,UACPmE,QAAS,kBAAM8d,KACf3d,QAAS,YAHb,kBAUR,kBAAC+G,GAAA,EAAD,CAAO3F,QAAM,EAAC9B,UAAWpB,EAAQ2U,gBAC5BmT,EAAShU,OAAS,GACf,kBAACtS,EAAA,EAAD,CAASJ,UAAWpB,EAAQ2T,WACxB,kBAAC9R,EAAA,EAAD,CACIuI,MAAO,CAAEoT,KAAM,YACfhgB,MAAM,UACNsE,QAAQ,aAHZ,sBAKSgmB,EAAShU,OALlB,uBAOA,kBAACoM,GAAA,EAAD,CAASljB,MAAM,gBACX,kBAACyE,EAAA,EAAD,CACIE,QA5FR,WAChB2J,GAAW,GACXrF,KAAIoG,KAAK,qBAAsB,CAAE9I,GAAIukB,IAChC3hB,MAAK,WACFsZ,IACA7Z,EAAe,MAAO,QAAS,iCAAS,cAE3CuB,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACFmF,GAAW,OAkFKgC,SAAUjC,EACV3J,aAAW,UAEX,kBAACkX,GAAA,EAAD,SAKhB,kBAACgH,GAAA,EAAD,CAAgBxe,UAAWpB,EAAQ4H,WAC/B,kBAACkQ,GAAA,EAAD,CAAOpW,aAAW,eAAekI,KAAM,SACnC,kBAACmO,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAU5N,MAAO,CAAE5G,OAAQ,KACvB,kBAACyU,GAAA,EAAD,CAAWld,QAAQ,YACf,kBAAC+uB,GAAA,EAAD,CACIC,cACIjC,EAAShU,OAAS,GAClBgU,EAAShU,OAAS6Z,EAAM7Z,OAE5BnF,QACIgf,EAAM7Z,OAAS,GACfgU,EAAShU,SAAW6Z,EAAM7Z,OAE9B3Q,SApGP,SAAAC,GACzB,GAAIA,EAAMgJ,OAAOuC,QAAjB,CACI,IAAMqb,EAAe2D,EAAMprB,KAAI,SAAA0nB,GAAC,OAAIA,EAAE/a,MACtCqa,EAAYS,QAGhBT,EAAY,KA+FoB3Y,WAAY,CACR,aAAc,0BAI1B,kBAACqH,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,KAC1B,kBAACimB,GAAA,EAAD,CACIhsB,OAAuB,OAAfirB,EAAQ,GAChBhnB,UAAWgnB,EAAQ,GACnBxnB,QAAS,kBACLynB,EAAW,CACP,KACe,QAAfD,EAAQ,GACF,OACA,UARlB,IAaoB,OAAfA,EAAQ,GACL,0BACI/nB,UACIpB,EAAQ8oB,gBAGI,SAAfK,EAAQ,GACH,oBACA,oBAEV,OAGZ,kBAAClR,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,MAA9B,gBAGA,kBAACgU,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,KAA9B,gBAGA,kBAACgU,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,KAA9B,4BAGA,kBAACgU,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,MAA9B,4BAGA,kBAACgU,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,MAA9B,sBAGA,kBAACgU,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,MAA9B,sBAGA,kBAACgU,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,KAA9B,kBAKR,kBAACiU,GAAA,EAAD,KACKyV,EAAMprB,KAAI,SAAA4V,GAAG,OACV,kBAACH,GAAA,EAAD,CACI8H,OAAK,EACL/c,IAAKoV,EAAIjJ,GACTib,KAAK,WACLrC,SAAU2B,GAAWtR,EAAIjJ,KAEzB,kBAAC+I,GAAA,EAAD,CAAWld,QAAQ,YACf,kBAAC+uB,GAAA,EAAD,CACInoB,QAAS,SAAAyB,GAAK,OA7JlC,SAACA,EAAOsD,GACxB,IAAM0jB,EAAgBtC,EAASd,QAAQtgB,GACnC2jB,EAAc,IAEK,IAAnBD,EACAC,EAAcA,EAAYC,OAAOxC,EAAUphB,GAClB,IAAlB0jB,EACPC,EAAcA,EAAYC,OAAOxC,EAASyC,MAAM,IACzCH,IAAkBtC,EAAShU,OAAS,EAC3CuW,EAAcA,EAAYC,OAAOxC,EAASyC,MAAM,GAAI,IAC7CH,EAAgB,IACvBC,EAAcA,EAAYC,OACtBxC,EAASyC,MAAM,EAAGH,GAClBtC,EAASyC,MAAMH,EAAgB,KAIvCb,EAAYc,GA6I4BG,CAAYpnB,EAAO+U,EAAIjJ,KAE3BP,QAAS8a,GAAWtR,EAAIjJ,OAGhC,kBAAC+I,GAAA,EAAD,KAAYE,EAAIjJ,IAChB,kBAAC+I,GAAA,EAAD,CAAW7N,MAAO,CAACqiB,UAAU,cACxBoB,aAAY1V,EAAI6H,OAErB,kBAAC/H,GAAA,EAAD,KACK6V,aAAc3V,EAAIwS,SAEvB,kBAAC1S,GAAA,EAAD,KACK8V,aAAgB5V,EAAI6H,KAAK7H,EAAI6V,WAElC,kBAAC/V,GAAA,EAAD,CAAW7W,UAAWpB,EAAQ+B,QAzJ7C,SAAAqF,GACb,GAAc,KAAVA,EACA,MAAO,IAEX,IAEI,OADYgQ,KAAKC,MAAMjQ,GACZrB,IACd,MAAO0G,GACJ,MAAO,gBAkJsBwhB,CAAS9V,EAAI+V,QAElB,kBAACjW,GAAA,EAAD,KACI,kBAACjJ,GAAA,EAAD,CACIC,KACI,sBACAkJ,EAAI4T,QAGPjlB,EAAMqR,EAAI4T,QACLjlB,EAAMqR,EAAI4T,QAAQtB,KAClB,iBAGd,kBAACxS,GAAA,EAAD,KACK,IAAI3E,KACD6E,EAAI6T,WACNC,qBACE,IACA,IAAI3Y,KACA6E,EAAI6T,WACNE,sBAEV,kBAACjU,GAAA,EAAD,KACI,kBAACiI,GAAA,EAAD,CAASljB,MAAO,gBACZ,kBAACyE,EAAA,EAAD,CACI6L,SAAUjC,EACV1J,QAAS,kBAhPhC4B,EAiPwC4U,EAAIjJ,GAhP7D5D,GAAW,QACXrF,KAAIoG,KAAK,qBAAsB,CAAE9I,GAAI,CAACA,KACjC4C,MAAK,WACFsZ,IACA7Z,EAAe,MAAO,QAAS,iCAAS,cAE3CuB,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACFmF,GAAW,MAXF,IAAA/H,GAmPuBqG,KAAM,SAEN,kBAACgP,GAAA,EAAD,gBAShC,kBAACyH,GAAA,EAAD,CACIC,mBAAoB,CAAC,GAAI,GAAI,GAAI,KACjCxW,UAAU,MACVwP,MAAOvC,EACPwJ,YAAazJ,EACbF,KAAMA,EAAO,EACb4J,aAAc,SAAC/T,EAAGgU,GAAJ,OAAU5J,EAAQ4J,EAAI,IACpCC,oBAAqB,SAAAjU,GACjBoS,EAAYpS,EAAEL,OAAO5D,OACrBqO,EAAQ,Q,iCC9V1Bvb,GAAYC,aAAW,SAAAJ,GAAK,YAAK,CACnCd,MAAI,mBACCc,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BX,WAAY,MAFhB,6BAIc,IAJd,GAMJ4O,KAAM,CACF1Q,SAAU,IACV2Q,UAAW,GACXC,aAAc,IAElBC,cAAc,eACThQ,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BhC,QAAS,oBAGjBozB,WAAY,CACR3yB,MAAO,IACPqf,aAAc,OAmBP,SAASuT,KACpB,IAAMpuB,EAAU1E,KADa,EAEC4E,oBAAS,GAFV,mBAEtBmL,EAFsB,KAEbC,EAFa,OAGCpL,mBAAS,CACnCuiB,OAAQ,EACR4L,UAAW,GACX5kB,IAAK,GACL6kB,IAAK,GACLC,WAAW,IARc,mBAGtBhmB,EAHsB,KAGb2D,EAHa,OAUGhM,mBAAS,MAVZ,mBAUtB+e,EAVsB,KAUZC,EAVY,OAWGhf,mBAAS,IAXZ,mBAWtBwd,EAXsB,KAWZgB,EAXY,OAYHxe,mBAAS,IAZN,mBAYtB4G,EAZsB,KAYfoiB,EAZe,OAaLhpB,mBAAS,MAbJ,mBAatB2G,EAbsB,KAahBqkB,EAbgB,OAcWhrB,oBAAS,GAdpB,mBActBsuB,EAdsB,KAcRC,EAdQ,OAeSvuB,oBAAS,GAflB,mBAetBwuB,EAfsB,KAeTC,EAfS,KAiBvBxiB,EAAe,SAAAzF,GAAI,OAAI,SAAAtD,GACzB8I,EAAW,2BACJ3D,GADG,kBAEL7B,EAAOtD,EAAMgJ,OAAO5D,WAWvB/H,EAAUC,eACVG,EAAWC,eACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKvI,GAA5B,OACIqD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKvI,MACvD,CAACqD,IAiCC+tB,EApFV,SAAqBpmB,EAAOqmB,GAAQ,IAAD,EACa3uB,mBAASsI,GADtB,mBACxBsmB,EADwB,KACRC,EADQ,KAY/B,OATA7tB,qBAAU,WACN,IAAM8tB,EAAUC,YAAW,WACvBF,EAAkBvmB,KACnBqmB,GACH,OAAO,WACHK,aAAaF,MAElB,CAACxmB,IAEGsmB,EAwEqBK,CAAY5mB,EAAQ8lB,UAAW,KAE3DntB,qBAAU,WACsB,KAAxB0tB,GACA3oB,KAAIoG,KAAK,mBAAoB,CACzBuK,KAAM,EACNM,UAAW,IACXC,SAAU,SACVqS,SAAU,CACNZ,KAAMgG,EACN/F,MAAO+F,KAGVzoB,MAAK,SAAAC,GACF8iB,EAAS9iB,EAASC,KAAK5H,UAE1B0I,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,cAG3D,CAACunB,IAEJ1tB,qBAAU,WACN+E,KAAIoG,KAAK,qBAAsB,CAC3BuK,KAAM,EACNM,UAAW,IACXC,SAAU,SACVuI,WAAY,KAEXvZ,MAAK,SAAAC,GACF,IAAMmB,EAAM,GACZnB,EAASC,KAAK5H,MAAM8H,SAAQ,SAAAC,GACxBe,EAAIf,EAAE0I,IAAM1I,KAEhBkY,EAAYnX,MAEfJ,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,cAGvD,IAEH,IAvF0BX,EA+FpB0oB,EAAgB,SAAAC,GAAM,OAAI,SAAAC,GAC5B,IAAM1wB,EACc,MAAhB0wB,EAAO1wB,KACD0wB,EAAO1wB,KAAO0wB,EAAO5oB,KACrB4oB,EAAO1wB,KAAO,IAAM0wB,EAAO5oB,KACrC2oB,EAAe,MAARzwB,EAAe,IAAMA,KAG1B2wB,EAAmB,SAAAC,GACrB,GAAIA,EAAa,CACb,IACK9R,EAASnV,EAAQka,SACgB,UAAlC/E,EAASnV,EAAQka,QAAQzC,MACS,WAAlCtC,EAASnV,EAAQka,QAAQzC,KAQzB,YANApa,EACI,MACA,QACA,mGACA,WAIR6oB,GAAgB,OACb,CACH,GAAa,OAAT5nB,EAEA,YADAjB,EAAe,MAAO,QAAS,mDAAY,WAG/C+oB,GAAe,KAIvB,OACI,6BACI,kBAAC9mB,GAAA,EAAD,CACIxH,KAAMmuB,EACN1mB,QAAS,kBAAM2mB,GAAgB,IAC/B1mB,kBAAgB,qBAEhB,kBAACE,GAAA,EAAD,CAAa1E,GAAG,qBAAhB,4BACA,kBAACksB,GAAA,EAAD,CACIC,YAAY,IACZC,IAAK,8BAAgCpnB,EAAQka,OAC7CqF,SAAU,GACV8H,SAAUR,GAAc,SAAA3O,GAAC,OACrBvU,EAAW,2BACJ3D,GADG,IAENkB,IAAKgX,UAKjB,kBAACrY,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CACI1G,QAAS,kBAAM8sB,GAAgB,IAC/BjxB,MAAM,WAFV,kBAQR,kBAACqK,GAAA,EAAD,CACIxH,KAAMquB,EACN5mB,QAAS,kBAAM6mB,GAAe,IAC9B5mB,kBAAgB,qBAEhB,kBAACE,GAAA,EAAD,CAAa1E,GAAG,qBAAhB,4BACA,kBAACksB,GAAA,EAAD,CACIC,YAAY,IACZC,IACI,6BACU,OAAT9oB,EAAgB,EAAIA,EAAKqI,IAE9B4Y,SAAU,GACV8H,SAAUR,GAAc,SAAA3O,GAAC,OACrBvU,EAAW,2BACJ3D,GADG,IAEN+lB,IAAK7N,UAKjB,kBAACrY,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CACI1G,QAAS,kBAAMgtB,GAAe,IAC9BnxB,MAAM,WAFV,kBAQR,0BAAMgP,SA5KC,SAAAC,GACXA,EAAEC,iBACW,OAAT7F,GAIJyE,GAAW,GACXrF,KAAIoG,KAAK,qBAAsB,CAC3BwjB,IAAKhpB,EAAKqI,GACVqc,UAAWlY,SAAS9K,EAAQka,QAC5BhZ,IAAKlB,EAAQkB,IACb6kB,IAAK/lB,EAAQ+lB,IACbC,UAAWhmB,EAAQgmB,YAElBpoB,MAAK,WACFmF,GAAW,GACX7K,EAAQkC,KAAK,eACbiD,EACI,MACA,QACA,yJACA,cAGPuB,OAAM,SAAAC,GACHkE,GAAW,GACX1F,EAAe,MAAO,QAASwB,EAAMC,QAAS,aAvBlDzB,EAAe,MAAO,QAAS,mDAAY,aA0KvC,yBAAKxE,UAAWpB,EAAQ3F,MACpB,kBAACwH,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GAArC,wCAGA,yBAAK1H,UAAWpB,EAAQmL,eACpB,yBAAK/J,UAAWpB,EAAQgL,MACpB,kBAACqE,GAAA,EAAD,CAAOC,SAAS,QAAhB,kaAMJ,yBAAKlO,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACK,GAAA,EAAD,CACIuE,QAAQ,0BACRpO,GAAG,oBACHiF,MAAOD,EAAQka,OACftf,SAAUgJ,EAAa,UACvBmI,MAAO,kBAACtH,GAAA,EAAD,CAAOzJ,GAAG,0BAEhBgJ,OAAOD,KAAKoR,GAAUnb,KAAI,SAAAqkB,GAAG,OAC1B,kBAACvZ,GAAA,EAAD,CAAUtK,IAAK6jB,EAAKpe,MAAOoe,GACtBlJ,EAASkJ,GAAKxX,UAI3B,kBAAClC,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,kHAKR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIxE,MAAOD,EAAQ8lB,UACflrB,SAAU,SAAAsJ,GACNN,EAAa,YAAbA,CAA0BM,GAC1ByS,EAAYzS,EAAE0T,gBAElBmB,eACa,OAATza,GACI,kBAAC6K,GAAA,EAAD,CAAgBpQ,SAAS,SACrB,kBAACqI,GAAA,EAAD,CACIC,KAAK,QACLkmB,SAAU,WACN5E,EAAQ,OAEZrhB,MAAOhD,EAAK4jB,QAK5Bnd,SAAmB,OAATzG,IAEd,kBAACkpB,GAAA,EAAD,CACI1vB,KAC0B,KAAtBkI,EAAQ8lB,WACRvnB,EAAMgN,OAAS,EAEnBmL,SAAUA,EACV+Q,UAAW,SACXp0B,YAAU,IAET,gBAAGq0B,EAAH,EAAGA,gBAAH,OACG,kBAACC,GAAA,EAAD,iBACQD,EADR,CAEIE,QAAS,MAET,kBAACtnB,GAAA,EAAD,CACIzH,UAAWpB,EAAQmuB,YAElBrnB,EAAMvE,KAAI,SAAA6tB,GAAC,OACR,kBAAC/iB,GAAA,EAAD,CACItK,IAAKqtB,EAAElhB,GACPvN,QAAS,kBAtL1C,SAAAyuB,GACflkB,EAAW,2BACJ3D,GADG,IAEN8lB,UAAW,MAEfnD,EAAQkF,GAkL4CC,CAAWD,KAGdA,EAAE3F,KAAM,IACR,IAAM2F,EAAE1F,MAAQ,aAOzC,kBAACxd,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,sMAMR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,wCAIA,kBAACC,GAAA,EAAD,CACIxE,MAAOD,EAAQkB,IACftG,SAAU,SAAAsJ,GACNN,EAAa,MAAbA,CAAoBM,GACpByS,EAAYzS,EAAE0T,gBAElBlT,UAAQ,EACRwE,aACI,kBAACpJ,GAAA,EAAD,CACI1G,QAAS,kBACL4tB,GAAiB,KAFzB,kBAUR,kBAACriB,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,oFAMR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,wCAIA,kBAACC,GAAA,EAAD,CACIxE,MAAOD,EAAQ+lB,IACfnrB,SAAU,SAAAsJ,GACNN,EAAa,MAAbA,CAAoBM,GACpByS,EAAYzS,EAAE0T,gBAElBlT,UAAQ,EACRwE,aACI,kBAACpJ,GAAA,EAAD,CACI1G,QAAS,kBACL4tB,GAAiB,KAFzB,kBAUR,kBAACriB,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,4GAMR,yBAAKnC,UAAWpB,EAAQgL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACgC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIJ,QAASpG,EAAQgmB,UACjBprB,UAjWduD,EAkWkB,YAlWV,SAAAtD,GAC9B8I,EAAW,2BACJ3D,GADG,kBAEL7B,EAAOtD,EAAMgJ,OAAOuC,eAmWG9E,MAAM,+CAEV,kBAACqD,GAAA,EAAD,CAAgB3J,GAAG,yBAAnB,wGAQhB,yBAAKnC,UAAWpB,EAAQ3F,MACpB,kBAACgO,GAAA,EAAD,CACIiF,SAAUjC,EACV5D,KAAM,SACN3F,QAAS,YACTtE,MAAO,WAJX,2C,0BChbdlC,GAAYC,aAAW,SAAAJ,GAAK,YAAK,CACnCd,MAAI,mBACCc,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BX,WAAY,MAFhB,6BAIc,IAJd,GAMJpB,QAAS,CACLD,QAASI,EAAMC,QAAQ,IAE3BwM,UAAW,CACP/K,UAAW,QAEf8X,eAAgB,CACZ1J,UAAW,IAEfoT,OAAQ,CACJ5jB,QAAS,OACT2C,eAAgB,iBAEpBkhB,YAAa,GACb3K,UAC2B,UAAvBxY,EAAMsC,QAAQgK,KACR,CACIjK,MAAOrC,EAAMsC,QAAQE,UAAUU,KAC/BR,gBAAiBM,YAAQhD,EAAMsC,QAAQE,UAAU+jB,MAAO,MAE5D,CACIlkB,MAAOrC,EAAMsC,QAAQC,KAAKU,QAC1BP,gBAAiB1C,EAAMsC,QAAQE,UAAU6c,MAEvDsO,eAAgB,CACZC,OAAQ,EACRC,KAAM,gBACNxlB,OAAQ,EACR9I,QAAS,EACTwpB,SAAU,SACVnpB,QAAS,EACTuG,SAAU,WACV2nB,IAAK,GACLztB,MAAO,OAIA,SAAS80B,KACpB,IAAMtwB,EAAU1E,KADiB,EAEH4E,mBAAS,IAFN,mBAE1BqwB,EAF0B,KAEjBC,EAFiB,OAGTtwB,mBAAS,GAHA,mBAG1B0W,EAH0B,KAGpBC,EAHoB,OAID3W,mBAAS,IAJR,mBAI1B4W,EAJ0B,KAIhB+H,EAJgB,OAKP3e,mBAAS,GALF,mBAK1B6W,EAL0B,KAKnBC,EALmB,OAMP9W,mBAAS,IANF,mBAM1B4G,EAN0B,KAMnBoiB,EANmB,OAOHhpB,mBAAS,CAAC,KAAM,SAPb,mBAO1BipB,EAP0B,KAOjBC,EAPiB,OAQDlpB,mBAAS,IARR,mBAQ1B4nB,EAR0B,KAQhByB,EARgB,OASHrpB,oBAAS,GATN,mBAS1BmL,EAT0B,KASjBC,EATiB,OAUXpL,mBAAS,IAVE,mBAU1BqsB,EAV0B,KAUrBC,EAVqB,KAY3B3rB,EAAWC,eACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKvI,GAA5B,OACIqD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKvI,MACvD,CAACqD,IAGC4e,EAAW,WACbxZ,KAAIoG,KAAK,qBAAsB,CAC3BuK,KAAMA,EACNM,UAAWJ,EACXK,SAAUgS,EAAQzC,KAAK,OAEtBvgB,MAAK,SAAAC,GACF8iB,EAAS9iB,EAASC,KAAKS,OACvB0pB,EAAWpqB,EAASC,KAAK5H,OACzBuY,EAAS5Q,EAASC,KAAK0Q,OACvByV,EAAOpmB,EAASC,KAAKkmB,KACrBhD,EAAY,OAEfpiB,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,aAI1DnG,qBAAU,WACNue,MACD,CAAC7I,EAAME,EAAUqS,IAEpB,IA0EMM,EAAa,SAAAlmB,GAAE,OAA8B,IAA1BukB,EAASd,QAAQzjB,IAE1C,OACI,6BACI,yBAAKnC,UAAWpB,EAAQqe,QACpB,yBAAKjd,UAAWpB,EAAQse,aACpB,kBAACjW,GAAA,EAAD,CACI7K,MAAO,UACPmE,QAAS,kBAAM8d,KACf3d,QAAS,YAHb,kBAUR,kBAAC+G,GAAA,EAAD,CAAO3F,QAAM,EAAC9B,UAAWpB,EAAQ2U,gBAC5BmT,EAAShU,OAAS,GACf,kBAACtS,EAAA,EAAD,CAASJ,UAAWpB,EAAQ2T,WACxB,kBAAC9R,EAAA,EAAD,CACIuI,MAAO,CAAEoT,KAAM,YACfhgB,MAAM,UACNsE,QAAQ,aAHZ,sBAKSgmB,EAAShU,OALlB,uBAOA,kBAACoM,GAAA,EAAD,CAASljB,MAAM,wCACX,kBAACyE,EAAA,EAAD,CACIE,QAxER,WAChB2J,GAAW,GACXrF,KAAIoG,KAAK,uBAAwB,CAAE9I,GAAIukB,IAClC3hB,MAAK,WACFsZ,IACA7Z,EAAe,MAAO,QAAS,2BAAQ,cAE1CuB,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACFmF,GAAW,OA8DKgC,SAAUjC,EACV3J,aAAW,UAEX,kBAAC,KAAD,SAKhB,kBAACke,GAAA,EAAD,CAAgBxe,UAAWpB,EAAQ4H,WAC/B,kBAACkQ,GAAA,EAAD,CAAOpW,aAAW,eAAekI,KAAM,SACnC,kBAACmO,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAU5N,MAAO,CAAE5G,OAAQ,KACvB,kBAACyU,GAAA,EAAD,CAAWld,QAAQ,YACf,kBAAC+uB,GAAA,EAAD,CACIC,cACIjC,EAAShU,OAAS,GAClBgU,EAAShU,OAASyc,EAAQzc,OAE9BnF,QACI4hB,EAAQzc,OAAS,GACjBgU,EAAShU,SAAWyc,EAAQzc,OAEhC3Q,SAhFP,SAAAC,GACzB,GAAIA,EAAMgJ,OAAOuC,QAAjB,CACI,IAAMqb,EAAeuG,EAAQhuB,KAAI,SAAA0nB,GAAC,OAAIA,EAAE/a,MACxCqa,EAAYS,QAGhBT,EAAY,KA2EoB3Y,WAAY,CACR,aAAc,0BAI1B,kBAACqH,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,KAC1B,kBAACimB,GAAA,EAAD,CACIhsB,OAAuB,OAAfirB,EAAQ,GAChBhnB,UAAWgnB,EAAQ,GACnBxnB,QAAS,kBACLynB,EAAW,CACP,KACe,QAAfD,EAAQ,GACF,OACA,UARlB,IAaoB,OAAfA,EAAQ,GACL,0BACI/nB,UACIpB,EAAQ8oB,gBAGI,SAAfK,EAAQ,GACH,oBACA,oBAEV,OAGZ,kBAAClR,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,MAA9B,4BAGA,kBAACgU,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,KAA9B,gBAGA,kBAACgU,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,KAA9B,gBAGA,kBAACgU,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,MAA9B,4BAGA,kBAACgU,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,MAA9B,sBAGA,kBAACgU,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,MAA9B,4BAGA,kBAACgU,GAAA,EAAD,CAAW7N,MAAO,CAAEnG,SAAU,KAA9B,kBAKR,kBAACiU,GAAA,EAAD,KACKqY,EAAQhuB,KAAI,SAAA4V,GAAG,OACZ,kBAACH,GAAA,EAAD,CACI8H,OAAK,EACL/c,IAAKoV,EAAIjJ,GACTib,KAAK,WACLrC,SAAU2B,EAAWtR,EAAIjJ,KAEzB,kBAAC+I,GAAA,EAAD,CAAWld,QAAQ,YACf,kBAAC+uB,GAAA,EAAD,CACInoB,QAAS,SAAAyB,GAAK,OAzIlC,SAACA,EAAOsD,GACxB,IAAM0jB,EAAgBtC,EAASd,QAAQtgB,GACnC2jB,EAAc,IAEK,IAAnBD,EACAC,EAAcA,EAAYC,OAAOxC,EAAUphB,GAClB,IAAlB0jB,EACPC,EAAcA,EAAYC,OAAOxC,EAASyC,MAAM,IACzCH,IAAkBtC,EAAShU,OAAS,EAC3CuW,EAAcA,EAAYC,OAAOxC,EAASyC,MAAM,GAAI,IAC7CH,EAAgB,IACvBC,EAAcA,EAAYC,OACtBxC,EAASyC,MAAM,EAAGH,GAClBtC,EAASyC,MAAMH,EAAgB,KAIvCb,EAAYc,GAyH4BG,CAAYpnB,EAAO+U,EAAIjJ,KAE3BP,QAAS8a,EAAWtR,EAAIjJ,OAGhC,kBAAC+I,GAAA,EAAD,KAAYE,EAAIjJ,IAChB,kBAAC+I,GAAA,EAAD,CACI7N,MAAO,CAAEqiB,UAAW,cAEF,IAAjBtU,EAAIzY,MAAMwP,IAAY,uBACtBiJ,EAAIzY,MAAMwP,GAAK,GACZ,kBAACF,GAAA,EAAD,CACI5C,OAAQ,SACR5O,MAAM,UACNyR,KACI,QACAsd,EAAIpU,EAAIzY,MAAMwP,KACU,KAAvBiJ,EAAIzY,MAAMqrB,SACL,GACA,aACA5S,EAAIzY,MAAMqrB,WAGnB5S,EAAIzY,MAAMgtB,aAIvB,kBAACzU,GAAA,EAAD,KACKE,EAAIzY,MAAMwP,GAAK,IACXiJ,EAAIzY,MAAM+wB,MAAQ,eAAO,iBAElC,kBAACxY,GAAA,EAAD,KACKyY,KAAcvY,EAAIwY,SAEvB,kBAAC1Y,GAAA,EAAD,CACI7N,MAAO,CAAEqiB,UAAW,cAEnBtU,EAAIlO,aAET,kBAACgO,GAAA,EAAD,KACI,kBAACjJ,GAAA,EAAD,CACIC,KACI,sBACAkJ,EAAIzY,MAAMqsB,QAGbjlB,EAAMqR,EAAIzY,MAAMqsB,QACXjlB,EAAMqR,EAAIzY,MAAMqsB,QAAQtB,KACxB,iBAGd,kBAACxS,GAAA,EAAD,KACK,IAAI3E,KACD6E,EAAI6T,WACNC,qBACE,IACA,IAAI3Y,KACA6E,EAAI6T,WACNE,sBAEV,kBAACjU,GAAA,EAAD,KACI,kBAACiI,GAAA,EAAD,CAASljB,MAAO,wCACZ,kBAACyE,EAAA,EAAD,CACI6L,SAAUjC,EACV1J,QAAS,kBAhQhC4B,EAiQwC4U,EAAIjJ,GAhQ7D5D,GAAW,QACXrF,KAAIoG,KAAK,uBAAwB,CAAE9I,GAAI,CAACA,KACnC4C,MAAK,WACFsZ,IACA7Z,EAAe,MAAO,QAAS,2BAAQ,cAE1CuB,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACFmF,GAAW,MAXF,IAAA/H,GAmQuBqG,KAAM,SAEN,kBAAC,KAAD,QAGPuO,EAAIzY,MAAMwP,GAAK,GACZ,kBAACgR,GAAA,EAAD,CAASljB,MAAO,4BACZ,kBAACyE,EAAA,EAAD,CACI6L,SAAUjC,EACV1J,QAAS,kBA7PrC4B,EA8P4C4U,EAAIzY,MAAMwP,GA7PtE5D,GAAW,QACXrF,KAAIoG,KAAK,sBAAuB,CAAE9I,GAAI,CAACA,KAClC4C,MAAK,WACFsZ,IACA7Z,EAAe,MAAO,QAAS,iCAAS,cAE3CuB,OAAM,SAAAC,GACHxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACFmF,GAAW,MAXH,IAAA/H,GAgQ4BqG,KAAM,SAEN,kBAACgP,GAAA,EAAD,gBAUpC,kBAACyH,GAAA,EAAD,CACIC,mBAAoB,CAAC,GAAI,GAAI,GAAI,KACjCxW,UAAU,MACVwP,MAAOvC,EACPwJ,YAAazJ,EACbF,KAAMA,EAAO,EACb4J,aAAc,SAAC/T,EAAGgU,GAAJ,OAAU5J,EAAQ4J,EAAI,IACpCC,oBAAqB,SAAAjU,GACjBoS,EAAYpS,EAAEL,OAAO5D,OACrBqO,EAAQ,Q,yCC9WhC,IAAMvb,GAAYC,aAAW,SAAAJ,GAAK,MAAK,CACnCd,KAAM,CACFI,QAAS,QAEbO,QAAS,CACLiC,SAAU,EACVlC,QAAS,EACTkJ,SAAU,GAEd/G,QAAS/B,EAAMkC,OAAOH,YAGpB/B,GAAQ+e,KACV,CACIzc,QAAS,CACLK,WAAY,KAGpB8yB,SAGW,SAASC,KACpB,IAAM7wB,EAAU1E,KACVmF,EAAUC,eAFY,EAGJR,oBAAS,GAHL,mBAGrB4wB,EAHqB,KAGfC,EAHe,KAmB5B,OAdA7vB,qBAAU,WACN,IAAM2F,EAAOmqB,KAAKC,UAClB,GAAIpqB,GAAQA,EAAK+M,MACb,OAAsB,IAAlB/M,EAAK+M,MAAMrQ,QACX9C,EAAQkC,KAAK,cAGjBouB,GAAQ,GAGZtwB,EAAQkC,KAAK,YAEd,IAGC,kBAAC,IAAM+H,SAAP,KACI,kBAAC6P,GAAA,EAAD,CAAepf,MAAOA,IAClB,yBAAKiG,UAAWpB,EAAQ3F,MACpB,kBAAC62B,EAAA,EAAD,MACA,kBAAC,IAAD,MACCJ,GACG,kBAAC/wB,GAAD,CACI/E,QAAS,SAAA4D,GAAI,OACT,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAOA,KAAI,UAAKA,EAAL,SAAkBuyB,OAAK,GAC9B,kBAACzsB,GAAD,OAGJ,kBAAC,KAAD,CAAO9F,KAAI,UAAKA,EAAL,WACP,kBAACwM,GAAD,OAGJ,kBAAC,KAAD,CAAOxM,KAAI,UAAKA,EAAL,YACP,kBAAC4O,GAAD,OAGJ,kBAAC,KAAD,CAAO5O,KAAI,UAAKA,EAAL,UACP,kBAAC,GAAD,OAGJ,kBAAC,KAAD,CAAOA,KAAI,UAAKA,EAAL,YACP,kBAACgT,GAAD,OAGJ,kBAAC,KAAD,CAAOhT,KAAI,UAAKA,EAAL,SACP,kBAACkW,GAAD,OAGJ,kBAAC,KAAD,CAAOlW,KAAI,UAAKA,EAAL,WACP,kBAACkc,GAAD,OAGJ,kBAAC,KAAD,CAAOlc,KAAI,UAAKA,EAAL,WACP,kBAACmd,GAAD,OAGJ,kBAAC,KAAD,CAAOnd,KAAI,UAAKA,EAAL,WACP,kBAAC4d,GAAD,OAGJ,kBAAC,KAAD,CAAO5d,KAAI,UAAKA,EAAL,WAAoBuyB,OAAK,GAChC,kBAAC1S,GAAD,OAGJ,kBAAC,KAAD,CACI7f,KAAI,UAAKA,EAAL,qBACJuyB,OAAK,GAEL,kBAAC,GAAD,OAGJ,kBAAC,KAAD,CACIvyB,KAAI,UAAKA,EAAL,0BACJuyB,OAAK,GAEL,kBAAC5K,GAAD,OAGJ,kBAAC,KAAD,CAAO3nB,KAAI,UAAKA,EAAL,UAAmBuyB,OAAK,GAC/B,kBAAC,GAAD,OAGJ,kBAAC,KAAD,CAAOvyB,KAAI,UAAKA,EAAL,cAAuBuyB,OAAK,GACnC,kBAAC/J,GAAD,OAGJ,kBAAC,KAAD,CACIxoB,KAAI,UAAKA,EAAL,mBACJuyB,OAAK,GAEL,kBAAC7I,GAAD,OAGJ,kBAAC,KAAD,CAAO1pB,KAAI,UAAKA,EAAL,SAAkBuyB,OAAK,GAC9B,kBAAC,GAAD,OAGJ,kBAAC,KAAD,CAAOvyB,KAAI,UAAKA,EAAL,aAAsBuyB,OAAK,GAClC,kBAACrG,GAAD,OAGJ,kBAAC,KAAD,CAAOlsB,KAAI,UAAKA,EAAL,kBAA2BuyB,OAAK,GACvC,kBAAC9F,GAAD,OAGJ,kBAAC,KAAD,CAAOzsB,KAAI,UAAKA,EAAL,SAAkBuyB,OAAK,GAC9B,kBAAC1F,GAAD,OAGJ,kBAAC,KAAD,CAAO7sB,KAAI,UAAKA,EAAL,gBAAyBuyB,OAAK,GACrC,kBAAC/C,GAAD,OAGJ,kBAAC,KAAD,CAAOxvB,KAAI,UAAKA,EAAL,UAAmBuyB,OAAK,GAC/B,kBAAC,GAAD,OAGJ,kBAAC,KAAD,CAAOvyB,KAAI,UAAKA,EAAL,UAAmBuyB,OAAK,GAC/B,kBAACrE,GAAD,OAGJ,kBAAC,KAAD,CAAOluB,KAAI,UAAKA,EAAL,aAAsBuyB,OAAK,GAClC,kBAAC9D,GAAD,OAGJ,kBAAC,KAAD,CAAOzuB,KAAI,UAAKA,EAAL,SAAkBuyB,OAAK,GAC9B,kBAACzD,GAAD,OAGJ,kBAAC,KAAD,CAAO9uB,KAAI,UAAKA,EAAL,WAAoBuyB,OAAK,GAChC,kBAACb,GAAD","file":"static/js/9.089cb749.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport UserAvatar from \"../Navbar/UserAvatar\";\nimport {\n    Contacts,\n    Home,\n    Language,\n    Settings,\n    Mail,\n    SettingsEthernet,\n    AttachMoney,\n    Palette,\n    CloudDownload, Image, Storage, Group, Person, InsertDriveFile, Share, ShoppingCart, Assignment, ListAlt, Report\n} from \"@material-ui/icons\";\nimport { withStyles } from \"@material-ui/core\";\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport { useHistory, useLocation } from \"react-router\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\nimport pathHelper from \"../../utils/page\";\n\nconst ExpansionPanel = withStyles({\n    root: {\n        maxWidth: \"100%\",\n        boxShadow: \"none\",\n        \"&:not(:last-child)\": {\n            borderBottom: 0\n        },\n        \"&:before\": {\n            display: \"none\"\n        },\n        \"&$expanded\": { margin: 0 }\n    },\n    expanded: {}\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n    root: {\n        minHeight: 0,\n        padding: 0,\n\n        \"&$expanded\": {\n            minHeight: 0\n        }\n    },\n    content: {\n        maxWidth: \"100%\",\n        margin: 0,\n        display: \"block\",\n        \"&$expanded\": {\n            margin: \"0\"\n        }\n    },\n    expanded: {}\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles(theme => ({\n    root: {\n        display: \"block\",\n        padding: theme.spacing(0)\n    }\n}))(MuiExpansionPanelDetails);\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: \"flex\",\n        width: \"100%\"\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen\n        })\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen\n        })\n    },\n    menuButton: {\n        marginRight: 36\n    },\n    hide: {\n        display: \"none\"\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: \"nowrap\"\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen\n        })\n    },\n    drawerClose: {\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen\n        }),\n        overflowX: \"hidden\",\n        width: theme.spacing(7) + 1,\n        [theme.breakpoints.up(\"sm\")]: {\n            width: theme.spacing(9) + 1\n        }\n    },\n    title: {\n        flexGrow: 1\n    },\n    toolbar: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-end\",\n        padding: theme.spacing(0, 1),\n        ...theme.mixins.toolbar\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3)\n    },\n    sub: {\n        paddingLeft: 36,\n        color: theme.palette.text.secondary\n    },\n    subMenu: {\n        backgroundColor: theme.palette.background.default,\n        paddingTop:0,\n        paddingBottom:0,\n    },\n    active: {\n        backgroundColor: lighten(theme.palette.primary.main, 0.8),\n        color: theme.palette.primary.main,\n        \"&:hover\":{\n            backgroundColor: lighten(theme.palette.primary.main, 0.7),\n        },\n    },\n    activeText:{\n        fontWeight: 500,\n    },\n    activeIcon:{\n        color: theme.palette.primary.main,\n    }\n}));\n\nconst items = [\n    {\n        title: \"面板首页\",\n        icon: <Home />,\n        path: \"home\"\n    },\n    {\n        title: \"参数设置\",\n        icon: <Settings />,\n        sub: [\n            {\n                title: \"站点信息\",\n                path: \"basic\",\n                icon: <Language />\n            },\n            {\n                title: \"注册与登录\",\n                path: \"access\",\n                icon: <Contacts />\n            },\n            {\n                title: \"邮件\",\n                path: \"mail\",\n                icon: <Mail />\n            },\n            {\n                title: \"上传与下载\",\n                path: \"upload\",\n                icon: <SettingsEthernet />\n            },\n            {\n                title: \"增值服务\",\n                path: \"vas\",\n                icon: <AttachMoney />\n            },\n            {\n                title: \"外观\",\n                path: \"theme\",\n                icon: <Palette />\n            },\n            {\n                title: \"离线下载\",\n                path: \"aria2\",\n                icon: <CloudDownload />\n            },\n            {\n                title: \"图像处理\",\n                path: \"image\",\n                icon: <Image />\n            },\n        ]\n    },\n    {\n        title: \"存储策略\",\n        icon: <Storage />,\n        path: \"policy\"\n    },\n    {\n        title: \"用户组\",\n        icon: <Group />,\n        path: \"group\"\n    },\n    {\n        title: \"用户\",\n        icon: <Person />,\n        path: \"user\"\n    },\n    {\n        title: \"文件\",\n        icon: <InsertDriveFile />,\n        path: \"file\"\n    },\n    {\n        title: \"分享\",\n        icon: <Share />,\n        path: \"share\"\n    },\n    {\n        title: \"举报\",\n        icon: <Report />,\n        path: \"report\"\n    },\n    {\n        title: \"订单\",\n        icon: <ShoppingCart />,\n        path: \"order\"\n    },\n    {\n        title: \"持久任务\",\n        icon: <Assignment />,\n        sub: [\n            {\n                title: \"离线下载\",\n                path: \"download\",\n                icon: <CloudDownload />\n            },\n            {\n                title: \"常规任务\",\n                path: \"task\",\n                icon: <ListAlt />\n            },\n            ],\n    },\n];\n\nexport default function Dashboard({ content }) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = useState(!pathHelper.isMobile());\n    const [menuOpen, setMenuOpen] = useState(null);\n    const history = useHistory();\n    const location = useLocation();\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    const dispatch = useDispatch();\n    const SetSubTitle = useCallback(title => dispatch(changeSubTitle(title)), [\n        dispatch\n    ]);\n\n    useEffect(() => {\n        SetSubTitle(\"仪表盘\");\n    }, []);\n\n    useEffect(() => {\n        return () => {\n            SetSubTitle();\n        };\n    }, []);\n\n    const { path } = useRouteMatch();\n\n    return (\n        <div className={classes.root}>\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open\n                })}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, {\n                            [classes.hide]: open\n                        })}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title} noWrap>\n                        Cloudreve 仪表盘\n                    </Typography>\n                    <UserAvatar />\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                variant=\"permanent\"\n                className={clsx(classes.drawer, {\n                    [classes.drawerOpen]: open,\n                    [classes.drawerClose]: !open\n                })}\n                classes={{\n                    paper: clsx({\n                        [classes.drawerOpen]: open,\n                        [classes.drawerClose]: !open\n                    })\n                }}\n            >\n                <div className={classes.toolbar}>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === \"rtl\" ? (\n                            <ChevronRightIcon />\n                        ) : (\n                            <ChevronLeftIcon />\n                        )}\n                    </IconButton>\n                </div>\n                <Divider />\n                <List className={classes.noPadding}>\n                    {items.map(item => {\n                        if (item.path !== undefined) {\n                            return (\n                                <ListItem\n                                    onClick={() =>\n                                        history.push(\"/admin/\" + item.path)\n                                    }\n                                    button\n                                    className={clsx({\n                                        [classes.active]:\n                                        location.pathname.startsWith(\"/admin/\" + item.path)\n                                    })}\n                                    key={item.title}\n                                >\n                                    <ListItemIcon  className={clsx({\n                                        [classes.activeIcon]:\n                                            location.pathname.startsWith(\"/admin/\" + item.path)\n                                    })}>{item.icon}</ListItemIcon>\n                                    <ListItemText className={clsx({\n                                        [classes.activeText]:\n                                            location.pathname.startsWith(\"/admin/\" + item.path)\n                                    })} primary={item.title} />\n                                </ListItem>\n                            );\n                        }\n                        return (\n                            // eslint-disable-next-line react/jsx-key\n                            <ExpansionPanel\n                                square\n                                expanded={menuOpen === item.title}\n                                onChange={(event, isExpanded) => {\n                                    setMenuOpen(isExpanded ? item.title : null);\n                                }}\n                            >\n                                <ExpansionPanelSummary\n                                    aria-controls=\"panel1d-content\"\n                                    id=\"panel1d-header\"\n                                >\n                                    <ListItem button key={item.title}>\n                                        <ListItemIcon>{item.icon}</ListItemIcon>\n                                        <ListItemText primary={item.title} />\n                                    </ListItem>\n                                </ExpansionPanelSummary>\n                                <ExpansionPanelDetails>\n                                    <List className={classes.subMenu}>\n                                        {item.sub.map(sub => (\n                                            <ListItem\n                                                onClick={() =>\n                                                    history.push(\n                                                        \"/admin/\" + sub.path\n                                                    )\n                                                }\n                                                className={clsx({\n                                                    [classes.sub]: open,\n                                                    [classes.active]:\n                                                        location.pathname.startsWith(\"/admin/\" + sub.path)\n                                                })}\n                                                button\n                                                key={sub.title}\n                                            >\n                                                <ListItemIcon className={clsx({\n                                                    [classes.activeIcon]:\n                                                        location.pathname.startsWith(\"/admin/\" + sub.path)\n                                                })}>\n                                                    {sub.icon}\n                                                </ListItemIcon>\n                                                <ListItemText\n                                                    primary={sub.title}\n                                                />\n                                            </ListItem>\n                                        ))}\n                                    </List>\n                                </ExpansionPanelDetails>\n                            </ExpansionPanel>\n                        );\n                    })}\n                </List>\n            </Drawer>\n            <main className={classes.content}>\n                <div className={classes.toolbar} />\n                {content(path)}\n            </main>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {\n    LineChart,\n    Line,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend\n} from \"recharts\";\nimport ResponsiveContainer from \"recharts/lib/component/ResponsiveContainer\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport pathHelper from \"../../utils/page\";\nimport API from \"../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {\n    Description, Favorite,\n    FileCopy,\n    Forum,\n    GitHub,\n    Home,\n    Launch,\n    Lock,\n    People,\n    Public,\n    Telegram\n} from \"@material-ui/icons\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport { blue, green, red, yellow } from \"@material-ui/core/colors\";\nimport axios from \"axios\";\nimport TimeAgo from \"timeago-react\";\nimport Chip from \"@material-ui/core/Chip\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        padding: theme.spacing(3),\n        height: \"100%\"\n    },\n    logo: {\n        width: 70\n    },\n    logoContainer: {\n        padding: theme.spacing(3),\n        display: \"flex\"\n    },\n    title: {\n        marginLeft: 16\n    },\n    cloudreve: {\n        fontSize: 25,\n        color: theme.palette.text.secondary\n    },\n    version: {\n        color: theme.palette.text.hint\n    },\n    links: {\n        padding: theme.spacing(3)\n    },\n    iconRight: {\n        minWidth: 0\n    },\n    userIcon: {\n        backgroundColor: blue[100],\n        color: blue[600]\n    },\n    fileIcon: {\n        backgroundColor: yellow[100],\n        color: yellow[800]\n    },\n    publicIcon: {\n        backgroundColor: green[100],\n        color: green[800]\n    },\n    secretIcon: {\n        backgroundColor: red[100],\n        color: red[800]\n    }\n}));\n\nexport default function Index() {\n    const classes = useStyles();\n    const [lineData, setLineData] = useState([]);\n    const [news, setNews] = useState([]);\n    const [newsUsers, setNewsUsers] = useState({});\n    const [open, setOpen] = React.useState(false);\n    const [siteURL, setSiteURL] = React.useState(\"\");\n    const [statistics, setStatistics] = useState({\n        fileTotal: 0,\n        userTotal: 0,\n        publicShareTotal: 0,\n        secretShareTotal: 0\n    });\n    const [version, setVersion] = useState({\n        backend: \"-\"\n    });\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const ResetSiteURL = ()=>{\n        setOpen(false);\n        API.patch(\"/admin/setting\",{\n            options:[{\n                key:\"siteURL\",\n                value:window.location.origin,\n            }],\n        })\n            .then(() => {\n                setSiteURL(window.location.origin);\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }\n\n    useEffect(() => {\n        API.get(\"/admin/summary\")\n            .then(response => {\n                const data = [];\n                response.data.date.forEach((v, k) => {\n                    data.push({\n                        name: v,\n                        file: response.data.files[k],\n                        user: response.data.users[k],\n                        share: response.data.shares[k]\n                    });\n                });\n                setLineData(data);\n                setStatistics({\n                    fileTotal: response.data.fileTotal,\n                    userTotal: response.data.userTotal,\n                    publicShareTotal: response.data.publicShareTotal,\n                    secretShareTotal: response.data.secretShareTotal\n                });\n                setVersion(response.data.version);\n                setSiteURL(response.data.siteURL);\n                if (response.data.siteURL === \"\" || response.data.siteURL !== window.location.origin){\n                    setOpen(true);\n                }\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n\n        axios\n            .get(\"/api/v3/admin/news\")\n            .then(response => {\n                setNews(response.data.data);\n                const res = {};\n                response.data.included.forEach(v => {\n                    if (v.type === \"users\") {\n                        res[v.id] = v.attributes;\n                    }\n                });\n                setNewsUsers(res);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, []);\n\n    return (\n        <Grid container spacing={3}>\n            <Dialog\n                open={open}\n                onClose={()=>setOpen(false)}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{\"确定站点URL设置\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        <Typography>\n                            {siteURL === \"\" && \"您尚未设定站点URL，是否要将其设定为当前的 \"+ window.location.origin + \" ?\"}\n                            {siteURL !== \"\" && \"您设置的站点URL与当前实际不一致，是否要将其设定为当前的 \"+ window.location.origin + \" ?\"}\n                        </Typography>\n                        <Typography>\n                            此设置非常重要，请确保其与您站点的实际地址一致。你可以在 参数设置 - 站点信息 中更改此设置。\n                        </Typography>\n                        </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={()=>setOpen(false)} color=\"default\">\n                        忽略\n                    </Button>\n                    <Button onClick={()=>ResetSiteURL()} color=\"primary\">\n                        更改\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <Grid alignContent={\"stretch\"} item xs={12} md={8} lg={9}>\n                <Paper className={classes.paper}>\n                    <Typography variant=\"button\" display=\"block\" gutterBottom>\n                        趋势\n                    </Typography>\n                    <ResponsiveContainer\n                        width=\"100%\"\n                        aspect={pathHelper.isMobile() ? 4.0 / 3.0 : 3.0 / 1.0}\n                    >\n                        <LineChart width={1200} height={300} data={lineData}>\n                            <CartesianGrid strokeDasharray=\"3 3\" />\n                            <XAxis dataKey=\"name\" />\n                            <YAxis />\n                            <Tooltip />\n                            <Legend />\n                            <Line\n                                name={\"文件\"}\n                                type=\"monotone\"\n                                dataKey=\"file\"\n                                stroke=\"#3f51b5\"\n                            />\n                            <Line\n                                name={\"用户\"}\n                                type=\"monotone\"\n                                dataKey=\"user\"\n                                stroke=\"#82ca9d\"\n                            />\n                            <Line\n                                name={\"分享\"}\n                                type=\"monotone\"\n                                dataKey=\"share\"\n                                stroke=\"#e91e63\"\n                            />\n                        </LineChart>\n                    </ResponsiveContainer>\n                </Paper>\n            </Grid>\n            <Grid item xs={12} md={4} lg={3}>\n                <Paper className={classes.paper}>\n                    <Typography variant=\"button\" display=\"block\" gutterBottom>\n                        总计\n                    </Typography>\n                    <Divider />\n                    <List className={classes.root}>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar className={classes.userIcon}>\n                                    <People />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={statistics.userTotal}\n                                secondary=\"注册用户\"\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar className={classes.fileIcon}>\n                                    <FileCopy />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={statistics.fileTotal}\n                                secondary=\"文件总数\"\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar className={classes.publicIcon}>\n                                    <Public />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={statistics.publicShareTotal}\n                                secondary=\"公开分享总数\"\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar className={classes.secretIcon}>\n                                    <Lock />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={statistics.secretShareTotal}\n                                secondary=\"私密分享总数\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n            <Grid item xs={12} md={4} lg={3}>\n                <Paper>\n                    <div className={classes.logoContainer}>\n                        <img\n                            className={classes.logo}\n                            src={\"https://cdn.jsdelivr.net/gh/742481030/cloudreve-static@0.3.1.1/static/img/cloudreve.svg\"}\n                        />\n                        <div className={classes.title}>\n                            <Typography className={classes.cloudreve}>\n                                Cloudreve\n                            </Typography>\n                            <Typography className={classes.version}>\n                                {version.backend} {version.is_pro === \"true\" && <Chip size=\"small\" label=\"V1.1.1-Zephyr-Pro\" />}\n                            </Typography>\n                        </div>\n                    </div>\n                    <Divider />\n                    <div>\n                        <List component=\"nav\" aria-label=\"main mailbox folders\">\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    window.open(\"https://cloudreve.org\")\n                                }\n                            >\n                                <ListItemIcon>\n                                    <Home />\n                                </ListItemIcon>\n                                <ListItemText primary=\"主页\" />\n                                <ListItemIcon className={classes.iconRight}>\n                                    <Launch />\n                                </ListItemIcon>\n                            </ListItem>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    window.open(\n                                        \"https://github.com/cloudreve/cloudreve\"\n                                    )\n                                }\n                            >\n                                <ListItemIcon>\n                                    <GitHub />\n                                </ListItemIcon>\n                                <ListItemText primary=\"GitHub\" />\n                                <ListItemIcon className={classes.iconRight}>\n                                    <Launch />\n                                </ListItemIcon>\n                            </ListItem>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    window.open(\n                                        \"https://docs.cloudreve.org/\"\n                                    )\n                                }\n                            >\n                                <ListItemIcon>\n                                    <Description />\n                                </ListItemIcon>\n                                <ListItemText primary=\"文档\" />\n                                <ListItemIcon className={classes.iconRight}>\n                                    <Launch />\n                                </ListItemIcon>\n                            </ListItem>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    window.open(\"https://forum.cloudreve.org\")\n                                }\n                            >\n                                <ListItemIcon>\n                                    <Forum />\n                                </ListItemIcon>\n                                <ListItemText primary=\"讨论社区\" />\n                                <ListItemIcon className={classes.iconRight}>\n                                    <Launch />\n                                </ListItemIcon>\n                            </ListItem>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    window.open(\n                                        \"https://t.me/cloudreve_official\"\n                                    )\n                                }\n                            >\n                                <ListItemIcon>\n                                    <Telegram />\n                                </ListItemIcon>\n                                <ListItemText primary=\"Telegram 群组\" />\n                                <ListItemIcon className={classes.iconRight}>\n                                    <Launch />\n                                </ListItemIcon>\n                            </ListItem>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    window.open(\n                                        \"https://docs.cloudreve.org/use/pro/jie-shao\"\n                                    )\n                                }\n                            >\n                                <ListItemIcon style={{color:\"#ff789d\"}}>\n                                    <Favorite />\n                                </ListItemIcon>\n                                <ListItemText primary=\"捐助开发者\" />\n                                <ListItemIcon className={classes.iconRight}>\n                                    <Launch />\n                                </ListItemIcon>\n                            </ListItem>\n                        </List>\n                    </div>\n                </Paper>\n            </Grid>\n            <Grid item xs={12} md={8} lg={9}>\n                <Paper className={classes.paper}>\n                    <List>\n                        {news && news.map((v) => (\n                            <>\n                                <ListItem button alignItems=\"flex-start\"\n                                          onClick={()=>window.open(\"https://forum.cloudreve.org/d/\" + v.id)}\n                                >\n                                    <ListItemAvatar>\n                                        <Avatar\n                                            alt=\"Travis Howard\"\n                                            src={\n                                                newsUsers[\n                                                    v.relationships.startUser\n                                                        .data.id\n                                                ] &&\n                                                newsUsers[\n                                                    v.relationships.startUser\n                                                        .data.id\n                                                ].avatarUrl\n                                            }\n                                        />\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={v.attributes.title}\n                                        secondary={\n                                            <React.Fragment>\n                                                <Typography\n                                                    component=\"span\"\n                                                    variant=\"body2\"\n                                                    className={classes.inline}\n                                                    color=\"textPrimary\"\n                                                >\n                                                    {newsUsers[\n                                                        v.relationships\n                                                            .startUser.data.id\n                                                    ] &&\n                                                        newsUsers[\n                                                            v.relationships\n                                                                .startUser.data\n                                                                .id\n                                                        ].username}{\" \"}\n                                                </Typography>\n                                                发表于{\" \"}\n                                                <TimeAgo\n                                                    datetime={v.attributes.startTime}\n                                                    locale='zh_CN'\n                                                />\n                                            </React.Fragment>\n                                        }\n                                    />\n                                </ListItem>\n                                <Divider />\n                            </>\n                        ))}\n                    </List>\n                </Paper>\n            </Grid>\n        </Grid>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Input from \"@material-ui/core/Input\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    }\n}));\n\nexport default function SiteInformation() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [options, setOptions] = useState({\n        siteURL: \"\",\n        siteName: \"\",\n        siteTitle: \"\",\n        siteDes: \"\",\n        siteICPId: \"\",\n        siteScript: \"\",\n        pwa_small_icon: \"\",\n        pwa_medium_icon: \"\",\n        pwa_large_icon: \"\",\n        pwa_display: \"\",\n        pwa_theme_color: \"\",\n        pwa_background_color: \"\"\n    });\n\n    const handleChange = name => event => {\n        setOptions({\n            ...options,\n            [name]: event.target.value\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: Object.keys(options)\n        })\n            .then(response => {\n                setOptions(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n\n    const submit = e => {\n        e.preventDefault();\n        setLoading(true);\n        const option = [];\n        Object.keys(options).forEach(k=>{\n            option.push({\n                key:k,\n                value:options[k],\n            });\n        })\n        API.patch(\"/admin/setting\",{\n            options:option,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            }).then(()=>{\n                setLoading(false);\n        });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        基本信息\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    主标题\n                                </InputLabel>\n                                <Input\n                                    value={options.siteName}\n                                    onChange={handleChange(\"siteName\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    站点的主标题\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    副标题\n                                </InputLabel>\n                                <Input\n                                    value={options.siteTitle}\n                                    onChange={handleChange(\"siteTitle\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    站点的副标题\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    站点描述\n                                </InputLabel>\n                                <Input\n                                    value={options.siteDes}\n                                    onChange={handleChange(\"siteDes\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    站点描述信息，可能会在分享页面摘要内展示\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    站点URL\n                                </InputLabel>\n                                <Input\n                                    type={\"url\"}\n                                    value={options.siteURL}\n                                    onChange={handleChange(\"siteURL\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    非常重要，请确保与实际情况一致。使用云存储策略、支付平台时，请填入可以被外网访问的地址。\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    网站备案号\n                                </InputLabel>\n                                <Input\n                                    value={options.siteICPId}\n                                    onChange={handleChange(\"siteICPId\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    工信部网站ICP备案号\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    页脚代码\n                                </InputLabel>\n                                <Input\n                                    multiline\n                                    value={options.siteScript}\n                                    onChange={handleChange(\"siteScript\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    在页面底部插入的自定义HTML代码\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        渐进式应用 (PWA)\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    小图标\n                                </InputLabel>\n                                <Input\n                                    value={options.pwa_small_icon}\n                                    onChange={handleChange(\"pwa_small_icon\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    扩展名为 ico 的小图标地址\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    中图标\n                                </InputLabel>\n                                <Input\n                                    value={options.pwa_medium_icon}\n                                    onChange={handleChange(\"pwa_medium_icon\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    192x192 的中等图标地址，png 格式\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    大图标\n                                </InputLabel>\n                                <Input\n                                    value={options.pwa_large_icon}\n                                    onChange={handleChange(\"pwa_large_icon\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    512x512 的大图标地址，png 格式\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    展示模式\n                                </InputLabel>\n                                <Select\n                                    value={options.pwa_display}\n                                    onChange={handleChange(\"pwa_display\")}\n                                >\n\n                                    <MenuItem value={\"fullscreen\"}>\n                                        fullscreen\n                                    </MenuItem>\n                                    <MenuItem value={\"standalone\"}>\n                                        standalone\n                                    </MenuItem>\n                                    <MenuItem value={\"minimal-ui\"}>\n                                        minimal-ui\n                                    </MenuItem>\n                                    <MenuItem value={\"browser\"}>\n                                        browser\n                                    </MenuItem>\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    PWA 应用添加后的展示模式\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    主题色\n                                </InputLabel>\n                                <Input\n                                    value={options.pwa_theme_color}\n                                    onChange={handleChange(\"pwa_theme_color\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    CSS 色值，影响 PWA\n                                    启动画面上状态栏、内容页中状态栏、地址栏的颜色\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    背景色\n                                </InputLabel>\n                                <Input\n                                    value={options.pwa_background_color}\n                                    onChange={handleChange(\n                                        \"pwa_background_color\"\n                                    )}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    CSS 色值\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\n\nexport default function AlertDialog({title, msg, open, onClose }) {\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n                {title}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    <Typography>\n                        {msg}\n                    </Typography>\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"primary\">\n                    知道了\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","    import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Input from \"@material-ui/core/Input\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport AlertDialog from \"../Dialogs/Alert\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Link from \"@material-ui/core/Link\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    }\n}));\n\nexport default function Access() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [options, setOptions] = useState({\n        register_enabled: \"1\",\n        default_group: \"1\",\n        email_active: \"0\",\n        login_captcha: \"0\",\n        reg_captcha: \"0\",\n        forget_captcha: \"0\",\n        qq_login: \"0\",\n        qq_direct_login: \"0\",\n        qq_login_id: \"\",\n        qq_login_key: \"\",\n        authn_enabled: \"0\",\n        captcha_IsUseReCaptcha: \"0\",\n        captcha_ReCaptchaKey: \"defaultKey\",\n        captcha_ReCaptchaSecret: \"defaultSecret\"\n    });\n    const [siteURL, setSiteURL] = useState(\"\");\n    const [groups, setGroups] = useState([]);\n    const [httpAlert, setHttpAlert] = useState(false);\n\n    const handleChange = name => event => {\n        let value = event.target.value;\n        if (event.target.checked !== undefined) {\n            value = event.target.checked ? \"1\" : \"0\";\n        }\n        setOptions({\n            ...options,\n            [name]: value\n        });\n    };\n\n    const handleInputChange = name => event => {\n        const value = event.target.value;\n        setOptions({\n            ...options,\n            [name]: value\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: [...Object.keys(options), \"siteURL\"]\n        })\n            .then(response => {\n                setSiteURL(response.data.siteURL);\n                delete response.data.siteURL;\n                setOptions(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n\n        API.get(\"/admin/groups\")\n            .then(response => {\n                setGroups(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const submit = e => {\n        e.preventDefault();\n        setLoading(true);\n        const option = [];\n        Object.keys(options).forEach(k => {\n            option.push({\n                key: k,\n                value: options[k]\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <AlertDialog\n                title={\"提示\"}\n                msg={\n                    \"Web Authn 需要您的站点启用 HTTPS，并确认 参数设置 - 站点信息 - 站点URL 也使用了 HTTPS 后才能开启。\"\n                }\n                onClose={() => setHttpAlert(false)}\n                open={httpAlert}\n            />\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        注册与登录\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.register_enabled === \"1\"\n                                            }\n                                            onChange={handleChange(\n                                                \"register_enabled\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"允许新用户注册\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    关闭后，无法再通过前台注册新的用户\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.email_active === \"1\"\n                                            }\n                                            onChange={handleChange(\n                                                \"email_active\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"邮件激活\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    开启后，新用户注册需要点击邮件中的激活链接才能完成。请确认邮件发送设置是否正确，否则激活邮件无法送达\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.reg_captcha === \"1\"\n                                            }\n                                            onChange={handleChange(\n                                                \"reg_captcha\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"注册验证码\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    是否启用注册表单验证码\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.login_captcha === \"1\"\n                                            }\n                                            onChange={handleChange(\n                                                \"login_captcha\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"登录验证码\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    是否启用登录表单验证码\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.forget_captcha === \"1\"\n                                            }\n                                            onChange={handleChange(\n                                                \"forget_captcha\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"找回密码验证码\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    是否启用找回密码表单验证码\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.captcha_IsUseReCaptcha ===\n                                                \"1\"\n                                            }\n                                            onChange={handleChange(\n                                                \"captcha_IsUseReCaptcha\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"使用 reCaptcha V2 验证码\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    是否使用 reCaptcha V2 验证码\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        {options.captcha_IsUseReCaptcha === \"1\" && (\n                            <>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            Site KEY\n                                        </InputLabel>\n                                        <Input\n                                            required\n                                            value={options.captcha_ReCaptchaKey}\n                                            onChange={handleInputChange(\n                                                \"captcha_ReCaptchaKey\"\n                                            )}\n                                        />\n                                        <FormHelperText id=\"component-helper-text\">\n                                            <Link\n                                                href={\n                                                    \"https://www.google.com/recaptcha/admin/create\"\n                                                }\n                                                target={\"_blank\"}\n                                            >\n                                                应用管理页面\n                                            </Link>{\" \"}\n                                            获取到的的 网站密钥\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            Secret\n                                        </InputLabel>\n                                        <Input\n                                            required\n                                            value={\n                                                options.captcha_ReCaptchaSecret\n                                            }\n                                            onChange={handleInputChange(\n                                                \"captcha_ReCaptchaSecret\"\n                                            )}\n                                        />\n                                        <FormHelperText id=\"component-helper-text\">\n                                            <Link\n                                                href={\n                                                    \"https://www.google.com/recaptcha/admin/create\"\n                                                }\n                                                target={\"_blank\"}\n                                            >\n                                                应用管理页面\n                                            </Link>{\" \"}获取到的的 秘钥\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n                            </>\n                        )}\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.authn_enabled === \"1\"\n                                            }\n                                            onChange={e => {\n                                                if (\n                                                    !siteURL.startsWith(\n                                                        \"https://\"\n                                                    )\n                                                ) {\n                                                    setHttpAlert(true);\n                                                    return;\n                                                }\n                                                handleChange(\"authn_enabled\")(\n                                                    e\n                                                );\n                                            }}\n                                        />\n                                    }\n                                    label=\"Web Authn\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    是否允许用户使用绑定的外部验证器登录，站点必须启动\n                                    HTTPS 才能使用。\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    默认用户组\n                                </InputLabel>\n                                <Select\n                                    value={options.default_group}\n                                    onChange={handleInputChange(\n                                        \"default_group\"\n                                    )}\n                                    required\n                                >\n                                    {groups.map(v => {\n                                        if (v.ID === 3) {\n                                            return null;\n                                        }\n                                        return (\n                                            <MenuItem\n                                                key={v.ID}\n                                                value={v.ID.toString()}\n                                            >\n                                                {v.Name}\n                                            </MenuItem>\n                                        );\n                                    })}\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户注册后的初始用户组\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        QQ互联\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <Alert severity=\"info\">创建应用时，回调地址请填写：{siteURL.endsWith(\"/\") ? (siteURL + \"#/login/qq\"):(siteURL + \"/#/login/qq\")}</Alert>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={options.qq_login === \"1\"}\n                                            onChange={handleChange(\"qq_login\")}\n                                        />\n                                    }\n                                    label=\"开启QQ互联\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    是否允许绑定QQ、使用QQ登录本站\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        {options.qq_login === \"1\" && (\n                            <>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <FormControlLabel\n                                            control={\n                                                <Switch\n                                                    checked={\n                                                        options.qq_direct_login ===\n                                                        \"1\"\n                                                    }\n                                                    onChange={handleChange(\n                                                        \"qq_direct_login\"\n                                                    )}\n                                                />\n                                            }\n                                            label=\"未绑定时可直接登录\"\n                                        />\n                                        <FormHelperText id=\"component-helper-text\">\n                                            开启后，如果用户使用了QQ登录，但是没有已绑定的注册用户，系统会为其创建用户并登录。这种方式创建的用户日后只能使用QQ登录。\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            APP ID\n                                        </InputLabel>\n                                        <Input\n                                            required\n                                            value={options.qq_login_id}\n                                            onChange={handleInputChange(\n                                                \"qq_login_id\"\n                                            )}\n                                        />\n                                        <FormHelperText id=\"component-helper-text\">\n                                            应用管理页面获取到的的 APP ID\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            APP KEY\n                                        </InputLabel>\n                                        <Input\n                                            required\n                                            value={options.qq_login_key}\n                                            onChange={handleInputChange(\n                                                \"qq_login_key\"\n                                            )}\n                                        />\n                                        <FormHelperText id=\"component-helper-text\">\n                                            应用管理页面获取到的的 APP KEY\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n                            </>\n                        )}\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Input from \"@material-ui/core/Input\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../middleware/Api\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    },\n    buttonMargin: {\n        marginLeft: 8\n    }\n}));\n\nexport default function Mail() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [test, setTest] = useState(false);\n    const [tesInput, setTestInput] = useState(\"\");\n    const [options, setOptions] = useState({\n        fromName: \"\",\n        fromAdress: \"\",\n        smtpHost: \"\",\n        smtpPort: \"\",\n        replyTo: \"\",\n        smtpUser: \"\",\n        smtpPass: \"\",\n        smtpEncryption:\"\",\n        mail_keepalive: \"30\",\n        over_used_template: \"\",\n        mail_activation_template: \"\",\n        mail_reset_pwd_template: \"\"\n    });\n\n    const handleChange = name => event => {\n        setOptions({\n            ...options,\n            [name]: event.target.value\n        });\n    };\n\n    const handleCheckChange = name => event => {\n        let value = event.target.value;\n        if (event.target.checked !== undefined) {\n            value = event.target.checked ? \"1\" : \"0\";\n        }\n        setOptions({\n            ...options,\n            [name]: value\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: Object.keys(options)\n        })\n            .then(response => {\n                setOptions(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const sendTestMail = () => {\n        setLoading(true);\n        API.post(\"/admin/mailTest\", {\n            to: tesInput\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"测试邮件已发送\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const reload = () => {\n        API.get(\"/admin/reload/email\")\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            .then(() => {})\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            .then(() => {});\n    };\n\n    const submit = e => {\n        e.preventDefault();\n        setLoading(true);\n        const option = [];\n        Object.keys(options).forEach(k => {\n            option.push({\n                key: k,\n                value: options[k]\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\n                reload();\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <Dialog\n                open={test}\n                onClose={() => setTest(false)}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">发件测试</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        <Typography>\n                            发送测试邮件前，请先保存已更改的邮件设置；\n                        </Typography>\n                        <Typography>\n                            邮件发送结果不会立即反馈，如果您长时间未收到测试邮件，请检查\n                            Cloudreve 在终端输出的错误日志。\n                        </Typography>\n                    </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"收件人地址\"\n                        value={tesInput}\n                        onChange={e => setTestInput(e.target.value)}\n                        type=\"email\"\n                        fullWidth\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setTest(false)} color=\"default\">\n                        取消\n                    </Button>\n                    <Button\n                        onClick={() => sendTestMail()}\n                        disabled={loading}\n                        color=\"primary\"\n                    >\n                        发送\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        发信\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    发件人名\n                                </InputLabel>\n                                <Input\n                                    value={options.fromName}\n                                    onChange={handleChange(\"fromName\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    邮件中展示的发件人姓名\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    发件人邮箱\n                                </InputLabel>\n                                <Input\n                                    type={\"email\"}\n                                    required\n                                    value={options.fromAdress}\n                                    onChange={handleChange(\"fromAdress\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    发件邮箱的地址\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    SMTP 服务器\n                                </InputLabel>\n                                <Input\n                                    value={options.smtpHost}\n                                    onChange={handleChange(\"smtpHost\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    发件服务器地址，不含端口号\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    SMTP 端口\n                                </InputLabel>\n                                <Input\n                                    inputProps={{ min: 1 ,step:1}}\n                                    type={\"number\"}\n                                    value={options.smtpPort}\n                                    onChange={handleChange(\"smtpPort\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    发件服务器地址端口号\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    SMTP 用户名\n                                </InputLabel>\n                                <Input\n                                    value={options.smtpUser}\n                                    onChange={handleChange(\"smtpUser\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    发信邮箱用户名，一般与邮箱地址相同\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    SMTP 密码\n                                </InputLabel>\n                                <Input\n                                    type={\"password\"}\n                                    value={options.smtpPass}\n                                    onChange={handleChange(\"smtpPass\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    发信邮箱密码\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    回信邮箱\n                                </InputLabel>\n                                <Input\n                                    value={options.replyTo}\n                                    onChange={handleChange(\"replyTo\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户回复系统发送的邮件时，用于接收回信的邮箱\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.smtpEncryption === \"1\"\n                                            }\n                                            onChange={handleCheckChange(\n                                                \"smtpEncryption\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"使用加密连接\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    是否使用SSL加密连接\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    SMTP 连接有效期 (秒)\n                                </InputLabel>\n                                <Input\n                                    inputProps={{ min: 1 ,step:1}}\n                                    type={\"number\"}\n                                    value={options.mail_keepalive}\n                                    onChange={handleChange(\"mail_keepalive\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    有效期内建立的 SMTP\n                                    连接会被新邮件发送请求复用\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        邮件模板\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    新用户激活\n                                </InputLabel>\n                                <Input\n                                    value={options.mail_activation_template}\n                                    onChange={handleChange(\n                                        \"mail_activation_template\"\n                                    )}\n                                    multiline\n                                    rowsMax=\"10\"\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    新用户注册后激活邮件的模板\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    超额提醒\n                                </InputLabel>\n                                <Input\n                                    value={options.over_used_template}\n                                    onChange={handleChange(\n                                        \"over_used_template\"\n                                    )}\n                                    multiline\n                                    rowsMax=\"10\"\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户因增值服务过期，容量超出限制后发送的提醒邮件模板\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    重置密码\n                                </InputLabel>\n                                <Input\n                                    value={options.mail_reset_pwd_template}\n                                    onChange={handleChange(\n                                        \"mail_reset_pwd_template\"\n                                    )}\n                                    multiline\n                                    rowsMax=\"10\"\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    密码重置邮件模板\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                    {\"   \"}\n                    <Button\n                        className={classes.buttonMargin}\n                        variant={\"outlined\"}\n                        color={\"primary\"}\n                        onClick={() => setTest(true)}\n                    >\n                        发送测试邮件\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React, {useCallback, useState} from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {useDispatch} from \"react-redux\";\nimport {toggleSnackbar} from \"../../../actions\";\n\nconst unitTransform = (v)=>{\n    if(v<1024){\n        return [Math.round(v),1]\n    }\n    if(v<1024*1024){\n        return [Math.round(v/1024),1024]\n    }\n    if(v<1024*1024*1024){\n        return [Math.round(v/(1024*1024)),1024*1024]\n    }\n    if(v<1024*1024*1024*1024){\n        return [Math.round(v/(1024*1024*1024)),1024*1024*1024]\n    }\n    return [Math.round(v/(1024*1024*1024*1024)),1024*1024*1024*1024]\n}\n\nexport default function SizeInput({onChange,min,value,required,label,max,suffix}){\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n\n    const [unit,setUnit] = useState(1);\n    let first = true;\n\n    const transform = useCallback(()=>{\n        const res = unitTransform(value);\n        if(first && value !== 0){\n            setUnit(res[1]);\n            first = false;\n        }\n        return res;\n    },[value]);\n\n    return (\n        <FormControl>\n            <InputLabel htmlFor=\"component-helper\">\n                {label}\n            </InputLabel>\n            <Input\n                style={{width:200,}}\n                value={transform()[0]}\n                type={\"number\"}\n                inputProps={{min:min,step:1}}\n                onChange={e=>{\n                    if (e.target.value * unit < max){\n                        onChange({\n                            target:{value:(e.target.value * unit).toString()}\n                        })\n                    }else{\n                        ToggleSnackbar(\"top\", \"right\", \"超出最大尺寸限制\", \"warning\");\n                    }\n\n                }}\n                required = {required}\n                endAdornment={\n                    <InputAdornment position=\"end\">\n                        <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            value={unit}\n                            onChange={(e)=>{\n                                if (transform()[0] * e.target.value < max){\n                                    onChange({\n                                        target:{value:(transform()[0] * e.target.value).toString()}\n                                    })\n                                    setUnit(e.target.value);\n                                }else{\n                                    ToggleSnackbar(\"top\", \"right\", \"超出最大尺寸限制\", \"warning\");\n                                }\n\n                            }}\n                        >\n                            <MenuItem value={1}>B{suffix && suffix}</MenuItem>\n                            <MenuItem value={1024}>KB{suffix && suffix}</MenuItem>\n                            <MenuItem value={1024*1024}>MB{suffix && suffix}</MenuItem>\n                            <MenuItem value={1024*1024*1024}>GB{suffix && suffix}</MenuItem>\n                            <MenuItem value={1024*1024*1024*1024}>TB{suffix && suffix}</MenuItem>\n                        </Select>\n                    </InputAdornment>\n                }\n            />\n        </FormControl>\n    )\n}","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Input from \"@material-ui/core/Input\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport SizeInput from \"../Common/SizeInput\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    }\n}));\n\nexport default function UploadDownload() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [options, setOptions] = useState({\n        max_worker_num: \"1\",\n        max_parallel_transfer:\"1\",\n        temp_path:\"\",\n        maxEditSize:\"0\",\n        onedrive_chunk_retries:\"0\",\n        archive_timeout:\"0\",\n        download_timeout:\"0\",\n        preview_timeout:\"0\",\n        doc_preview_timeout:\"0\",\n        upload_credential_timeout:\"0\",\n        upload_session_timeout:\"0\",\n        slave_api_timeout:\"0\",\n        onedrive_monitor_timeout:\"0\",\n        share_download_session_timeout:\"0\",\n        onedrive_callback_check:\"0\",\n        reset_after_upload_failed:\"0\",\n        onedrive_source_timeout:\"0\",\n\n    });\n\n    const handleCheckChange = name => event => {\n        const value= event.target.checked ? \"1\" : \"0\";\n        setOptions({\n            ...options,\n            [name]: value\n        });\n    };\n\n    const handleChange = name => event => {\n        setOptions({\n            ...options,\n            [name]: event.target.value\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: Object.keys(options)\n        })\n            .then(response => {\n                setOptions(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n\n    const submit = e => {\n        e.preventDefault();\n        setLoading(true);\n        const option = [];\n        Object.keys(options).forEach(k=>{\n            option.push({\n                key:k,\n                value:options[k],\n            });\n        })\n        API.patch(\"/admin/setting\",{\n            options:option,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            }).then(()=>{\n                setLoading(false);\n        });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        存储与传输\n                    </Typography>\n                    <div className={classes.formContainer}>\n\n                        <div className={classes.form}>\n                            <FormControl >\n                                <InputLabel htmlFor=\"component-helper\">\n                                    Worker 数量\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:1,\n                                        step:1,\n                                    }}\n                                    value={options.max_worker_num}\n                                    onChange={handleChange(\"max_worker_num\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    任务队列最多并行执行的任务数，保存后需要重启 Cloudreve 生效\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    中转并行传输\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:1,\n                                        step:1,\n                                    }}\n                                    value={options.max_parallel_transfer}\n                                    onChange={handleChange(\"max_parallel_transfer\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    任务队列中转任务传输时，最大并行协程数\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    临时目录\n                                </InputLabel>\n                                <Input\n                                    value={options.temp_path}\n                                    onChange={handleChange(\"temp_path\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    用于存放打包下载、解压缩、压缩等任务产生的临时文件的目录路径\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <SizeInput\n                                    value={options.maxEditSize}\n                                    onChange={handleChange(\"maxEditSize\")}\n                                    required\n                                    min={0}\n                                    max={2147483647}\n                                    label={\"文本文件在线编辑大小\"}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    文本文件可在线编辑的最大大小，超出此大小的文件无法在线编辑\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl >\n                                <InputLabel htmlFor=\"component-helper\">\n                                    OneDrive 分片错误重试\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:0,\n                                        step:1,\n                                    }}\n                                    value={options.onedrive_chunk_retries}\n                                    onChange={handleChange(\"onedrive_chunk_retries\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    OneDrive 存储策略分片上传失败后重试的最大次数，只适用于服务端上传或中转\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.reset_after_upload_failed === \"1\"\n                                            }\n                                            onChange={handleCheckChange(\n                                                \"reset_after_upload_failed\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"上传校验失败时强制重置连接\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    开启后，如果本次策略、头像等数据上传校验失败，服务器会强制重置连接\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        有效期 (秒)\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n\n                        <div className={classes.form}>\n                            <FormControl >\n                                <InputLabel htmlFor=\"component-helper\">\n                                    打包下载\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:1,\n                                        step:1,\n                                    }}\n                                    value={options.archive_timeout}\n                                    onChange={handleChange(\"archive_timeout\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl >\n                                <InputLabel htmlFor=\"component-helper\">\n                                    下载会话\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:1,\n                                        step:1,\n                                    }}\n                                    value={options.download_timeout}\n                                    onChange={handleChange(\"download_timeout\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl >\n                                <InputLabel htmlFor=\"component-helper\">\n                                    预览链接\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:1,\n                                        step:1,\n                                    }}\n                                    value={options.preview_timeout}\n                                    onChange={handleChange(\"preview_timeout\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl >\n                                <InputLabel htmlFor=\"component-helper\">\n                                    Office 文档预览连接\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:1,\n                                        step:1,\n                                    }}\n                                    value={options.doc_preview_timeout}\n                                    onChange={handleChange(\"doc_preview_timeout\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl >\n                                <InputLabel htmlFor=\"component-helper\">\n                                    上传凭证\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:1,\n                                        step:1,\n                                    }}\n                                    value={options.upload_credential_timeout}\n                                    onChange={handleChange(\"upload_credential_timeout\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl >\n                                <InputLabel htmlFor=\"component-helper\">\n                                    上传会话\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:1,\n                                        step:1,\n                                    }}\n                                    value={options.upload_session_timeout}\n                                    onChange={handleChange(\"upload_session_timeout\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    超出后不再处理此上传的回调请求\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl >\n                                <InputLabel htmlFor=\"component-helper\">\n                                    从机API请求\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:1,\n                                        step:1,\n                                    }}\n                                    value={options.slave_api_timeout}\n                                    onChange={handleChange(\"slave_api_timeout\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl >\n                                <InputLabel htmlFor=\"component-helper\">\n                                    分享下载会话\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:1,\n                                        step:1,\n                                    }}\n                                    value={options.share_download_session_timeout}\n                                    onChange={handleChange(\"share_download_session_timeout\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    设定时间内重复下载分享文件，不会被记入总下载次数\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl >\n                                <InputLabel htmlFor=\"component-helper\">\n                                    OneDrive 客户端上传监控间隔\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:1,\n                                        step:1,\n                                    }}\n                                    value={options.onedrive_monitor_timeout}\n                                    onChange={handleChange(\"onedrive_monitor_timeout\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    每间隔所设定时间，Cloudreve 会向 OneDrive 请求检查客户端上传情况已确保客户端上传可控\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl >\n                                <InputLabel htmlFor=\"component-helper\">\n                                    OneDrive 回调等待\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:1,\n                                        step:1,\n                                    }}\n                                    value={options.onedrive_callback_check}\n                                    onChange={handleChange(\"onedrive_callback_check\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    OneDrive 客户端上传完成后，等待回调的最大时间，如果超出会被认为上传失败\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl >\n                                <InputLabel htmlFor=\"component-helper\">\n                                    OneDrive 下载请求缓存\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:1,\n                                        max:3659,\n                                        step:1,\n                                    }}\n                                    value={options.onedrive_source_timeout}\n                                    onChange={handleChange(\"onedrive_source_timeout\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    OneDrive 获取文件下载 URL 后可将结果缓存，减轻热门文件下载API请求频率\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport SizeInput from \"../Common/SizeInput\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(() => ({\n\n    formContainer: {\n        margin:\"8px 0 8px 0\",\n    }\n}));\n\nexport default function AddPack({ open, onClose,onSubmit }) {\n    const classes = useStyles();\n    const [pack, setPack] = useState({\n        name: \"\",\n        size: \"1073741824\",\n        time: \"\",\n        price: \"\",\n        score: \"\"\n    });\n\n    const handleChange = name => event => {\n        setPack({\n            ...pack,\n            [name]: event.target.value\n        });\n    };\n\n    const submit = e => {\n        e.preventDefault();\n        const packCopy = {...pack};\n        packCopy.size = parseInt(packCopy.size);\n        packCopy.time = parseInt(packCopy.time) * 86400;\n        packCopy.price = parseInt(packCopy.price* 100) ;\n        packCopy.score = parseInt(packCopy.score);\n        packCopy.id = (new Date()).valueOf();\n        onSubmit(packCopy);\n    }\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            maxWidth={\"xs\"}\n        >\n            <form onSubmit={submit}>\n                <DialogTitle id=\"alert-dialog-title\">添加容量包</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        <div className={classes.formContainer}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    名称\n                                </InputLabel>\n                                <Input\n                                    value={pack.name}\n                                    onChange={handleChange(\"name\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    商品展示名称\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.formContainer}>\n                            <FormControl fullWidth>\n                                <SizeInput\n                                    value={pack.size}\n                                    onChange={handleChange(\"size\")}\n                                    min={1}\n                                    label={\"大小\"}\n                                    max={9223372036854775807}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    容量包的大小\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.formContainer}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    有效期 (天)\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:1,\n                                        step:1\n                                    }}\n                                    value={pack.time}\n                                    onChange={handleChange(\"time\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    每个容量包的有效期\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.formContainer}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    单价 (元)\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:0.01,\n                                        step:0.01\n                                    }}\n                                    value={pack.price}\n                                    onChange={handleChange(\"price\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    容量包的单价\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.formContainer}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    单价 (积分)\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:0,\n                                        step:1\n                                    }}\n                                    value={pack.score}\n                                    onChange={handleChange(\"score\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    使用积分购买时的价格，填写为 0 表示不能使用积分购买\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={onClose} color=\"default\">\n                        取消\n                    </Button>\n                    <Button type={\"submit\"} color=\"primary\">\n                        确定\n                    </Button>\n                </DialogActions>\n            </form>\n        </Dialog>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport API from \"../../../middleware/Api\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\nconst useStyles = makeStyles(() => ({\n    formContainer: {\n        margin: \"8px 0 8px 0\"\n    }\n}));\n\nexport default function AddGroup({ open, onClose, onSubmit }) {\n    const classes = useStyles();\n    const [groups, setGroups] = useState([]);\n    const [group, setGroup] = useState({\n        name: \"\",\n        group_id: 2,\n        time: \"\",\n        price: \"\",\n        score: \"\",\n        des: \"\",\n        highlight: false\n    });\n\n    useEffect(() => {\n        if (open && groups.length === 0) {\n            API.get(\"/admin/groups\")\n                .then(response => {\n                    setGroups(response.data);\n                })\n                // eslint-disable-next-line @typescript-eslint/no-empty-function\n                .catch(() => {});\n        }\n        // eslint-disable-next-line\n    }, [open]);\n\n    const handleChange = name => event => {\n        setGroup({\n            ...group,\n            [name]: event.target.value\n        });\n    };\n\n    const handleCheckChange = name => event => {\n        setGroup({\n            ...group,\n            [name]: event.target.checked\n        });\n    };\n\n    const submit = e => {\n        e.preventDefault();\n        const groupCopy = {...group};\n        groupCopy.time = parseInt(groupCopy.time) * 86400;\n        groupCopy.price = parseInt(groupCopy.price * 100);\n        groupCopy.score = parseInt(groupCopy.score);\n        groupCopy.id = (new Date()).valueOf();\n        groupCopy.des = groupCopy.des.split(\"\\n\");\n        onSubmit(groupCopy);\n    };\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            maxWidth={\"xs\"}\n            scroll={\"paper\"}\n        >\n            <form onSubmit={submit}>\n                <DialogTitle id=\"alert-dialog-title\">\n                    添加可购用户组\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        <div className={classes.formContainer}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    名称\n                                </InputLabel>\n                                <Input\n                                    value={group.name}\n                                    onChange={handleChange(\"name\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    商品展示名称\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.formContainer}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    用户组\n                                </InputLabel>\n                                <Select\n                                    value={group.group_id}\n                                    onChange={handleChange(\"group_id\")}\n                                    required\n                                >\n                                    {groups.map(v => {\n                                        if (v.ID !== 3) {\n                                            return (\n                                                <MenuItem value={v.ID}>\n                                                    {v.Name}\n                                                </MenuItem>\n                                            );\n                                        }\n                                        return null;\n                                    })}\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    购买后升级的用户组\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.formContainer}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    有效期 (天)\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1\n                                    }}\n                                    value={group.time}\n                                    onChange={handleChange(\"time\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    单位购买时间的有效期\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.formContainer}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    单价 (元)\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 0.01,\n                                        step: 0.01\n                                    }}\n                                    value={group.price}\n                                    onChange={handleChange(\"price\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户组的单价\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.formContainer}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    单价 (积分)\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 0,\n                                        step: 1\n                                    }}\n                                    value={group.score}\n                                    onChange={handleChange(\"score\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    使用积分购买时的价格，填写为 0\n                                    表示不能使用积分购买\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.formContainer}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    商品描述 (一行一个)\n                                </InputLabel>\n                                <Input\n                                    value={group.des}\n                                    onChange={handleChange(\"des\")}\n                                    multiline\n                                    rowsMax={10}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    购买页面展示的商品描述\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.formContainer}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={group.highlight}\n                                            onChange={handleCheckChange(\"highlight\")}\n                                        />\n                                    }\n                                    label=\"突出展示\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    开启后，在商品选择页面会被突出展示\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={onClose} color=\"default\">\n                        取消\n                    </Button>\n                    <Button type={\"submit\"} color=\"primary\">\n                        确定\n                    </Button>\n                </DialogActions>\n            </form>\n        </Dialog>\n    );\n}\n","import React, {useCallback, useState} from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport API from \"../../../middleware/Api\";\nimport {useDispatch} from \"react-redux\";\nimport {toggleSnackbar} from \"../../../actions\";\n\nconst useStyles = makeStyles(() => ({\n\n    formContainer: {\n        margin:\"8px 0 8px 0\",\n    }\n}));\n\nexport default function AddRedeem({ open, onClose,products ,onSuccess}) {\n    const classes = useStyles();\n    const [input, setInput] = useState({\n        num:1,\n        id:0,\n        time:1,\n    });\n    const [loading,setLoading] = useState(false);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const handleChange = name => event => {\n        setInput({\n            ...input,\n            [name]: event.target.value\n        });\n    };\n\n    const submit = e => {\n        e.preventDefault();\n        setLoading(true);\n        input.num = parseInt(input.num);\n        input.id = parseInt(input.id);\n        input.time = parseInt(input.time);\n        input.type=2;\n        for (let i=0;i<products.length;i++){\n            if (products[i].id === input.id){\n                if(products[i].group_id !== undefined){\n                    input.type = 1\n                }else{\n                    input.type = 0\n                }\n                break;\n            }\n        }\n\n        API.post(\"/admin/redeem\", input)\n            .then(response => {\n                onSuccess(response.data);\n                onClose();\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            }).then(()=>{\n                setLoading(false);\n        });\n\n    };\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            maxWidth={\"xs\"}\n        >\n            <form onSubmit={submit}>\n                <DialogTitle id=\"alert-dialog-title\">生成兑换码</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        <div className={classes.formContainer}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    生成数量\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        step:1,\n                                        min:1,\n                                        max:100,\n                                    }}\n                                    value={input.num}\n                                    onChange={handleChange(\"num\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    激活码批量生成数量\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.formContainer}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    对应商品\n                                </InputLabel>\n                                <Select\n                                    value={input.id}\n                                    onChange={e=>{\n                                        handleChange(\"id\")(e)\n                                    }}\n                                >\n                                    {products.map(v=>(\n                                        <MenuItem key={v.id} value={v.id} data-type={\"1\"}>{v.name}</MenuItem>\n                                    ))}\n                                    <MenuItem value={0}>积分</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.formContainer}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    商品数量\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        step:1,\n                                        min:1,\n                                    }}\n                                    value={input.time}\n                                    onChange={handleChange(\"time\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    对于积分类商品，此处为积分数量，其他商品为时长倍数\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button disabled={loading} onClick={onClose} color=\"default\">\n                        取消\n                    </Button>\n                    <Button disabled={loading} type={\"submit\"} color=\"primary\">\n                        确定\n                    </Button>\n                </DialogActions>\n            </form>\n        </Dialog>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Input from \"@material-ui/core/Input\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Link from \"@material-ui/core/Link\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport AddPack from \"../Dialogs/AddPack\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Delete } from \"@material-ui/icons\";\nimport { sizeToString } from \"../../../utils\";\nimport AddGroup from \"../Dialogs/AddGroupk\";\nimport AddRedeem from \"../Dialogs/AddRedeem\";\nimport AlertDialog from \"../Dialogs/Alert\";\nimport Box from \"@material-ui/core/Box\";\nimport Pagination from \"@material-ui/lab/Pagination\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    },\n    tabForm: {\n        marginTop: 20\n    },\n    content: {\n        padding: theme.spacing(2)\n    },\n    tableContainer: {\n        overflowX: \"auto\",\n        marginTop: theme.spacing(2)\n    },\n    navigator:{\n        marginTop:10,\n    }\n}));\n\nconst product = {};\n\nexport default function VAS() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [tab, setTab] = useState(0);\n    const [options, setOptions] = useState({\n        alipay_enabled: \"0\",\n        payjs_enabled: \"0\",\n        payjs_id: \"\",\n        appid: \"\",\n        appkey: \"\",\n        shopid: \"\",\n        payjs_secret: \"\",\n        score_enabled: \"0\",\n        share_score_rate: \"0\",\n        score_price: \"0\",\n        ban_time: \"0\",\n        group_sell_data: \"[]\",\n        pack_data: \"[]\"\n    });\n    const [groups, setGroups] = useState([]);\n    const [packs, setPacks] = useState([]);\n    const [addPack, setAddPack] = useState(false);\n    const [addGroup, setAddGroup] = useState(false);\n    const [addRedeem, setAddRedeem] = useState(false);\n    const [redeems, setRedeems] = useState([]);\n    const [redeemsRes, setRedeemsRes] = useState([]);\n    const [redeemsResOpen, setRedeemsResOpen] = useState(false);\n    const [page, setPage] = useState(1);\n    const [pageSize,] = useState(20);\n    const [total, setTotal] = useState(0);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadRedeemList = ()=>{\n        API.post(\"/admin/redeem/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by:\"id desc\",\n        })\n            .then(response => {\n                setRedeems(response.data.items);\n                setTotal(response.data.total);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }\n\n    useEffect(() => {\n        const res = JSON.parse(options.group_sell_data);\n        res.forEach(k => {\n            product[k.id] = k.name;\n        });\n        setGroups(res);\n    }, [options.group_sell_data]);\n\n    useEffect(() => {\n        const res = JSON.parse(options.pack_data);\n        res.forEach(k => {\n            product[k.id] = k.name;\n        });\n        setPacks(res);\n    }, [options.pack_data]);\n\n    useEffect(() => {\n        if (tab === 3) {\n            loadRedeemList()\n        }\n    }, [tab,page,pageSize]);\n\n    const deleteRedeem = id =>{\n        API.delete(\"/admin/redeem/\"+id)\n            .then(() => {\n                loadRedeemList();\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }\n\n    const redeemGenerated = codes => {\n        setRedeemsRes(codes);\n        setRedeemsResOpen(true);\n        loadRedeemList();\n    }\n\n    const handleChange = name => event => {\n        setOptions({\n            ...options,\n            [name]: event.target.value\n        });\n    };\n\n    const handleCheckChange = name => event => {\n        let value = event.target.value;\n        if (event.target.checked !== undefined) {\n            value = event.target.checked ? \"1\" : \"0\";\n        }\n        setOptions({\n            ...options,\n            [name]: value\n        });\n    };\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: Object.keys(options)\n        })\n            .then(response => {\n                setOptions(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const updateOption = () => {\n        const option = [];\n        Object.keys(options).forEach(k => {\n            option.push({\n                key: k,\n                value: options[k]\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const submit = e => {\n        e.preventDefault();\n        setLoading(true);\n        updateOption();\n    };\n\n    const updatePackOption = (name, pack) => {\n        const option = [];\n        Object.keys(options).forEach(k => {\n            option.push({\n                key: k,\n                value: k === name ? pack : options[k]\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"设置已保存\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const handleAddPack = pack => {\n        setAddPack(false);\n        const newPacks = [...packs, pack];\n        setPacks(newPacks);\n        const newPackData = JSON.stringify(newPacks);\n        setOptions({ ...options, pack_data: newPackData });\n        updatePackOption(\"pack_data\", newPackData);\n    };\n\n    const handleAddGroup = group => {\n        setAddGroup(false);\n        const newGroup = [...groups, group];\n        setGroups(newGroup);\n        const newGroupData = JSON.stringify(newGroup);\n        setOptions({ ...options, group_sell_data: newGroupData });\n        updatePackOption(\"group_sell_data\", newGroupData);\n    };\n\n    const deletePack = id => {\n        let newPacks = [...packs];\n        newPacks = newPacks.filter(v => {\n            return v.id !== id;\n        });\n        setPacks(newPacks);\n        const newPackData = JSON.stringify(newPacks);\n        setOptions({ ...options, pack_data: newPackData });\n        updatePackOption(\"pack_data\", newPackData);\n    };\n\n    const deleteGroup = id => {\n        let newGroups = [...groups];\n        newGroups = newGroups.filter(v => {\n            return v.id !== id;\n        });\n        setGroups(newGroups);\n        const newPackData = JSON.stringify(newGroups);\n        setOptions({ ...options, group_sell_data: newPackData });\n        updatePackOption(\"group_sell_data\", newPackData);\n    };\n\n    return (\n        <div>\n            <Paper square>\n                <Tabs\n                    value={tab}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    onChange={(e, v) => setTab(v)}\n                    scrollButtons=\"auto\"\n                >\n                    <Tab label=\"支付/杂项设置\" />\n                    <Tab label=\"容量包\" />\n                    <Tab label=\"可购用户组\" />\n                    <Tab label=\"兑换码\" />\n                </Tabs>\n                <div className={classes.content}>\n                    {tab === 0 && (\n                        <form onSubmit={submit} className={classes.tabForm}>\n                            <div className={classes.root}>\n                                <Typography variant=\"h6\" gutterBottom>\n                                    支付宝当面付\n                                </Typography>\n                                <div className={classes.formContainer}>\n                                    <div className={classes.form}>\n                                        <FormControl fullWidth>\n                                            <FormControlLabel\n                                                control={\n                                                    <Switch\n                                                        checked={\n                                                            options.alipay_enabled ===\n                                                            \"1\"\n                                                        }\n                                                        onChange={handleCheckChange(\n                                                            \"alipay_enabled\"\n                                                        )}\n                                                    />\n                                                }\n                                                label=\"开启\"\n                                            />\n                                        </FormControl>\n                                    </div>\n\n                                    {options.alipay_enabled === \"1\" && (\n                                        <>\n                                            <div className={classes.form}>\n                                                <FormControl fullWidth>\n                                                    <InputLabel htmlFor=\"component-helper\">\n                                                        App- ID\n                                                    </InputLabel>\n                                                    <Input\n                                                        value={options.appid}\n                                                        onChange={handleChange(\n                                                            \"appid\"\n                                                        )}\n                                                        required\n                                                    />\n                                                    <FormHelperText id=\"component-helper-text\">\n                                                        当面付应用的 APPID\n                                                    </FormHelperText>\n                                                </FormControl>\n                                            </div>\n\n                                            <div className={classes.form}>\n                                                <FormControl fullWidth>\n                                                    <InputLabel htmlFor=\"component-helper\">\n                                                        RSA 应用私钥\n                                                    </InputLabel>\n                                                    <Input\n                                                        value={options.appkey}\n                                                        onChange={handleChange(\n                                                            \"appkey\"\n                                                        )}\n                                                        multiline\n                                                        rowsMax={10}\n                                                        required\n                                                    />\n                                                    <FormHelperText id=\"component-helper-text\">\n                                                        当面付应用的 RSA2\n                                                        (SHA256)\n                                                        私钥，一般是由您自己生成。\n                                                        详情参考\n                                                        <Link\n                                                            target={\"_blank\"}\n                                                            href={\n                                                                \"https://docs.open.alipay.com/291/105971\"\n                                                            }\n                                                        >\n                                                            生成 RSA 密钥\n                                                        </Link>\n                                                    </FormHelperText>\n                                                </FormControl>\n                                            </div>\n\n                                            <div className={classes.form}>\n                                                <FormControl fullWidth>\n                                                    <InputLabel htmlFor=\"component-helper\">\n                                                        支付宝公钥\n                                                    </InputLabel>\n                                                    <Input\n                                                        value={options.shopid}\n                                                        onChange={handleChange(\n                                                            \"shopid\"\n                                                        )}\n                                                        multiline\n                                                        rowsMax={10}\n                                                        required\n                                                    />\n                                                    <FormHelperText id=\"component-helper-text\">\n                                                        由支付宝提供，可在\n                                                        应用管理 - 应用信息 -\n                                                        接口加签方式 中获取\n                                                    </FormHelperText>\n                                                </FormControl>\n                                            </div>\n                                        </>\n                                    )}\n                                </div>\n                            </div>\n\n                            <div className={classes.root}>\n                                <Typography variant=\"h6\" gutterBottom>\n                                    PAYJS 微信支付\n                                </Typography>\n\n                                <div className={classes.formContainer}>\n                                    <div className={classes.form}>\n                                        <Alert severity=\"info\">\n                                            <Typography variant=\"body2\">\n                                                此服务由第三方平台{\" \"}\n                                                <Link\n                                                    href={\"https://payjs.cn/\"}\n                                                    target={\"_blank\"}\n                                                >\n                                                    PAYJS\n                                                </Link>{\" \"}\n                                                提供， 产生的任何纠纷与\n                                                Cloudreve 开发者无关。\n                                            </Typography>\n                                        </Alert>\n                                    </div>\n                                    <div className={classes.form}>\n                                        <FormControl fullWidth>\n                                            <FormControlLabel\n                                                control={\n                                                    <Switch\n                                                        checked={\n                                                            options.payjs_enabled ===\n                                                            \"1\"\n                                                        }\n                                                        onChange={handleCheckChange(\n                                                            \"payjs_enabled\"\n                                                        )}\n                                                    />\n                                                }\n                                                label=\"开启\"\n                                            />\n                                        </FormControl>\n                                    </div>\n\n                                    {options.payjs_enabled === \"1\" && (\n                                        <>\n                                            <div className={classes.form}>\n                                                <FormControl fullWidth>\n                                                    <InputLabel htmlFor=\"component-helper\">\n                                                        商户号\n                                                    </InputLabel>\n                                                    <Input\n                                                        value={options.payjs_id}\n                                                        onChange={handleChange(\n                                                            \"payjs_id\"\n                                                        )}\n                                                        required\n                                                    />\n                                                    <FormHelperText id=\"component-helper-text\">\n                                                        可在 PAYJS\n                                                        管理面板首页看到\n                                                    </FormHelperText>\n                                                </FormControl>\n                                            </div>\n\n                                            <div className={classes.form}>\n                                                <FormControl fullWidth>\n                                                    <InputLabel htmlFor=\"component-helper\">\n                                                        通信密钥\n                                                    </InputLabel>\n                                                    <Input\n                                                        value={\n                                                            options.payjs_secret\n                                                        }\n                                                        onChange={handleChange(\n                                                            \"payjs_secret\"\n                                                        )}\n                                                        required\n                                                    />\n                                                    <FormHelperText id=\"component-helper-text\">\n                                                        可在 PAYJS\n                                                        管理面板首页看到\n                                                    </FormHelperText>\n                                                </FormControl>\n                                            </div>\n                                        </>\n                                    )}\n                                </div>\n                            </div>\n\n                            <div className={classes.root}>\n                                <Typography variant=\"h6\" gutterBottom>\n                                    杂项设置\n                                </Typography>\n                                <div className={classes.formContainer}>\n                                    <div className={classes.form}>\n                                        <FormControl fullWidth>\n                                            <InputLabel htmlFor=\"component-helper\">\n                                                封禁缓冲期 (秒)\n                                            </InputLabel>\n                                            <Input\n                                                type={\"number\"}\n                                                inputProps={{\n                                                    step: 1,\n                                                    min: 1\n                                                }}\n                                                value={options.ban_time}\n                                                onChange={handleChange(\n                                                    \"ban_time\"\n                                                )}\n                                                required\n                                            />\n                                            <FormHelperText id=\"component-helper-text\">\n                                                用户保持容量超额状态的最长时长，超出时长该用户会被系统冻结\n                                            </FormHelperText>\n                                        </FormControl>\n                                    </div>\n\n                                    <div className={classes.form}>\n                                        <FormControl fullWidth>\n                                            <FormControlLabel\n                                                control={\n                                                    <Switch\n                                                        checked={\n                                                            options.score_enabled ===\n                                                            \"1\"\n                                                        }\n                                                        onChange={handleCheckChange(\n                                                            \"score_enabled\"\n                                                        )}\n                                                    />\n                                                }\n                                                label=\"允许为分享定价\"\n                                            />\n                                            <FormHelperText>\n                                                开启后，用户可为分享设定积分价格，下载需要扣除积分\n                                            </FormHelperText>\n                                        </FormControl>\n                                    </div>\n\n                                    {options.score_enabled === \"1\" && (\n                                        <div className={classes.form}>\n                                            <FormControl fullWidth>\n                                                <InputLabel htmlFor=\"component-helper\">\n                                                    积分到账比率 (%)\n                                                </InputLabel>\n                                                <Input\n                                                    type={\"number\"}\n                                                    inputProps={{\n                                                        step: 1,\n                                                        min: 0,\n                                                        max: 100\n                                                    }}\n                                                    value={\n                                                        options.share_score_rate\n                                                    }\n                                                    onChange={handleChange(\n                                                        \"share_score_rate\"\n                                                    )}\n                                                    required\n                                                />\n                                                <FormHelperText id=\"component-helper-text\">\n                                                    购买下载设定价格的分享，分享者实际到账的积分比率\n                                                </FormHelperText>\n                                            </FormControl>\n                                        </div>\n                                    )}\n\n                                    <div className={classes.form}>\n                                        <FormControl fullWidth>\n                                            <InputLabel htmlFor=\"component-helper\">\n                                                积分价格 (分)\n                                            </InputLabel>\n                                            <Input\n                                                type={\"number\"}\n                                                inputProps={{\n                                                    step: 1,\n                                                    min: 1\n                                                }}\n                                                value={options.score_price}\n                                                onChange={handleChange(\n                                                    \"score_price\"\n                                                )}\n                                                required\n                                            />\n                                            <FormHelperText id=\"component-helper-text\">\n                                                充值积分时的价格\n                                            </FormHelperText>\n                                        </FormControl>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className={classes.root}>\n                                <Button\n                                    disabled={loading}\n                                    type={\"submit\"}\n                                    variant={\"contained\"}\n                                    color={\"primary\"}\n                                >\n                                    保存\n                                </Button>\n                            </div>\n                        </form>\n                    )}\n\n                    {tab === 1 && (\n                        <div>\n                            <Button\n                                onClick={() => setAddPack(true)}\n                                variant={\"contained\"}\n                                color={\"secondary\"}\n                            >\n                                添加\n                            </Button>\n                            <div className={classes.tableContainer}>\n                                <Table size=\"small\">\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell>名称</TableCell>\n                                            <TableCell>单价</TableCell>\n                                            <TableCell>时长</TableCell>\n                                            <TableCell>大小</TableCell>\n                                            <TableCell>操作</TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {packs.map(row => (\n                                            <TableRow key={row.id}>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    {row.name}\n                                                </TableCell>\n                                                <TableCell>\n                                                    ￥{row.price / 100}\n                                                    {row.score !== 0 &&\n                                                        \" 或 \" +\n                                                            row.score +\n                                                            \" 积分\"}\n                                                </TableCell>\n                                                <TableCell>\n                                                    {Math.ceil(\n                                                        row.time / 86400\n                                                    )}\n                                                    天\n                                                </TableCell>\n                                                <TableCell>\n                                                    {sizeToString(row.size)}\n                                                </TableCell>\n                                                <TableCell>\n                                                    <IconButton\n                                                        onClick={() =>\n                                                            deletePack(row.id)\n                                                        }\n                                                        size={\"small\"}\n                                                    >\n                                                        <Delete />\n                                                    </IconButton>\n                                                </TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            </div>\n                        </div>\n                    )}\n\n                    {tab === 2 && (\n                        <div>\n                            <Button\n                                onClick={() => setAddGroup(true)}\n                                variant={\"contained\"}\n                                color={\"secondary\"}\n                            >\n                                添加\n                            </Button>\n                            <div className={classes.tableContainer}>\n                                <Table size=\"small\">\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell>名称</TableCell>\n                                            <TableCell>单价</TableCell>\n                                            <TableCell>时长</TableCell>\n                                            <TableCell>高亮</TableCell>\n                                            <TableCell>操作</TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {groups.map(row => (\n                                            <TableRow key={row.id}>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    {row.name}\n                                                </TableCell>\n                                                <TableCell>\n                                                    ￥{row.price / 100}\n                                                    {row.score !== 0 &&\n                                                        \" 或 \" +\n                                                            row.score +\n                                                            \" 积分\"}\n                                                </TableCell>\n                                                <TableCell>\n                                                    {Math.ceil(\n                                                        row.time / 86400\n                                                    )}\n                                                    天\n                                                </TableCell>\n                                                <TableCell>\n                                                    {row.highlight\n                                                        ? \"是\"\n                                                        : \"否\"}\n                                                </TableCell>\n                                                <TableCell>\n                                                    <IconButton\n                                                        onClick={() =>\n                                                            deleteGroup(row.id)\n                                                        }\n                                                        size={\"small\"}\n                                                    >\n                                                        <Delete />\n                                                    </IconButton>\n                                                </TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            </div>\n                        </div>\n                    )}\n\n                    {tab === 3 && (\n                        <div>\n                            <Button\n                                onClick={() => setAddRedeem(true)}\n                                variant={\"contained\"}\n                                color={\"secondary\"}\n                            >\n                                添加\n                            </Button>\n                            <div className={classes.tableContainer}>\n                                <Table size=\"small\">\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell>#</TableCell>\n                                            <TableCell>商品名</TableCell>\n                                            <TableCell>数量</TableCell>\n                                            <TableCell>兑换码</TableCell>\n                                            <TableCell>状态</TableCell>\n                                            <TableCell>操作</TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {redeems.map(row => (\n                                            <TableRow key={row.ID}>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    {row.ID}\n                                                </TableCell>\n                                                <TableCell>\n                                                    {row.ProductID === 0 &&\"积分\"}\n                                                    {product[row.ProductID]!== undefined && <>{product[row.ProductID]}</>}\n                                                    {row.ProductID !== 0 && !product[row.ProductID] && \"已失效商品\"}\n                                                </TableCell>\n                                                <TableCell>\n                                                    {row.Num}\n                                                </TableCell>\n                                                <TableCell>\n                                                    {row.Code}\n                                                </TableCell>\n                                                <TableCell>\n                                                    {!row.Used?\n                                                        <Box color=\"success.main\">未使用</Box>:\n                                                        <Box color=\"warning.main\">已使用</Box>\n                                                    }\n                                                </TableCell>\n                                                <TableCell>\n                                                    <IconButton\n                                                        onClick={() =>\n                                                            deleteRedeem(row.ID)\n                                                        }\n                                                        size={\"small\"}\n                                                    >\n                                                        <Delete />\n                                                    </IconButton>\n                                                </TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            </div>\n                            <div className={classes.navigator}>\n                                <Pagination\n                                    count={Math.ceil(total / pageSize)}\n                                    onChange={(e,v)=>setPage(v)}\n                                    color=\"secondary\"\n                                />\n                            </div>\n                        </div>\n                    )}\n\n                    <AddPack\n                        onSubmit={handleAddPack}\n                        open={addPack}\n                        onClose={() => setAddPack(false)}\n                    />\n                    <AddGroup\n                        onSubmit={handleAddGroup}\n                        open={addGroup}\n                        onClose={() => setAddGroup(false)}\n                    />\n                    <AddRedeem\n                        open={addRedeem}\n                        onSuccess={redeemGenerated}\n                        products = {[...groups,...packs]}\n                        onClose={() => setAddRedeem(false)}\n                    />\n                    <AlertDialog\n                        title={\"生成结果\"}\n                        open={redeemsResOpen}\n                        msg={redeemsRes.map((v,k)=>(<div key={k}>{v}</div>))}\n                        onClose={()=>{\n                            setRedeemsResOpen(false);\n                            setRedeemsRes([]);\n                        }}\n                    />\n                </div>\n            </Paper>\n        </div>\n    );\n}\n","import React, { useCallback, useState } from \"react\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport { CompactPicker } from \"react-color\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { createMuiTheme, makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Add, Menu } from \"@material-ui/icons\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport Fab from \"@material-ui/core/Fab\";\n\nconst useStyles = makeStyles(theme => ({\n    picker: {\n        \"& div\": {\n            boxShadow: \"none !important\"\n        },\n        marginTop: theme.spacing(1)\n    },\n    \"@global\": {\n        \".compact-picker:parent \": {\n            boxShadow: \"none !important\"\n        }\n    },\n    statusBar: {\n        height: 24,\n        width: \"100%\"\n    },\n    fab: {\n        textAlign: \"right\"\n    }\n}));\n\nexport default function CreateTheme({ open, onClose,onSubmit }) {\n    const classes = useStyles();\n    const [theme, setTheme] = useState({\n        palette: {\n            primary: {\n                main: \"#3f51b5\",\n                contrastText: \"#fff\"\n            },\n            secondary: {\n                main: \"#d81b60\",\n                contrastText: \"#fff\"\n            }\n        }\n    });\n\n    const subTheme = useCallback(() => {\n        return createMuiTheme(theme);\n    }, [theme]);\n\n    return (\n        <Dialog open={open} onClose={onClose} fullWidth maxWidth={\"md\"}>\n            <DialogContent>\n                <Grid container>\n                    <Grid spacing={2} md={8} xs={12} container>\n                        <Grid md={6} xs={12} item>\n                            <Typography variant=\"h6\" gutterBottom>\n                                主色调\n                            </Typography>\n                            <TextField\n                                value={theme.palette.primary.main}\n                                onChange={e => {\n                                    setTheme({\n                                        ...theme,\n                                        palette: {\n                                            ...theme.palette,\n                                            primary: {\n                                                ...theme.palette.primary,\n                                                main: e.target.value\n                                            }\n                                        }\n                                    });\n                                }}\n                                fullWidth\n                            />\n                            <div className={classes.picker}>\n                                <CompactPicker\n                                    colors={[\n                                        \"#4D4D4D\",\n                                        \"#999999\",\n                                        \"#FFFFFF\",\n                                        \"#f44336\",\n                                        \"#ff9800\",\n                                        \"#ffeb3b\",\n                                        \"#cddc39\",\n                                        \"#A4DD00\",\n                                        \"#00bcd4\",\n                                        \"#03a9f4\",\n                                        \"#AEA1FF\",\n                                        \"#FDA1FF\",\n                                        \"#333333\",\n                                        \"#808080\",\n                                        \"#cccccc\",\n                                        \"#ff5722\",\n                                        \"#ffc107\",\n                                        \"#FCC400\",\n                                        \"#8bc34a\",\n                                        \"#4caf50\",\n                                        \"#009688\",\n                                        \"#2196f3\",\n                                        \"#3f51b5\",\n                                        \"#e91e63\",\n                                        \"#000000\",\n                                        \"#666666\",\n                                        \"#B3B3B3\",\n                                        \"#9F0500\",\n                                        \"#C45100\",\n                                        \"#FB9E00\",\n                                        \"#808900\",\n                                        \"#194D33\",\n                                        \"#0C797D\",\n                                        \"#0062B1\",\n                                        \"#673ab7\",\n                                        \"#9c27b0\"\n                                    ]}\n                                    color={theme.palette.primary.main}\n                                    onChangeComplete={(c) => {\n                                        setTheme({\n                                            ...theme,\n                                            palette: {\n                                                ...theme.palette,\n                                                primary: {\n                                                    ...theme.palette.primary,\n                                                    main: c.hex\n                                                }\n                                            }\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </Grid>\n                        <Grid md={6} xs={12} item>\n                            <Typography variant=\"h6\" gutterBottom>\n                                辅色调\n                            </Typography>\n                            <TextField\n                                value={theme.palette.secondary.main}\n                                onChange={e => {\n                                    setTheme({\n                                        ...theme,\n                                        palette: {\n                                            ...theme.palette,\n                                            secondary: {\n                                                ...theme.palette.secondary,\n                                                main: e.target.value\n                                            }\n                                        }\n                                    });\n                                }}\n                                fullWidth\n                            />\n                            <div className={classes.picker}>\n                                <CompactPicker\n                                    colors={[\n                                        \"#4D4D4D\",\n                                        \"#999999\",\n                                        \"#FFFFFF\",\n                                        \"#ff1744\",\n                                        \"#ff3d00\",\n                                        \"#ffeb3b\",\n                                        \"#cddc39\",\n                                        \"#A4DD00\",\n                                        \"#00bcd4\",\n                                        \"#00e5ff\",\n                                        \"#AEA1FF\",\n                                        \"#FDA1FF\",\n                                        \"#333333\",\n                                        \"#808080\",\n                                        \"#cccccc\",\n                                        \"#ff5722\",\n                                        \"#ffea00\",\n                                        \"#ffc400\",\n                                        \"#c6ff00\",\n                                        \"#00e676\",\n                                        \"#76ff03\",\n                                        \"#00b0ff\",\n                                        \"#2979ff\",\n                                        \"#f50057\",\n                                        \"#000000\",\n                                        \"#666666\",\n                                        \"#B3B3B3\",\n                                        \"#9F0500\",\n                                        \"#C45100\",\n                                        \"#FB9E00\",\n                                        \"#808900\",\n                                        \"#1de9b6\",\n                                        \"#0C797D\",\n                                        \"#3d5afe\",\n                                        \"#651fff\",\n                                        \"#d500f9\"\n                                    ]}\n                                    color={theme.palette.secondary.main}\n                                    onChangeComplete={(c) => {\n                                        setTheme({\n                                            ...theme,\n                                            palette: {\n                                                ...theme.palette,\n                                                secondary: {\n                                                    ...theme.palette.secondary,\n                                                    main: c.hex\n                                                }\n                                            }\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </Grid>\n                        <Grid md={6} xs={12} item>\n                            <Typography variant=\"h6\" gutterBottom>\n                                主色调文字\n                            </Typography>\n                            <TextField\n                                value={theme.palette.primary.contrastText}\n                                onChange={e => {\n                                    setTheme({\n                                        ...theme,\n                                        palette: {\n                                            ...theme.palette,\n                                            primary: {\n                                                ...theme.palette.primary,\n                                                contrastText: e.target.value\n                                            }\n                                        }\n                                    });\n                                }}\n                                fullWidth\n                            />\n                            <div className={classes.picker}>\n                                <CompactPicker\n                                    color={theme.palette.primary.contrastText}\n                                    onChangeComplete={(c) => {\n                                        setTheme({\n                                            ...theme,\n                                            palette: {\n                                                ...theme.palette,\n                                                primary: {\n                                                    ...theme.palette.primary,\n                                                    contrastText: c.hex\n                                                }\n                                            }\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </Grid>\n                        <Grid md={6} xs={12} item>\n                            <Typography variant=\"h6\" gutterBottom>\n                                辅色调文字\n                            </Typography>\n                            <TextField\n                                value={theme.palette.secondary.contrastText}\n                                onChange={e => {\n                                    setTheme({\n                                        ...theme,\n                                        palette: {\n                                            ...theme.palette,\n                                            secondary: {\n                                                ...theme.palette.secondary,\n                                                contrastText: e.target.value\n                                            }\n                                        }\n                                    });\n                                }}\n                                fullWidth\n                            />\n                            <div className={classes.picker}>\n                                <CompactPicker\n                                    color={theme.palette.secondary.contrastText}\n                                    onChangeComplete={(c) => {\n                                        setTheme({\n                                            ...theme,\n                                            palette: {\n                                                ...theme.palette,\n                                                secondary: {\n                                                    ...theme.palette.secondary,\n                                                    contrastText: c.hex\n                                                }\n                                            }\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </Grid>\n                    </Grid>\n                    <Grid spacing={2} md={4} xs={12}>\n                        <ThemeProvider theme={subTheme()}>\n                            <div\n                                className={classes.statusBar}\n                                style={{\n                                    backgroundColor: subTheme().palette.primary\n                                        .dark\n                                }}\n                            />\n                            <AppBar position=\"static\">\n                                <Toolbar>\n                                    <IconButton\n                                        edge=\"start\"\n                                        className={classes.menuButton}\n                                        color=\"inherit\"\n                                        aria-label=\"menu\"\n                                    >\n                                        <Menu />\n                                    </IconButton>\n                                    <Typography\n                                        variant=\"h6\"\n                                        className={classes.title}\n                                    >\n                                        Color\n                                    </Typography>\n                                </Toolbar>\n                            </AppBar>\n                            <div style={{ padding: 16 }}>\n                                <TextField\n                                    fullWidth\n                                    color={\"secondary\"}\n                                    label={\"文字输入\"}\n                                />\n                                <div\n                                    className={classes.fab}\n                                    style={{ paddingTop: 64 }}\n                                >\n                                    <Fab color=\"secondary\" aria-label=\"add\">\n                                        <Add />\n                                    </Fab>\n                                </div>\n                            </div>\n                        </ThemeProvider>\n                    </Grid>\n                </Grid>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"default\">\n                    取消\n                </Button>\n                <Button onClick={()=>onSubmit(theme)} color=\"primary\">\n                    创建\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport Table from \"@material-ui/core/Table\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport { Delete } from \"@material-ui/icons\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CreateTheme from \"../Dialogs/CreateTheme\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Link from \"@material-ui/core/Link\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    form: {\n        maxWidth: 500,\n        marginTop: 20,\n        marginBottom: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    },\n    colorContainer: {\n        display: \"flex\"\n    },\n    colorDot: {\n        width: 20,\n        height: 20,\n        borderRadius: \"50%\",\n        marginLeft: 6\n    }\n}));\n\nexport default function Theme() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [theme, setTheme] = useState({});\n    const [options, setOptions] = useState({\n        themes: \"{}\",\n        defaultTheme:\"\",\n        home_view_method:\"icon\",\n        share_view_method:\"list\",\n    });\n    const [themeConfig, setThemeConfig] = useState({});\n    const [themeConfigError, setThemeConfigError] = useState({});\n    const [create, setCreate] = useState(false);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const deleteTheme = color => {\n        if(color === options.defaultTheme){\n            ToggleSnackbar(\"top\", \"right\", \"不能删除默认配色\", \"warning\");\n            return\n        }\n        if (Object.keys(theme).length <=1){\n            ToggleSnackbar(\"top\", \"right\", \"请至少保留一个配色方案\", \"warning\");\n            return\n        }\n        const themeCopy = {...theme};\n        delete themeCopy[color];\n        const resStr = JSON.stringify(themeCopy);\n        setOptions({\n            ...options,\n            themes:resStr,\n        })\n    }\n\n    const addTheme = newTheme => {\n        setCreate(false);\n        if (theme[newTheme.palette.primary.main] !== undefined){\n            ToggleSnackbar(\"top\", \"right\", \"主色调不能与已有配色重复\", \"warning\");\n            return\n        }\n        const res = {\n            ...theme,\n            [newTheme.palette.primary.main]:newTheme,\n        };\n        const resStr = JSON.stringify(res);\n        setOptions({\n            ...options,\n            themes:resStr,\n        })\n    }\n\n    useEffect(() => {\n        const res = JSON.parse(options.themes);\n        const themeString = {};\n\n        Object.keys(res).map(k => {\n            themeString[k] = JSON.stringify(res[k]);\n        });\n\n        setTheme(res);\n        setThemeConfig(themeString);\n    }, [options.themes]);\n\n    const handleChange = name => event => {\n        setOptions({\n            ...options,\n            [name]: event.target.value\n        });\n    };\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: Object.keys(options)\n        })\n            .then(response => {\n                setOptions(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const submit = e => {\n        e.preventDefault();\n        setLoading(true);\n        const option = [];\n        Object.keys(options).forEach(k => {\n            option.push({\n                key: k,\n                value: options[k]\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        主题配色\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <Table aria-label=\"simple table\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>关键色</TableCell>\n                                        <TableCell>色彩配置</TableCell>\n                                        <TableCell>操作</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {Object.keys(theme).map(k => (\n                                        <TableRow key={k}>\n                                            <TableCell\n                                                component=\"th\"\n                                                scope=\"row\"\n                                            >\n                                                <div\n                                                    className={\n                                                        classes.colorContainer\n                                                    }\n                                                >\n                                                    <div\n                                                        style={{\n                                                            backgroundColor:\n                                                                theme[k].palette\n                                                                    .primary\n                                                                    .main\n                                                        }}\n                                                        className={\n                                                            classes.colorDot\n                                                        }\n                                                    />\n                                                    <div\n                                                        style={{\n                                                            backgroundColor:\n                                                                theme[k].palette\n                                                                    .secondary\n                                                                    .main\n                                                        }}\n                                                        className={\n                                                            classes.colorDot\n                                                        }\n                                                    />\n                                                </div>\n                                            </TableCell>\n                                            <TableCell>\n                                                <TextField\n                                                    error={themeConfigError[k]}\n                                                    helperText={\n                                                        themeConfigError[k] &&\n                                                        \"格式不正确\"\n                                                    }\n                                                    fullWidth\n                                                    multiline\n                                                    onChange={e => {\n                                                        setThemeConfig({\n                                                            ...themeConfig,\n                                                            [k]: e.target.value\n                                                        });\n                                                    }}\n                                                    onBlur={e => {\n                                                        try {\n                                                            const res = JSON.parse(\n                                                                e.target.value\n                                                            );\n                                                            if(\n                                                                !('palette' in res) ||\n                                                                !('primary' in res.palette) ||\n                                                                !('main' in res.palette.primary) ||\n                                                                !('secondary' in res.palette) ||\n                                                                !('main' in res.palette.secondary)\n                                                            ){\n                                                                throw \"error\";\n                                                            }\n                                                            setTheme({\n                                                                ...theme,\n                                                                [k]: res\n                                                            });\n                                                        } catch (e) {\n                                                            setThemeConfigError(\n                                                                {\n                                                                    ...themeConfigError,\n                                                                    [k]: true\n                                                                }\n                                                            );\n                                                            return;\n                                                        }\n                                                        setThemeConfigError({\n                                                            ...themeConfigError,\n                                                            [k]: false\n                                                        });\n                                                    }}\n                                                    value={themeConfig[k]}\n                                                />\n                                            </TableCell>\n                                            <TableCell>\n                                                <IconButton onClick={()=>deleteTheme(k)}>\n                                                    <Delete />\n                                                </IconButton>\n                                            </TableCell>\n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                            <div>\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    style={{marginTop:8}}\n                                    onClick={()=>setCreate(true)}\n                                >\n                                    新建配色方案\n                                </Button>\n                            </div>\n                            <Alert severity=\"info\" style={{marginTop:8}}>\n                                <Typography variant=\"body2\">\n                                    完整的配置项可在 {\" \"}\n                                    <Link\n                                        href={\"https://material-ui.com/zh/customization/default-theme/\"}\n                                        target={\"_blank\"}\n                                    >\n                                        默认主题 - Material-UI\n                                    </Link>{\" \"}\n                                    查阅。\n                                </Typography>\n                            </Alert>\n\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    默认配色\n                                </InputLabel>\n                                <Select\n                                    value={options.defaultTheme}\n                                    onChange={handleChange(\"defaultTheme\")}\n                                >\n                                    {Object.keys(theme).map(k=>(\n                                        <MenuItem key={k} value={k}>\n                                            <div\n                                                className={\n                                                    classes.colorContainer\n                                                }\n                                            >\n                                                <div\n                                                    style={{\n                                                        backgroundColor:\n                                                        theme[k].palette\n                                                            .primary\n                                                            .main\n                                                    }}\n                                                    className={\n                                                        classes.colorDot\n                                                    }\n                                                />\n                                                <div\n                                                    style={{\n                                                        backgroundColor:\n                                                        theme[k].palette\n                                                            .secondary\n                                                            .main\n                                                    }}\n                                                    className={\n                                                        classes.colorDot\n                                                    }\n                                                />\n                                            </div>\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户未指定偏好配色时，站点默认使用的配色方案\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        界面\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    个人文件列表默认样式\n                                </InputLabel>\n                                <Select\n                                    value={options.home_view_method}\n                                    onChange={handleChange(\"home_view_method\")}\n                                    required\n                                >\n                                    <MenuItem value={\"icon\"}>大图标</MenuItem>\n                                    <MenuItem value={\"smallIcon\"}>小图标</MenuItem>\n                                    <MenuItem value={\"list\"}>列表</MenuItem>\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户未指定偏好样式时，个人文件页面列表默认样式\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    目录分享页列表默认样式\n                                </InputLabel>\n                                <Select\n                                    value={options.share_view_method}\n                                    onChange={handleChange(\"share_view_method\")}\n                                    required\n                                >\n                                    <MenuItem value={\"icon\"}>大图标</MenuItem>\n                                    <MenuItem value={\"smallIcon\"}>小图标</MenuItem>\n                                    <MenuItem value={\"list\"}>列表</MenuItem>\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户未指定偏好样式时，目录分享页面的默认样式\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n\n                </div>\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                </div>\n            </form>\n\n            <CreateTheme onSubmit={addTheme} open={create} onClose={()=>setCreate(false)}/>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Input from \"@material-ui/core/Input\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Link from \"@material-ui/core/Link\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    }\n}));\n\nexport default function Aria2() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [options, setOptions] = useState({\n        aria2_rpcurl:\"\",\n        aria2_token:\"\",\n        aria2_temp_path:\"\",\n        aria2_options:\"\",\n        aria2_interval:\"0\",\n        aria2_call_timeout:\"0\",\n    });\n\n    const handleChange = name => event => {\n        setOptions({\n            ...options,\n            [name]: event.target.value\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: Object.keys(options)\n        })\n            .then(response => {\n                setOptions(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const reload = () => {\n        API.get(\"/admin/reload/aria2\")\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            .then(() => {})\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            .then(() => {});\n    };\n\n    const test = () =>{\n        setLoading(true);\n        API.post(\"/admin/aria2/test\",{\n            server:options.aria2_rpcurl,\n            token:options.aria2_token,\n        })\n            .then(response => {\n                ToggleSnackbar(\"top\", \"right\", \"连接成功，Aria2 版本为：\"+response.data, \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            }).then(()=>{\n            setLoading(false);\n        });\n    }\n\n    const submit = e => {\n        e.preventDefault();\n        setLoading(true);\n        const option = [];\n        Object.keys(options).forEach(k=>{\n            option.push({\n                key:k,\n                value:options[k],\n            });\n        })\n        API.patch(\"/admin/setting\",{\n            options:option,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\n                reload();\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            }).then(()=>{\n                setLoading(false);\n        });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        Aria2\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <Alert severity=\"info\" style={{marginTop:8}}>\n                                <Typography variant=\"body2\">\n                                    Cloudreve 的离线下载功能由 {\" \"}\n                                    <Link\n                                        href={\"https://aria2.github.io/\"}\n                                        target={\"_blank\"}\n                                    >\n                                        Aria2\n                                    </Link>{\" \"}\n                                    驱动。如需使用，请在同一设备上以和运行 Cloudreve 相同的用户身份启动 Aria2，\n                                    并在 Aria2 的配置文件中开启 RPC 服务。\n                                </Typography>\n                            </Alert>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    RPC 服务器地址\n                                </InputLabel>\n                                <Input\n                                    type={\"url\"}\n                                    value={options.aria2_rpcurl}\n                                    onChange={handleChange(\"aria2_rpcurl\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    包含端口的完整 RPC 服务器地址，例如：http://127.0.0.1:6800/，留空表示不启用 Aria2 服务\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    RPC Secret\n                                </InputLabel>\n                                <Input\n                                    value={options.aria2_token}\n                                    onChange={handleChange(\"aria2_token\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    RPC 授权令牌，与 Aria2 配置文件中保持一致，未设置请留空。\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    临时下载目录\n                                </InputLabel>\n                                <Input\n                                    value={options.aria2_temp_path}\n                                    onChange={handleChange(\"aria2_temp_path\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    离线下载临时下载目录的<strong>绝对路径</strong>，Cloudreve 进程需要此目录的读、写、执行权限。\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    状态刷新间隔 (秒)\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        step:1,\n                                        min:1,\n                                    }}\n                                    required\n                                    value={options.aria2_interval}\n                                    onChange={handleChange(\"aria2_interval\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    Cloudreve 向 Aria2 请求刷新任务状态的间隔。\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    RPC 调用超时 (秒)\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        step:1,\n                                        min:1,\n                                    }}\n                                    required\n                                    value={options.aria2_call_timeout}\n                                    onChange={handleChange(\"aria2_call_timeout\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    调用 RPC 服务时最长等待时间\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    全局任务参数\n                                </InputLabel>\n                                <Input\n                                    multiline\n                                    required\n                                    value={options.aria2_options}\n                                    onChange={handleChange(\"aria2_options\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    创建下载任务时携带的额外设置参数，以 JSON 编码后的格式书写，您可也可以将这些设置写在 Aria2 配置文件里，可用参数请查阅官方文档\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                    <Button\n                        style={{marginLeft:8}}\n                        disabled={loading}\n                        onClick={()=>test()}\n                        variant={\"outlined\"}\n                        color={\"secondary\"}\n                    >\n                        测试连接\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Input from \"@material-ui/core/Input\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport SizeInput from \"../Common/SizeInput\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    }\n}));\n\nexport default function ImageSetting() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [options, setOptions] = useState({\n        gravatar_server:\"\",\n        avatar_path:\"\",\n        avatar_size:\"\",\n        avatar_size_l:\"\",\n        avatar_size_m:\"\",\n        avatar_size_s:\"\",\n        thumb_width:\"\",\n        thumb_height:\"\",\n        captcha_height:\"1\",\n        captcha_width:\"1\",\n        captcha_mode:\"3\",\n        captcha_CaptchaLen:\"\",\n    });\n\n    const handleChange = name => event => {\n        setOptions({\n            ...options,\n            [name]: event.target.value\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: Object.keys(options)\n        })\n            .then(response => {\n                setOptions(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n\n    const submit = e => {\n        e.preventDefault();\n        setLoading(true);\n        const option = [];\n        Object.keys(options).forEach(k=>{\n            option.push({\n                key:k,\n                value:options[k],\n            });\n        })\n        API.patch(\"/admin/setting\",{\n            options:option,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            }).then(()=>{\n                setLoading(false);\n        });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        头像\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    Gravatar 服务器\n                                </InputLabel>\n                                <Input\n                                    type={\"url\"}\n                                    value={options.gravatar_server}\n                                    onChange={handleChange(\"gravatar_server\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    Gravatar 服务器地址，可选择使用国内镜像\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    头像存储路径\n                                </InputLabel>\n                                <Input\n                                    value={options.avatar_path}\n                                    onChange={handleChange(\"avatar_path\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户上传自定义头像的存储路径\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <SizeInput\n                                    value={options.avatar_size}\n                                    onChange={handleChange(\"avatar_size\")}\n                                    required\n                                    min={0}\n                                    max={2147483647}\n                                    label={\"头像文件大小限制\"}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户可上传头像文件的最大大小\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    小头像尺寸\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:1,\n                                        step:1,\n                                    }}\n                                    value={options.avatar_size_s}\n                                    onChange={handleChange(\"avatar_size_s\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    中头像尺寸\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:1,\n                                        step:1,\n                                    }}\n                                    value={options.avatar_size_m}\n                                    onChange={handleChange(\"avatar_size_m\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    大头像尺寸\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:1,\n                                        step:1,\n                                    }}\n                                    value={options.avatar_size_l}\n                                    onChange={handleChange(\"avatar_size_l\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        缩略图\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    宽度\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:1,\n                                        step:1,\n                                    }}\n                                    value={options.thumb_width}\n                                    onChange={handleChange(\"thumb_width\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n                    </div>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    高度\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:1,\n                                        step:1,\n                                    }}\n                                    value={options.thumb_height}\n                                    onChange={handleChange(\"thumb_height\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n                    </div>\n\n                </div>\n\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        验证码\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    宽度\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:1,\n                                        step:1,\n                                    }}\n                                    value={options.captcha_width}\n                                    onChange={handleChange(\"captcha_width\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    高度\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:1,\n                                        step:1,\n                                    }}\n                                    value={options.captcha_height}\n                                    onChange={handleChange(\"captcha_height\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    模式\n                                </InputLabel>\n                                <Select\n                                    value={options.captcha_mode}\n                                    onChange={handleChange(\"captcha_mode\")}\n                                    required\n                                >\n                                    <MenuItem value={\"0\"}>数字</MenuItem>\n                                    <MenuItem value={\"1\"}>字母</MenuItem>\n                                    <MenuItem value={\"2\"}>算数</MenuItem>\n                                    <MenuItem value={\"3\"}>数字+字母</MenuItem>\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    验证码的形式\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport {useHistory} from \"react-router\";\n\nconst useStyles = makeStyles(theme => ({\n    cardContainer:{\n        display:\"flex\",\n    },\n    cover: {\n        width: 100,\n        height:60,\n    },\n    card:{\n    },\n    content:{\n        flex: \"1 0 auto\",\n    },\n    bg:{\n        backgroundColor:theme.palette.background.default,\n        padding: \"24px 24px\",\n    }\n}));\n\nconst policies = [\n    {\n        name:\"本机存储\",\n        img:\"local.png\",\n        path:\"/admin/policy/add/local\",\n    },\n    {\n        name:\"从机存储\",\n        img:\"remote.png\",\n        path:\"/admin/policy/add/remote\",\n    },\n    {\n        name:\"七牛\",\n        img:\"qiniu.png\",\n        path:\"/admin/policy/add/qiniu\",\n    },\n    {\n        name:\"阿里云 OSS\",\n        img:\"oss.png\",\n        path:\"/admin/policy/add/oss\",\n    },\n    {\n        name:\"又拍云\",\n        img:\"upyun.png\",\n        path:\"/admin/policy/add/upyun\",\n    },\n    {\n        name:\"腾讯云 COS\",\n        img:\"cos.png\",\n        path:\"/admin/policy/add/cos\",\n    },\n    {\n        name:\"OneDrive\",\n        img:\"onedrive.png\",\n        path:\"/admin/policy/add/onedrive\",\n    },\n];\n\nexport default function AddPolicy({open, onClose }) {\n    const classes = useStyles();\n\n    const location = useHistory();\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            maxWidth={\"sm\"}\n            fullWidth\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n                选择存储方式\n            </DialogTitle>\n            <DialogContent dividers className={classes.bg}>\n                <Grid container spacing={2}>\n                    {policies.map((v,index)=>(\n                        <Grid key={index} item sm={12} md={6}>\n                            <Card className={classes.card}>\n                                <CardActionArea\n                                    onClick={()=>{\n                                        location.push(v.path);\n                                        onClose();\n                                    }}\n                                    className={classes.cardContainer}\n                                >\n                                    <CardMedia\n                                        className={classes.cover}\n                                        image={\"https://cdn.jsdelivr.net/gh/742481030/cloudreve-static@0.3.1.1/static/img/\"+v.img}\n                                    />\n                                    <CardContent className={classes.content}>\n                                        <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                                            {v.name}\n                                        </Typography>\n                                    </CardContent>\n                                </CardActionArea>\n                            </Card>\n                        </Grid>\n                    ))}\n                </Grid>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"primary\">\n                    取消\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport { sizeToString } from \"../../../utils\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport { policyTypeMap } from \"../../../config\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport AddPolicy from \"../Dialogs/AddPolicy\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {useHistory, useLocation} from \"react-router\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {Delete, Edit} from \"@material-ui/icons\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Menu from \"@material-ui/core/Menu\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    content: {\n        padding: theme.spacing(2)\n    },\n    container: {\n        overflowX: \"auto\"\n    },\n    tableContainer: {\n        marginTop: 16\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n    },\n    headerRight: {}\n}));\n\nconst columns = [\n    { id: \"#\", label: \"#\", minWidth: 50 },\n    { id: \"name\", label: \"名称\", minWidth: 170 },\n    { id: \"type\", label: \"类型\", minWidth: 170 },\n    {\n        id: \"count\",\n        label: \"下属文件数\",\n        minWidth: 50,\n        align: \"right\"\n    },\n    {\n        id: \"size\",\n        label: \"数据量\",\n        minWidth: 100,\n        align: \"right\"\n    },\n    {\n        id: \"action\",\n        label: \"操作\",\n        minWidth: 170,\n        align: \"right\"\n    }\n];\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\n\nexport default function Policy() {\n    const classes = useStyles();\n    const [policies, setPolicies] = useState([]);\n    const [statics, setStatics] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [addDialog, setAddDialog] = useState(false);\n    const [filter, setFilter] = useState(\"all\");\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [editID, setEditID] = React.useState(0);\n\n    const location = useLocation();\n    const history = useHistory();\n    const query = useQuery();\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(()=>{\n        if(query.get(\"code\") === \"0\"){\n            ToggleSnackbar(\"top\", \"right\", \"授权成功\", \"success\");\n        }else if (query.get(\"msg\") && query.get(\"msg\")!==\"\"){\n            ToggleSnackbar(\"top\", \"right\", query.get(\"msg\") + \", \"+ query.get(\"err\"), \"warning\");\n        }\n\n    },[location])\n\n    const loadList = () => {\n        API.post(\"/admin/policy/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: \"id desc\",\n            conditions: filter === \"all\" ? {} : { type: filter }\n        })\n            .then(response => {\n                setPolicies(response.data.items);\n                setStatics(response.data.statics);\n                setTotal(response.data.total);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize,filter]);\n\n    const deletePolicy = (id) =>{\n        API.delete(\"/admin/policy/\" + id,)\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"存储策略已删除\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }\n\n    const open = Boolean(anchorEl);\n\n    return (\n        <div>\n            <AddPolicy open={addDialog} onClose={() => setAddDialog(false)} />\n            <div className={classes.header}>\n                <Button\n                    color={\"primary\"}\n                    onClick={() => setAddDialog(true)}\n                    variant={\"contained\"}\n                >\n                    添加存储策略\n                </Button>\n                <div className={classes.headerRight}>\n                    <Select\n                        style={{\n                            marginRight:8,\n                        }}\n                        value={filter}\n                        onChange={e=>setFilter(e.target.value)}\n                    >\n                        <MenuItem value={\"all\"}>全部</MenuItem>\n                        <MenuItem value={\"local\"}>本机</MenuItem>\n                        <MenuItem value={\"remote\"}>从机</MenuItem>\n                        <MenuItem value={\"qiniu\"}>七牛</MenuItem>\n                        <MenuItem value={\"upyun\"}>又拍云</MenuItem>\n                        <MenuItem value={\"oss\"}>阿里云 OSS</MenuItem>\n                        <MenuItem value={\"cos\"}>腾讯云 COS</MenuItem>\n                        <MenuItem value={\"onedrive\"}>OneDrive</MenuItem>\n                    </Select>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{height:52}}>\n                                {columns.map(column => (\n                                    <TableCell\n                                        key={column.id}\n                                        align={column.align}\n                                        style={{ minWidth: column.minWidth }}\n                                    >\n                                        {column.label}\n                                    </TableCell>\n                                ))}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {policies.map(row => (\n                                <TableRow hover key={row.ID}>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell>{row.Name}</TableCell>\n                                    <TableCell>\n                                        {policyTypeMap[row.Type] !==\n                                            undefined &&\n                                            policyTypeMap[row.Type]}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {statics[row.ID] !== undefined &&\n                                            statics[row.ID][0].toLocaleString()}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {statics[row.ID] !== undefined &&\n                                            sizeToString(statics[row.ID][1])}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton onClick={()=>deletePolicy(row.ID)} size={\"small\"}>\n                                                <Delete/>\n                                            </IconButton>\n                                        </Tooltip>\n                                        <Tooltip title={\"编辑\"}>\n                                            <IconButton onClick={(e)=>{\n                                                setEditID(row.ID)\n                                                handleClick(e)\n                                            }} size={\"small\"}>\n                                                <Edit/>\n                                            </IconButton>\n                                        </Tooltip>\n\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={e => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n            <Menu\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                keepMounted\n            >\n                <MenuItem onClick={e=>{\n                    handleClose(e);\n                    history.push(\"/admin/policy/edit/pro/\"+editID);\n                }}>专家模式编辑</MenuItem>\n                <MenuItem onClick={e=>{\n                    handleClose(e);\n                    history.push(\"/admin/policy/edit/guide/\"+editID);\n                }}>向导模式编辑</MenuItem>\n            </Menu>\n        </div>\n    );\n}\n","import React from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\n\nexport default function MagicVar({isFile, open, onClose, isSlave }) {\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n                {isFile?\"文件名魔法变量\":\"路径魔法变量\"}\n            </DialogTitle>\n            <DialogContent>\n                <TableContainer>\n                    <Table size=\"small\" aria-label=\"a dense table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>魔法变量</TableCell>\n                                <TableCell>描述</TableCell>\n                                <TableCell>示例</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">{\"{randomkey16}\"}</TableCell>\n                                <TableCell>16位随机字符</TableCell>\n                                <TableCell>N6IimT5XZP324ACK</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">{\"{randomkey8}\"}</TableCell>\n                                <TableCell>8位随机字符</TableCell>\n                                <TableCell>gWz78q30</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">{\"{timestamp}\"}</TableCell>\n                                <TableCell>秒级时间戳</TableCell>\n                                <TableCell>1582692933</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">{\"{timestamp_nano}\"}</TableCell>\n                                <TableCell>纳秒级时间戳</TableCell>\n                                <TableCell>1582692933231834600</TableCell>\n                            </TableRow>\n                            {!isSlave && <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">{\"{uid}\"}</TableCell>\n                                <TableCell>用户ID</TableCell>\n                                <TableCell>1</TableCell>\n                            </TableRow>}\n                            {isFile && <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">{\"{originname}\"}</TableCell>\n                                <TableCell>原始文件名</TableCell>\n                                <TableCell>MyPico.mp4</TableCell>\n                            </TableRow>}\n                            {!isFile && !isSlave && <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">{\"{path}\"}</TableCell>\n                                <TableCell>用户上传路径</TableCell>\n                                <TableCell>/我的文件/学习资料/</TableCell>\n                            </TableRow>}\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">{\"{date}\"}</TableCell>\n                                <TableCell>日期</TableCell>\n                                <TableCell>20060102</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">{\"{datetime}\"}</TableCell>\n                                <TableCell>日期时间</TableCell>\n                                <TableCell>20060102150405</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">{\"{year}\"}</TableCell>\n                                <TableCell>年份</TableCell>\n                                <TableCell>2006</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">{\"{month}\"}</TableCell>\n                                <TableCell>月份</TableCell>\n                                <TableCell>01</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">{\"{day}\"}</TableCell>\n                                <TableCell>日</TableCell>\n                                <TableCell>02</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">{\"{hour}\"}</TableCell>\n                                <TableCell>小时</TableCell>\n                                <TableCell>15</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">{\"{minute}\"}</TableCell>\n                                <TableCell>分钟</TableCell>\n                                <TableCell>04</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">{\"{second}\"}</TableCell>\n                                <TableCell>秒</TableCell>\n                                <TableCell>05</TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"primary\">\n                    关闭\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, {useEffect, useState} from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\n\nexport default function DomainInput({onChange,value,required,label}){\n    const [domain,setDomain] = useState(\"\");\n    const [protocol,setProtocol] = useState(\"https://\");\n    const [error,setError] = useState();\n\n    useState(()=>{\n        if (value.startsWith(\"https://\")){\n            setDomain(value.replace(\"https://\",\"\"));\n            setProtocol(\"https://\")\n        }else{\n            if (value !== \"\"){\n                setDomain(value.replace(\"http://\",\"\"));\n                setProtocol(\"http://\")\n            }\n        }\n    },[value]);\n\n    useEffect(()=>{\n        if(protocol === \"http://\" && window.location.protocol === \"https:\"){\n            setError(\"您当前站点启用了 HTTPS ，此处选择 HTTP 可能会导致无法连接。\")\n        }else{\n            setError(\"\")\n        }\n    },[protocol])\n\n    return (\n        <FormControl>\n            <InputLabel htmlFor=\"component-helper\">\n                {label}\n            </InputLabel>\n            <Input\n                error={error !== \"\"}\n                value={domain}\n                onChange={e=>{\n                    setDomain(e.target.value);\n                    onChange({\n                        target:{\n                            value:protocol + e.target.value,\n                        }\n                    })\n\n                }}\n                required = {required}\n                startAdornment={\n                    <InputAdornment position=\"start\">\n                        <Select\n                            value={protocol}\n                            onChange={(e)=>{\n                                setProtocol(e.target.value);\n                                onChange({\n                                    target:{\n                                        value:e.target.value + domain,\n                                    }\n                                })\n\n                            }}\n                        >\n                            <MenuItem value={\"http://\"}>http://</MenuItem>\n                            <MenuItem value={\"https://\"}>https://</MenuItem>\n                        </Select>\n                    </InputAdornment>\n                }\n            />\n            {error !== \"\" && <FormHelperText error={error !== \"\"}>{error}</FormHelperText>}\n        </FormControl>\n    )\n}","import { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport React, { useCallback, useState } from \"react\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Step from \"@material-ui/core/Step\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../../actions\";\nimport Link from \"@material-ui/core/Link\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../../middleware/Api\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport { useHistory } from \"react-router\";\n\nconst useStyles = makeStyles(theme => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\"\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default\n        }\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\"\n    },\n    stepNumberContainer: {\n        marginRight: 10\n    },\n    stepFooter: {\n        marginTop: 32\n    },\n    button: {\n        marginRight: theme.spacing(1)\n    }\n}));\n\nconst steps = [\n    {\n        title: \"上传路径\",\n        optional: false\n    },\n    {\n        title: \"直链设置\",\n        optional: false\n    },\n    {\n        title: \"上传限制\",\n        optional: false\n    },\n    {\n        title: \"完成\",\n        optional: false\n    }\n];\n\nexport default function LocalGuide(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [useCDN, setUseCDN] = useState(\"false\");\n    const [policy, setPolicy] = useState(\n        props.policy\n            ? props.policy\n            : {\n                  Type: \"local\",\n                  Name: \"\",\n                  DirNameRule: \"uploads/{uid}/{path}\",\n                  AutoRename: \"true\",\n                  FileNameRule: \"{randomkey8}_{originname}\",\n                  IsOriginLinkEnable: \"false\",\n                  BaseURL: \"\",\n                IsPrivate:\"true\",\n                  MaxSize: \"0\",\n                  OptionsSerialized: {\n                      file_type: \"\"\n                  }\n              }\n    );\n\n    const handleChange = name => event => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value\n        });\n    };\n\n    const handleOptionChange = name => event => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value\n            }\n        });\n    };\n\n    const isStepSkipped = step => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const checkPathSetting = e => {\n        e.preventDefault();\n        setLoading(true);\n\n        // 测试路径是否可用\n        API.post(\"/admin/policy/test/path\", {\n            path: policy.DirNameRule\n        })\n            .then(() => {\n                setActiveStep(1);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const submitPolicy = e => {\n        e.preventDefault();\n        setLoading(true);\n\n        const policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        // 处理存储策略\n        if (useCDN === \"false\" || policy.IsOriginLinkEnable === \"false\") {\n            policyCopy.BaseURL = \"\";\n        }\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy\n        })\n            .then(() => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n                setActiveStep(4);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>\n                {props.policy ? \"修改\" : \"添加\"}本机存储策略\n            </Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={checkPathSetting}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"path\")}\n                                >\n                                    路径魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储目录\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"file\")}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"开启重命名\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不开启\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            命名规则\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否允许获取文件永久直链？\n                                <br />\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={handleChange(\n                                            \"IsOriginLinkEnable\"\n                                        )}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"禁止\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.IsOriginLinkEnable === \"true\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    是否要对下载/直链使用 CDN？\n                                    <br />\n                                    开启后，用户访问文件时的 URL\n                                    中的域名部分会被替换为 CDN 域名。\n                                </Typography>\n\n                                <div className={classes.form}>\n                                    <FormControl required component=\"fieldset\">\n                                        <RadioGroup\n                                            required\n                                            value={useCDN}\n                                            onChange={e => {\n                                                if (\n                                                    e.target.value === \"false\"\n                                                ) {\n                                                    setPolicy({\n                                                        ...policy,\n                                                        BaseURL: \"\"\n                                                    });\n                                                }\n                                                setUseCDN(e.target.value);\n                                            }}\n                                            row\n                                        >\n                                            <FormControlLabel\n                                                value={\"true\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"使用\"\n                                            />\n                                            <FormControlLabel\n                                                value={\"false\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"不使用\"\n                                            />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n\n                        <Collapse in={useCDN === \"true\"}>\n                            <div className={classes.subStepContainer}>\n                                <div className={classes.stepNumberContainer}>\n                                    <div className={classes.stepNumber}>3</div>\n                                </div>\n                                <div className={classes.subStepContent}>\n                                    <Typography variant={\"body2\"}>\n                                        选择协议并填写 CDN 域名\n                                    </Typography>\n\n                                    <div className={classes.form}>\n                                        <DomainInput\n                                            value={policy.BaseURL}\n                                            onChange={handleChange(\"BaseURL\")}\n                                            required={\n                                                policy.IsOriginLinkEnable ===\n                                                    \"true\" && useCDN === \"true\"\n                                            }\n                                            label={\"CDN 前缀\"}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </Collapse>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传的单文件大小？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={e => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\"\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\"\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入限制：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"单文件大小限制\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件扩展名？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={e => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\"\n                                                    }\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\"\n                                                    }\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\n                                    隔开\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            扩展名列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}></div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                最后一步，为此存储策略命名：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储策略名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            完成\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>\n                            存储策略已{props.policy ? \"保存\" : \"添加\"}！\n                        </Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            返回存储策略列表\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport React, { useCallback, useState } from \"react\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Step from \"@material-ui/core/Step\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../../actions\";\nimport Link from \"@material-ui/core/Link\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../../middleware/Api\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport {useHistory} from \"react-router\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport {randomStr} from \"../../../../utils\";\n\nconst useStyles = makeStyles(theme => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\"\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding:10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen\n        }),\n        \"&:focus-within\":{\n            backgroundColor:theme.palette.background.default,\n        }\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\"\n    },\n    stepNumberContainer: {\n        marginRight: 10,\n    },\n    stepFooter:{\n        marginTop: 32,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    \"@global\":{\n        \"code\":{\n            color: \"rgba(0, 0, 0, 0.87)\",\n            display: \"inline-block\",\n            padding: \"2px 6px\",\n            fontSize: \"14px\",\n            fontFamily:\" Consolas, \\\"Liberation Mono\\\", Menlo, Courier, monospace\",\n            borderRadius: \"2px\",\n            backgroundColor: \"rgba(255,229,100,0.1)\",\n        },\n        \"pre\":{\n            margin: \"24px 0\",\n            padding: \"12px 18px\",\n            overflow: \"auto\",\n            direction: \"ltr\",\n            borderRadius: \"4px\",\n            backgroundColor: \"#272c34\",\n            color:\"#fff\",\n        }\n    },\n\n}));\n\nconst steps = [\n    {\n        title: \"存储端配置\",\n        optional: false\n    },\n    {\n        title: \"上传路径\",\n        optional: false\n    },\n    {\n        title: \"直链设置\",\n        optional: false\n    },\n    {\n        title: \"上传限制\",\n        optional: false\n    },\n    {\n        title: \"完成\",\n        optional: false\n    }\n];\n\nexport default function RemoteGuide(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped, ] = React.useState(new Set());\n    const [magicVar,setMagicVar] = useState(\"\");\n    const [useCDN,setUseCDN] = useState(\"false\");\n    const [policy, setPolicy] = useState(props.policy?props.policy:{\n        Type:\"remote\",\n        Name:\"\",\n        Server:\"https://example.com:5212\",\n        SecretKey:randomStr(64),\n        DirNameRule: \"uploads/{year}/{month}/{day}\",\n        AutoRename: \"true\",\n        FileNameRule: \"{randomkey8}_{originname}\",\n        IsOriginLinkEnable:\"false\",\n        BaseURL:\"\",\n        IsPrivate:\"true\",\n        MaxSize:\"0\",\n        OptionsSerialized:{\n            file_type:\"\",\n        },\n    });\n\n    const handleChange = name => event => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value\n        });\n    };\n\n    const handleOptionChange = name => event => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized:{\n                ...policy.OptionsSerialized,\n                [name]: event.target.value\n            },\n        });\n    };\n\n    const isStepSkipped = step => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const testSlave = ()=>{\n        setLoading(true);\n\n        // 测试路径是否可用\n        API.post(\"/admin/policy/test/slave\", {\n            server: policy.Server,\n            secret:policy.SecretKey,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"通信正常\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const submitPolicy = e => {\n        e.preventDefault();\n        setLoading(true);\n\n        const policyCopy = {...policy};\n        policyCopy.OptionsSerialized = {...policyCopy.OptionsSerialized};\n\n        // 处理存储策略\n        if (useCDN === \"false\" || policy.IsOriginLinkEnable === \"false\"){\n            policyCopy.BaseURL = \"\"\n        }\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsOriginLinkEnable = policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\",\");\n        if (policyCopy.OptionsSerialized.file_type.length === 1 && policyCopy.OptionsSerialized.file_type[0] === \"\"){\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"), \"success\");\n                setActiveStep(5);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n\n    }\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>{props.policy ? \"修改\" : \"添加\"}从机存储策略</Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e=>{\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n                    <Alert severity=\"info\" style={{marginBottom:10,}}>\n                        从机存储策略允许你使用同样运行了 Cloudreve 的服务器作为存储端，\n                        用户上传下载流量通过 HTTP 直传。\n                    </Alert>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                将和主站相同版本的 Cloudreve 程序拷贝至要作为从机的服务器上。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                下方为系统为您随机生成的从机端密钥，一般无需改动，如果有自定义需求，\n                                可将您的密钥填入下方：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        从机密钥\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        inputProps={{\n                                            minlength:64,\n                                        }}\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                修改从机配置文件。<br/>在从机端 Cloudreve 的同级目录下新建\n                                <code>conf.ini</code>文件，填入从机配置，启动/重启从机端 Cloudreve。\n                                以下为一个可供参考的配置例子，其中密钥部分已帮您填写为上一步所生成的。\n                            </Typography>\n                                <pre>\n                                    [System]<br/>\n                                    Mode = slave<br/>\n                                    Listen = :5212<br/>\n                                    <br/>\n                                    [Slave]<br/>\n                                    Secret = {policy.SecretKey}<br/>\n                                    <br/>\n                                    [CORS]<br/>\n                                    AllowOrigins = *<br/>\n                                    AllowMethods = OPTIONS,GET,POST<br/>\n                                    AllowHeaders = *<br/>\n                                </pre>\n                            <Typography variant={\"body2\"}>\n                                从机端配置文件格式大致与主站端相同，区别在于：\n                                <ul>\n                                    <li>\n                                        <code>System</code>\n                                        分区下的\n                                        <code>mode</code>\n                                        字段必须更改为<code>slave</code>\n                                    </li>\n                                    <li>\n                                        必须指定<code>Slave</code>分区下的<code>Secret</code>\n                                        字段，其值为第二步里填写或生成的密钥。\n                                    </li>\n                                    <li>必须启动跨域配置，即<code>CORS</code>字段的内容，\n                                    具体可参考上文范例或官方文档。如果配置不正确，用户将无法通过 Web 端向从机上传文件。\n                                    </li>\n                                </ul>\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                填写从机地址。<br/>\n                                如果主站启用了 HTTPS，从机也需要启用，并在下方填入 HTTPS 协议的地址。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        从机地址\n                                    </InputLabel>\n                                    <Input\n                                        fullWidth\n                                        required\n                                        type={\"url\"}\n                                        value={policy.Server}\n                                        onChange={handleChange(\"Server\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                完成以上步骤后，你可以点击下方的测试按钮测试通信是否正常。\n                            </Typography>\n                            <div className={classes.form}>\n                                <Button\n                                    disabled={loading}\n                                    onClick={()=>testSlave()}\n                                    variant={\"outlined\"}\n                                    color={\"primary\"}\n                                >\n                                    测试从机通信\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e=> {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\n                                从机的 Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"path\")}\n                                >\n                                    路径魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储目录\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"file\")}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"开启重命名\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不开启\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            命名规则\n                                        </InputLabel>\n                                        <Input\n                                            required={policy.AutoRename === \"true\"}\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={()=> setActiveStep(0)}\n                        >\n                            上一步\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e=> {\n                        e.preventDefault();\n                       setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否允许获取文件永久直链？\n                                <br />\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={handleChange(\n                                            \"IsOriginLinkEnable\"\n                                        )}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"禁止\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.IsOriginLinkEnable === \"true\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    是否要对下载/直链使用 CDN？\n                                    <br />\n                                    开启后，用户访问文件时的 URL 中的域名部分会被替换为 CDN 域名。\n                                </Typography>\n\n                                <div className={classes.form}>\n                                    <FormControl required component=\"fieldset\">\n                                        <RadioGroup\n                                            required\n                                            value={useCDN}\n                                            onChange={e=>{\n                                                if (e.target.value === \"false\"){\n                                                    setPolicy({\n                                                        ...policy,\n                                                        BaseURL: \"\"\n                                                    });\n                                                }\n                                                setUseCDN(e.target.value)\n                                            }}\n                                            row\n                                        >\n                                            <FormControlLabel\n                                                value={\"true\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"使用\"\n                                            />\n                                            <FormControlLabel\n                                                value={\"false\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"不使用\"\n                                            />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </div>\n\n                            </div>\n                        </div>\n\n                        <Collapse in={useCDN === \"true\"}>\n                            <div className={classes.subStepContainer}>\n                                <div className={classes.stepNumberContainer}>\n                                    <div className={classes.stepNumber}>3</div>\n                                </div>\n                                <div className={classes.subStepContent}>\n                                    <Typography variant={\"body2\"}>\n                                        选择协议并填写 CDN 域名\n                                    </Typography>\n\n                                    <div className={classes.form}>\n                                        <DomainInput\n                                            value={policy.BaseURL}\n                                            onChange={handleChange(\"BaseURL\")}\n                                            required={policy.IsOriginLinkEnable === \"true\" && useCDN === \"true\"}\n                                            label={\"CDN 前缀\"}\n                                        />\n                                    </div>\n\n                                </div>\n                            </div>\n                        </Collapse>\n\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={()=> setActiveStep(1)}\n                        >\n                            上一步\n                        </Button>\n                        {\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form className={classes.stepContent}\n                      onSubmit={e=> {\n                    e.preventDefault();\n                    setActiveStep(4)\n                }}\n                >\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传的单文件大小？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.MaxSize === \"0\" ? \"false\" : \"true\"}\n                                        onChange={e=>{\n                                            if(e.target.value === \"true\"){\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\",\n                                                });\n                                            }else{\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\",\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入限制：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"单文件大小限制\"}\n                                    />\n                                </div>\n\n                            </div>\n                        </div>\n\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>{policy.MaxSize !== \"0\" ? \"3\" : \"2\"}</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件扩展名？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.OptionsSerialized.file_type === \"\" ? \"false\" : \"true\"}\n                                        onChange={e=>{\n                                            if(e.target.value === \"true\"){\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\"jpg,png,mp4,zip,rar\",\n                                                    },\n                                                });\n                                            }else{\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\"\",\n                                                    },\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>{policy.MaxSize !== \"0\" ? \"4\" : \"3\"}</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的文件扩展名，多个请以半角逗号 , 隔开\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            扩展名列表\n                                        </InputLabel>\n                                        <Input\n                                            value={policy.OptionsSerialized.file_type}\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n\n                            </div>\n                        </div>\n\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={()=> setActiveStep(2)}\n                        >\n                            上一步\n                        </Button>\n                        {\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                最后一步，为此存储策略命名：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储策略名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={()=> setActiveStep(3)}\n                        >\n                            上一步\n                        </Button>\n                        {\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            完成\n                        </Button>\n                    </div>\n\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <>\n                <form className={classes.stepContent}>\n                    <Typography>\n                        存储策略已{props.policy ? \"保存\" : \"添加\"}！\n                    </Typography>\n                    <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                        要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\n                    </Typography>\n                </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={()=> history.push(\"/admin/policy\")}\n                        >\n                            返回存储策略列表\n                        </Button>\n                    </div>\n</>\n             )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                isSlave\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                isSlave\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport React, { useCallback, useState } from \"react\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Step from \"@material-ui/core/Step\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch } from \"react-redux\";\nimport {  toggleSnackbar } from \"../../../../actions\";\nimport Link from \"@material-ui/core/Link\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../../middleware/Api\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport { useHistory } from \"react-router\";\nimport {getNumber} from \"../../../../utils\";\n\nconst useStyles = makeStyles(theme => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\"\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default\n        }\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\"\n    },\n    stepNumberContainer: {\n        marginRight: 10\n    },\n    stepFooter: {\n        marginTop: 32\n    },\n    button: {\n        marginRight: theme.spacing(1)\n    }\n}));\n\nconst steps = [\n    {\n        title: \"存储空间\",\n        optional: false\n    },\n    {\n        title: \"上传路径\",\n        optional: false\n    },\n    {\n        title: \"直链设置\",\n        optional: false\n    },\n    {\n        title: \"上传限制\",\n        optional: false\n    },\n    {\n        title: \"完成\",\n        optional: false\n    }\n];\n\nexport default function RemoteGuide(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped, ] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [policy, setPolicy] = useState(props.policy?props.policy:{\n        Type: \"qiniu\",\n        Name: \"\",\n        SecretKey: \"\",\n        AccessKey: \"\",\n        BaseURL: \"\",\n        IsPrivate: \"true\",\n        DirNameRule: \"uploads/{year}/{month}/{day}\",\n        AutoRename: \"true\",\n        FileNameRule: \"{randomkey8}_{originname}\",\n        IsOriginLinkEnable: \"false\",\n        MaxSize: \"0\",\n        OptionsSerialized: {\n            file_type: \"\",\n            mimetype:\"\",\n        }\n    });\n\n    const handleChange = name => event => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value\n        });\n    };\n\n    const handleOptionChange = name => event => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value\n            }\n        });\n    };\n\n    const isStepSkipped = step => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submitPolicy = e => {\n        e.preventDefault();\n        setLoading(true);\n\n        const policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"存储策略已\"+ (props.policy ? \"保存\" : \"添加\"), \"success\");\n                setActiveStep(5);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>{props.policy ? \"修改\" : \"添加\"} 七牛 存储策略</Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>0</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在使用七牛存储策略前，请确保您在 参数设置 - 站点信息\n                                - 站点URL 中填写的 地址与实际相符，并且\n                                <strong>能够被外网正常访问</strong>。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                前往\n                                <Link\n                                    href={\"https://portal.qiniu.com/create\"}\n                                    target={\"_blank\"}\n                                >\n                                    七牛控制面板\n                                </Link>\n                                创建对象存储资源。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在下方填写您在七牛创建存储空间时指定的“存储空间名称”：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储空间名称\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.BucketName}\n                                        onChange={handleChange(\"BucketName\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在下方选择您创建的空间类型，推荐选择“私有空间”以获得更高的安全性，私有空间无法开启“获取直链”功能。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsPrivate}\n                                        onChange={handleChange(\"IsPrivate\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"私有\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"公有\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                填写您为存储空间绑定的 CDN 加速域名。\n                            </Typography>\n                            <div className={classes.form}>\n                                <DomainInput\n                                    value={policy.BaseURL}\n                                    onChange={handleChange(\"BaseURL\")}\n                                    required\n                                    label={\"CDN 加速域名\"}\n                                />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在七牛控制面板进入 个人中心 -\n                                密钥管理，在下方填写获得到的 AK、SK。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        AK\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.AccessKey}\n                                        onChange={handleChange(\"AccessKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        SK\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\n                                从机的\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"path\")}\n                                >\n                                    路径魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储目录\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"file\")}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"开启重命名\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不开启\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            命名规则\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            上一步\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否允许获取文件永久直链？\n                                <br />\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={e=>{\n                                            if (policy.IsPrivate === \"true\" && e.target.value===\"true\"){\n                                                ToggleSnackbar(\"top\", \"right\",\"私有空间无法开启此功能\", \"warning\");\n                                                return\n                                            }\n                                            handleChange(\n                                            \"IsOriginLinkEnable\"\n                                            )(e)\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"禁止\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(4);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传的单文件大小？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={e => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\"\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\"\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入限制：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"单文件大小限制\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件扩展名？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={e => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\"\n                                                    }\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\"\n                                                    }\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\n                                    隔开\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            扩展名列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(3,[\n                                    policy.MaxSize !== \"0\",\n                                    policy.OptionsSerialized.file_type !== \"\",\n                                ])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件 MimeType？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .mimetype === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={e => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        mimetype:\n                                                            \"image/*\"\n                                                    }\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        mimetype: \"\"\n                                                    }\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.mimetype !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {getNumber(4,[\n                                        policy.MaxSize !== \"0\",\n                                        policy.OptionsSerialized.file_type !== \"\",\n                                    ])}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的 MimeType，多个请以半角逗号 ,\n                                    隔开。七牛服务器会侦测文件内容以判断 MimeType，再用判断值跟指定值进行匹配，匹配成功则允许上传\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            MimeType 列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .mimetype\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"mimetype\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}></div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                最后一步，为此存储策略命名：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储策略名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(3)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            完成\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>存储策略已{props.policy ? \"保存\" : \"添加\"}！</Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            返回存储策略列表\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport React, { useCallback, useState } from \"react\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Step from \"@material-ui/core/Step\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../../actions\";\nimport Link from \"@material-ui/core/Link\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../../middleware/Api\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport { useHistory } from \"react-router\";\nimport {getNumber} from \"../../../../utils\";\n\nconst useStyles = makeStyles(theme => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\"\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default\n        }\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\"\n    },\n    stepNumberContainer: {\n        marginRight: 10\n    },\n    stepFooter: {\n        marginTop: 32\n    },\n    button: {\n        marginRight: theme.spacing(1)\n    },\n    viewButtonLabel: { textTransform: \"none\" },\n    \"@global\":{\n        \"code\":{\n            color: \"rgba(0, 0, 0, 0.87)\",\n            display: \"inline-block\",\n            padding: \"2px 6px\",\n            fontFamily:\" Consolas, \\\"Liberation Mono\\\", Menlo, Courier, monospace\",\n            borderRadius: \"2px\",\n            backgroundColor: \"rgba(255,229,100,0.1)\",\n        },\n    },\n}));\n\nconst steps = [\n    {\n        title: \"存储空间\",\n        optional: false\n    },\n    {\n        title: \"上传路径\",\n        optional: false\n    },\n    {\n        title: \"直链设置\",\n        optional: false\n    },\n    {\n        title: \"上传限制\",\n        optional: false\n    },\n    {\n        title: \"跨域策略\",\n        optional: true\n    },\n    {\n        title: \"完成\",\n        optional: false\n    }\n];\n\nexport default function OSSGuide(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped, setSkipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [useCDN, setUseCDN] = useState(\"false\");\n    const [policy, setPolicy] = useState(props.policy?props.policy:{\n        Type: \"oss\",\n        Name: \"\",\n        SecretKey: \"\",\n        AccessKey: \"\",\n        BaseURL: \"\",\n        Server: \"\",\n        IsPrivate: \"true\",\n        DirNameRule: \"uploads/{year}/{month}/{day}\",\n        AutoRename: \"true\",\n        FileNameRule: \"{randomkey8}_{originname}\",\n        IsOriginLinkEnable: \"false\",\n        MaxSize: \"0\",\n        OptionsSerialized: {\n            file_type: \"\",\n        }\n    });\n    const [policyID,setPolicyID] = useState(props.policy?props.policy.ID:0);\n\n    const handleChange = name => event => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value\n        });\n    };\n\n    const handleOptionChange = name => event => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value\n            }\n        });\n    };\n\n    const isStepSkipped = step => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submitPolicy = e => {\n        e.preventDefault();\n        setLoading(true);\n\n        const policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        if (useCDN === \"false\"){\n            policyCopy.BaseURL = \"\"\n        }\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy\n        })\n            .then(response => {\n                ToggleSnackbar(\"top\", \"right\", \"存储策略已\"+ (props.policy ? \"保存\" : \"添加\"), \"success\");\n                setActiveStep(4);\n                setPolicyID(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    const createCORS = ()=>{\n        setLoading(true);\n        API.post(\"/admin/policy/cors\", {\n            id: policyID\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"跨域策略已添加\", \"success\");\n                setActiveStep(5);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n    }\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>{props.policy ? \"修改\" : \"添加\"} 阿里云 OSS 存储策略</Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>0</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在使用 阿里云 OSS 储策略前，请确保您在 参数设置 - 站点信息\n                                - 站点URL 中填写的 地址与实际相符，并且\n                                <strong>能够被外网正常访问</strong>。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                前往\n                                <Link\n                                    href={\"https://oss.console.aliyun.com/overview\"}\n                                    target={\"_blank\"}\n                                >\n                                    OSS 管理控制台\n                                </Link>\n                                创建 Bucket。注意：创建空间类型只能选择<code>标准存储</code>或<code>低频访问</code>\n                                ，暂不支持<code>归档存储</code>\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在下方填写您创建 Bucket 时指定的<code>Bucket 名称</code>：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        Bucket 名称\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.BucketName}\n                                        onChange={handleChange(\"BucketName\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在下方选择您创建的空间的读写权限类型，推荐选择“私有”以获得更高的安全性，私有空间无法开启“获取直链”功能。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsPrivate}\n                                        onChange={handleChange(\"IsPrivate\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"私有\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"公共读\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                转到所创建 Bucket 的概览页面，填写<code>访问域名</code>栏目下\n                                <code>外网访问</code> 一行中间的 <code>EndPoint（地域节点）</code>\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        EndPoint\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Server}\n                                        onChange={handleChange(\"Server\")}\n                                        inputProps={{\n                                            pattern:\"(?:(?:(?<thld>[\\\\w\\\\-]*)(?:\\\\.))?(?<sld>[\\\\w\\\\-]*))\\\\.(?<tld>[\\\\w\\\\-]*)\" ,\n                                            title:\"格式不合法，只需输入域名部分即可\"\n                                        }}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否要使用配套的 阿里云CDN 加速 OSS 访问？\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={useCDN}\n                                        onChange={e=>{\n                                            setUseCDN(e.target.value)\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"使用\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不使用\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={useCDN === \"true\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>6</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    前往\n                                    <Link href={\"https://cdn.console.aliyun.com/domain/list\"} target={\"_blank\"}>\n                                        阿里云 CDN 管理控制台\n                                    </Link>\n                                    创建 CDN 加速域名，并设定源站为刚创建的 OSS Bucket。在下方填写\n                                    CDN 加速域名，并选择是否使用 HTTPS：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <DomainInput\n                                        value={policy.BaseURL}\n                                        onChange={handleChange(\"BaseURL\")}\n                                        required={useCDN === \"true\"}\n                                        label={\"CDN 加速域名\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>{getNumber(6,[\n                                useCDN === \"true\"\n                            ])}</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在阿里云\n                                <Link href={\"https://usercenter.console.aliyun.com/#/manage/ak\"} target={\"_blank\"}>\n                                    安全信息管理\n                                </Link>\n                                页面获取 用户 AccessKey，并填写在下方。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        AccessKey ID\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        inputProps={{\n                                            pattern:\"\\\\S+\" ,\n                                            title:\"不能含有空格\"\n                                        }}\n                                        value={policy.AccessKey}\n                                        onChange={handleChange(\"AccessKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        Access Key Secret\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        inputProps={{\n                                            pattern:\"\\\\S+\" ,\n                                            title:\"不能含有空格\"\n                                        }}\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>{getNumber(7,[\n                                useCDN === \"true\"\n                            ])}</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                为此存储策略命名：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储策略名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\n                                从机的\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"path\")}\n                                >\n                                    路径魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储目录\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"file\")}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"开启重命名\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不开启\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            命名规则\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            上一步\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否允许获取文件永久直链？\n                                <br />\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={e=>{\n                                            if (policy.IsPrivate === \"true\" && e.target.value===\"true\"){\n                                                ToggleSnackbar(\"top\", \"right\",\"私有空间无法开启此功能\", \"warning\");\n                                                return\n                                            }\n                                            handleChange(\n                                            \"IsOriginLinkEnable\"\n                                            )(e)\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"禁止\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={submitPolicy}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传的单文件大小？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={e => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\"\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\"\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入限制：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"单文件大小限制\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件扩展名？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={e => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\"\n                                                    }\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\"\n                                                    }\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\n                                    隔开\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            扩展名列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}/>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                OSS Bucket 需要正确配置跨域策略后才能使用 Web 端上传文件，Cloudreve\n                                可以帮您自动设置，您也可以参考文档步骤手动设置。如果您已设置过此 Bucket 的跨域策略，此步骤可以跳过。\n                            </Typography>\n                            <div className={classes.form}>\n                                <Button\n                                    disabled={loading}\n                                    color={\"secondary\"}\n                                    variant={\"contained\"}\n                                    className={classes.button}\n                                    onClick={()=>createCORS()}\n                                    classes={{ label: classes.viewButtonLabel }}\n                                >\n                                    让 Cloudreve 帮我设置\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={()=>{\n                                setActiveStep(prevActiveStep => prevActiveStep + 1);\n                                setSkipped(prevSkipped => {\n                                    const newSkipped = new Set(prevSkipped.values());\n                                    newSkipped.add(activeStep);\n                                    return newSkipped;\n                                });\n                            }\n\n                            }\n                        >\n                            跳过\n                        </Button>{\" \"}\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>存储策略已{props.policy ? \"保存\" : \"添加\"}！</Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            返回存储策略列表\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport React, { useCallback, useState } from \"react\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Step from \"@material-ui/core/Step\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch } from \"react-redux\";\nimport {  toggleSnackbar } from \"../../../../actions\";\nimport Link from \"@material-ui/core/Link\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../../middleware/Api\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport { useHistory } from \"react-router\";\n\nconst useStyles = makeStyles(theme => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\"\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default\n        }\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\"\n    },\n    stepNumberContainer: {\n        marginRight: 10\n    },\n    stepFooter: {\n        marginTop: 32\n    },\n    button: {\n        marginRight: theme.spacing(1)\n    }\n}));\n\nconst steps = [\n    {\n        title: \"存储空间\",\n        optional: false\n    },\n    {\n        title: \"上传路径\",\n        optional: false\n    },\n    {\n        title: \"直链设置\",\n        optional: false\n    },\n    {\n        title: \"上传限制\",\n        optional: false\n    },\n    {\n        title: \"完成\",\n        optional: false\n    }\n];\n\nexport default function UpyunGuide(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped, ] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [policy, setPolicy] = useState(props.policy?props.policy:{\n        Type: \"upyun\",\n        Name: \"\",\n        SecretKey: \"\",\n        AccessKey: \"\",\n        BaseURL: \"\",\n        IsPrivate: \"false\",\n        DirNameRule: \"uploads/{year}/{month}/{day}\",\n        AutoRename: \"true\",\n        FileNameRule: \"{randomkey8}_{originname}\",\n        IsOriginLinkEnable: \"false\",\n        MaxSize: \"0\",\n        OptionsSerialized: {\n            file_type: \"\",\n            token:\"\",\n        }\n    });\n\n    const handleChange = name => event => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value\n        });\n    };\n\n    const handleOptionChange = name => event => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value\n            }\n        });\n    };\n\n    const isStepSkipped = step => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submitPolicy = e => {\n        e.preventDefault();\n        setLoading(true);\n\n        const policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"存储策略已\"+ (props.policy ? \"保存\" : \"添加\"), \"success\");\n                setActiveStep(5);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>{props.policy ? \"修改\" : \"添加\"} 又拍云 存储策略</Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>0</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在使用又拍云存储策略前，请确保您在 参数设置 - 站点信息\n                                - 站点URL 中填写的 地址与实际相符，并且\n                                <strong>能够被外网正常访问</strong>。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                前往\n                                <Link\n                                    href={\"https://console.upyun.com/services/create/file/\"}\n                                    target={\"_blank\"}\n                                >\n                                    又拍云面板\n                                </Link>\n                                创建云存储服务。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在下方填写所创建的服务名称：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        服务名称\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.BucketName}\n                                        onChange={handleChange(\"BucketName\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                为此服务创建或授权有读取、写入、删除权限的操作员，然后将操作员信息填写在下方：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        操作员名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.AccessKey}\n                                        onChange={handleChange(\"AccessKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        操作员密码\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                填写为云存储服务绑定的域名，并根据实际情况选择是否使用 HTTPS：\n                            </Typography>\n                            <div className={classes.form}>\n                                <DomainInput\n                                    value={policy.BaseURL}\n                                    onChange={handleChange(\"BaseURL\")}\n                                    required\n                                    label={\"加速域名\"}\n                                />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                此步骤可保持默认并跳过，但是强烈建议您跟随此步骤操作。<br/>\n                                前往所创建云存储服务的 功能配置 面板，转到 访问配置 选项卡，开启 Token 防盗链并设定密码。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsPrivate}\n                                        onChange={handleChange(\"IsPrivate\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"已开启 Token 防盗链\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"未开启 Token 防盗链\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.IsPrivate === \"true\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    6\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    填写您所设置的 Token 防盗链 密钥\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            Token 防盗链 密钥\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .token\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"token\"\n                                            )}\n                                            required={policy.IsPrivate === \"true\"}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\n                                从机的\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"path\")}\n                                >\n                                    路径魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储目录\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"file\")}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"开启重命名\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不开启\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            命名规则\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            上一步\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否允许获取文件永久直链？\n                                <br />\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={e=>{\n                                            if (policy.IsPrivate === \"true\" && e.target.value===\"true\"){\n                                                ToggleSnackbar(\"top\", \"right\",\"开启 Token 防盗链后无法使用直链功能\", \"warning\");\n                                                return\n                                            }\n                                            handleChange(\n                                            \"IsOriginLinkEnable\"\n                                            )(e)\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"禁止\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(4);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传的单文件大小？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={e => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\"\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\"\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入限制：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"单文件大小限制\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件扩展名？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={e => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\"\n                                                    }\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\"\n                                                    }\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\n                                    隔开\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            扩展名列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}></div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                最后一步，为此存储策略命名：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储策略名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(3)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            完成\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>存储策略已{props.policy ? \"保存\" : \"添加\"}！</Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            返回存储策略列表\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport React, { useCallback, useState } from \"react\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Step from \"@material-ui/core/Step\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../../actions\";\nimport Link from \"@material-ui/core/Link\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../../middleware/Api\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport { useHistory } from \"react-router\";\nimport {getNumber} from \"../../../../utils\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst useStyles = makeStyles(theme => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\"\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default\n        }\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\"\n    },\n    stepNumberContainer: {\n        marginRight: 10\n    },\n    stepFooter: {\n        marginTop: 32\n    },\n    button: {\n        marginRight: theme.spacing(1)\n    },\n    viewButtonLabel: { textTransform: \"none\" },\n    \"@global\":{\n        \"code\":{\n            color: \"rgba(0, 0, 0, 0.87)\",\n            display: \"inline-block\",\n            padding: \"2px 6px\",\n            fontFamily:\" Consolas, \\\"Liberation Mono\\\", Menlo, Courier, monospace\",\n            borderRadius: \"2px\",\n            backgroundColor: \"rgba(255,229,100,0.1)\",\n        },\n    },\n}));\n\nconst steps = [\n    {\n        title: \"存储空间\",\n        optional: false\n    },\n    {\n        title: \"上传路径\",\n        optional: false\n    },\n    {\n        title: \"直链设置\",\n        optional: false\n    },\n    {\n        title: \"上传限制\",\n        optional: false\n    },\n    {\n        title: \"跨域策略\",\n        optional: true\n    },\n    {\n        title: \"云函数回调\",\n        optional: true\n    },\n    {\n        title: \"完成\",\n        optional: false\n    }\n];\n\nexport default function COSGuide(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped, setSkipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [useCDN, setUseCDN] = useState(\"false\");\n    const [policy, setPolicy] = useState(props.policy?props.policy:{\n        Type: \"cos\",\n        Name: \"\",\n        SecretKey: \"\",\n        AccessKey: \"\",\n        BaseURL: \"\",\n        Server: \"\",\n        IsPrivate: \"true\",\n        DirNameRule: \"uploads/{year}/{month}/{day}\",\n        AutoRename: \"true\",\n        FileNameRule: \"{randomkey8}_{originname}\",\n        IsOriginLinkEnable: \"false\",\n        MaxSize: \"0\",\n        OptionsSerialized: {\n            file_type: \"\",\n        }\n    });\n    const [policyID,setPolicyID] = useState(props.policy?props.policy.ID:0);\n    const [region,setRegion] = useState(\"ap-chengdu\");\n\n    const handleChange = name => event => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value\n        });\n    };\n\n    const handleOptionChange = name => event => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value\n            }\n        });\n    };\n\n    const isStepSkipped = step => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submitPolicy = e => {\n        e.preventDefault();\n        setLoading(true);\n\n        const policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        if (useCDN === \"false\"){\n            policyCopy.BaseURL = policy.Server\n        }\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy\n        })\n            .then(response => {\n                ToggleSnackbar(\"top\", \"right\", \"存储策略已\"+ (props.policy ? \"保存\" : \"添加\"), \"success\");\n                setActiveStep(4);\n                setPolicyID(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    const createCORS = ()=>{\n        setLoading(true);\n        API.post(\"/admin/policy/cors\", {\n            id: policyID\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"跨域策略已添加\", \"success\");\n                setActiveStep(5);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n    }\n\n    const creatCallback = ()=>{\n        setLoading(true);\n        API.post(\"/admin/policy/scf\", {\n            id: policyID,\n            region:region,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"回调云函数已添加\", \"success\");\n                setActiveStep(6);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    }\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>{props.policy ? \"修改\" : \"添加\"} 腾讯云 COS 存储策略</Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>0</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在使用 腾讯云 COS 储策略前，请确保您在 参数设置 - 站点信息\n                                - 站点URL 中填写的 地址与实际相符，并且\n                                <strong>能够被外网正常访问</strong>。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                前往\n                                <Link\n                                    href={\"https://console.cloud.tencent.com/cos5\"}\n                                    target={\"_blank\"}\n                                >\n                                    COS 管理控制台\n                                </Link>\n                                创建存储桶。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                转到所创建存储桶的基础配置页面，将<code>空间名称</code>填写在下方：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        空间名称\n                                    </InputLabel>\n                                    <Input\n                                        inputProps={{\n                                            pattern:\"[a-z0-9-]+-[0-9]+\",\n                                            title:\"空间名格式不正确, 举例：ccc-1252109809\"\n                                        }}\n                                        required\n                                        value={policy.BucketName}\n                                        onChange={handleChange(\"BucketName\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在下方选择您创建的空间的访问权限类型，推荐选择\n                                <code>私有读写</code>\n                                以获得更高的安全性，私有空间无法开启“获取直链”功能。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsPrivate}\n                                        onChange={handleChange(\"IsPrivate\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"私有读写\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"公共读私有写\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                转到所创建 Bucket 的基础配置，填写<code>基本信息</code>栏目下\n                                给出的 <code>访问域名</code>\n                            </Typography>\n                            <div className={classes.form}>\n                                <DomainInput\n                                    value={policy.Server}\n                                    onChange={handleChange(\"Server\")}\n                                    required\n                                    label={\"访问域名\"}\n                                />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否要使用配套的 腾讯云CDN 加速 COS 访问？\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={useCDN}\n                                        onChange={e=>{\n                                            setUseCDN(e.target.value)\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"使用\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不使用\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={useCDN === \"true\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>6</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    前往\n                                    <Link href={\"https://console.cloud.tencent.com/cdn/access/guid\"} target={\"_blank\"}>\n                                        腾讯云 CDN 管理控制台\n                                    </Link>\n                                    创建 CDN 加速域名，并设定源站为刚创建的 COS 存储桶。在下方填写\n                                    CDN 加速域名，并选择是否使用 HTTPS：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <DomainInput\n                                        value={policy.BaseURL}\n                                        onChange={handleChange(\"BaseURL\")}\n                                        required={useCDN === \"true\"}\n                                        label={\"CDN 加速域名\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>{getNumber(6,[\n                                useCDN === \"true\"\n                            ])}</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在腾讯云\n                                <Link href={\"https://console.cloud.tencent.com/cam/capi\"} target={\"_blank\"}>\n                                    访问密钥\n                                </Link>\n                                页面获取 一对访问密钥，并填写在下方。请确保这对密钥拥有 COS 和 SCF 服务的访问权限。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        SecretId\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        inputProps={{\n                                            pattern:\"\\\\S+\" ,\n                                            title:\"不能含有空格\"\n                                        }}\n                                        value={policy.AccessKey}\n                                        onChange={handleChange(\"AccessKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        SecretKey\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        inputProps={{\n                                            pattern:\"\\\\S+\" ,\n                                            title:\"不能含有空格\"\n                                        }}\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>{getNumber(7,[\n                                useCDN === \"true\"\n                            ])}</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                为此存储策略命名：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储策略名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\n                                从机的\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"path\")}\n                                >\n                                    路径魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储目录\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"file\")}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"开启重命名\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不开启\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            命名规则\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            上一步\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否允许获取文件永久直链？\n                                <br />\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={e=>{\n                                            if (policy.IsPrivate === \"true\" && e.target.value===\"true\"){\n                                                ToggleSnackbar(\"top\", \"right\",\"私有空间无法开启此功能\", \"warning\");\n                                                return\n                                            }\n                                            handleChange(\n                                            \"IsOriginLinkEnable\"\n                                            )(e)\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"禁止\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={submitPolicy}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传的单文件大小？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={e => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\"\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\"\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入限制：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"单文件大小限制\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件扩展名？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={e => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\"\n                                                    }\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\"\n                                                    }\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\n                                    隔开\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            扩展名列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <form className={classes.stepContent}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}/>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                COS 存储桶 需要正确配置跨域策略后才能使用 Web 端上传文件，Cloudreve\n                                可以帮您自动设置，您也可以参考文档步骤手动设置。如果您已设置过此 Bucket 的跨域策略，此步骤可以跳过。\n                            </Typography>\n                            <div className={classes.form}>\n                                <Button\n                                    disabled={loading}\n                                    color={\"secondary\"}\n                                    variant={\"contained\"}\n                                    className={classes.button}\n                                    onClick={()=>createCORS()}\n                                    classes={{ label: classes.viewButtonLabel }}\n                                >\n                                    让 Cloudreve 帮我设置\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={()=>{\n                                setActiveStep(prevActiveStep => prevActiveStep + 1);\n                                setSkipped(prevSkipped => {\n                                    const newSkipped = new Set(prevSkipped.values());\n                                    newSkipped.add(activeStep);\n                                    return newSkipped;\n                                });\n                            }\n\n                            }\n                        >\n                            跳过\n                        </Button>{\" \"}\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <form className={classes.stepContent}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}/>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                COS 存储桶 客户端直传需要借助腾讯云的\n                                 <Link href={\"https://console.cloud.tencent.com/scf/index?rid=16\"} target={\"_blank\"}>云函数</Link>\n                                 产品以确保上传回调可控。如果您打算将此存储策略自用，或者分配给可信赖用户组，此步骤可以跳过。\n                                如果是作为公有使用，请务必创建回调云函数。<br/><br/>\n                            </Typography>\n                            <Typography variant={\"body2\"}>Cloudreve 可以尝试帮你自动创建回调云函数，请选择 COS 存储桶 所在地域后继续。\n                                创建可能会花费数秒钟，请耐心等待。创建前请确保您的腾讯云账号已开启云函数服务。</Typography>\n\n                            <div className={classes.form}>\n                                <FormControl>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储桶所在地区\n                                    </InputLabel>\n                                    <Select\n                                        value={region}\n                                        onChange={e=>setRegion(e.target.value)}\n                                        required\n                                    >\n                                        <MenuItem value={\"ap-beijing\"}>华北地区(北京)</MenuItem>\n                                        <MenuItem value={\"ap-chengdu\"}>西南地区(成都)</MenuItem>\n                                        <MenuItem value={\"ap-guangzhou\"}>华南地区(广州)</MenuItem>\n                                        <MenuItem value={\"ap-guangzhou-open\"}>华南地区(广州Open)</MenuItem>\n                                        <MenuItem value={\"ap-hongkong\"}>港澳台地区(中国香港)</MenuItem>\n                                        <MenuItem value={\"ap-mumbai\"}>亚太南部(孟买)</MenuItem>\n                                        <MenuItem value={\"ap-shanghai\"}>华东地区(上海)</MenuItem>\n                                        <MenuItem value={\"ap-singapore\"}>亚太东南(新加坡)</MenuItem>\n                                        <MenuItem value={\"na-siliconvalley\"}>美国西部(硅谷)</MenuItem>\n                                        <MenuItem value={\"na-toronto\"}>北美地区(多伦多)</MenuItem>\n                                    </Select>\n                                </FormControl>\n                            </div>\n\n                            <div className={classes.form}>\n                                <Button\n                                    disabled={loading}\n                                    color={\"secondary\"}\n                                    variant={\"contained\"}\n                                    className={classes.button}\n                                    onClick={()=>creatCallback()}\n                                    classes={{ label: classes.viewButtonLabel }}\n                                >\n                                    让 Cloudreve 帮我创建\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={()=>{\n                                setActiveStep(prevActiveStep => prevActiveStep + 1);\n                                setSkipped(prevSkipped => {\n                                    const newSkipped = new Set(prevSkipped.values());\n                                    newSkipped.add(activeStep);\n                                    return newSkipped;\n                                });\n                            }\n\n                            }\n                        >\n                            跳过\n                        </Button>{\" \"}\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 6 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>存储策略已{props.policy ? \"保存\" : \"添加\"}！</Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            返回存储策略列表\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Step from \"@material-ui/core/Step\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch } from \"react-redux\";\nimport {  toggleSnackbar } from \"../../../../actions\";\nimport Link from \"@material-ui/core/Link\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../../middleware/Api\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport { useHistory } from \"react-router\";\nimport AlertDialog from \"../../Dialogs/Alert\";\n\nconst useStyles = makeStyles(theme => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\"\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default\n        }\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\"\n    },\n    stepNumberContainer: {\n        marginRight: 10\n    },\n    stepFooter: {\n        marginTop: 32\n    },\n    button: {\n        marginRight: theme.spacing(1)\n    },\n    viewButtonLabel: { textTransform: \"none\" },\n    \"@global\":{\n        \"code\":{\n            color: \"rgba(0, 0, 0, 0.87)\",\n            display: \"inline-block\",\n            padding: \"2px 6px\",\n            fontFamily:\" Consolas, \\\"Liberation Mono\\\", Menlo, Courier, monospace\",\n            borderRadius: \"2px\",\n            backgroundColor: \"rgba(255,229,100,0.1)\",\n        },\n    },\n}));\n\nconst steps = [\n    {\n        title: \"应用授权\",\n        optional: false\n    },\n    {\n        title: \"上传路径\",\n        optional: false\n    },\n    {\n        title: \"上传限制\",\n        optional: false\n    },\n    {\n        title: \"账号授权\",\n        optional: false\n    },\n    {\n        title: \"完成\",\n        optional: false\n    }\n];\n\nexport default function OneDriveGuide(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped,] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [policy, setPolicy] = useState(props.policy\n        ? props.policy\n        : {\n        Type: \"onedrive\",\n        Name: \"\",\n        BucketName:\"\",\n        SecretKey: \"\",\n        AccessKey: \"\",\n        BaseURL: \"\",\n        Server: \"https://graph.microsoft.com/v1.0\",\n        IsPrivate: \"true\",\n        DirNameRule: \"uploads/{year}/{month}/{day}\",\n        AutoRename: \"true\",\n        FileNameRule: \"{randomkey8}_{originname}\",\n        IsOriginLinkEnable: \"false\",\n        MaxSize: \"0\",\n        OptionsSerialized: {\n            file_type: \"\",\n            od_redirect:\"\",\n        }\n    });\n    const [policyID,setPolicyID] = useState(props.policy?props.policy.ID:0);\n    const [httpsAlert,setHttpsAlert] = useState(false);\n\n    const handleChange = name => event => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value\n        });\n    };\n\n    const handleOptionChange = name => event => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value\n            }\n        });\n    };\n\n    const isStepSkipped = step => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(()=>{\n        API.post(\"/admin/setting\", {\n            keys: [\"siteURL\"]\n        })\n            .then(response => {\n                if (!response.data.siteURL.startsWith(\"https://\")){\n                    setHttpsAlert(true);\n                }\n                if (policy.OptionsSerialized.od_redirect === \"\"){\n                    setPolicy({\n                        ...policy,\n                        OptionsSerialized:{\n                            ...policy.OptionsSerialized,\n                            od_redirect: new URL(\"/api/v3/callback/onedrive/auth\", response.data.siteURL).toString(),\n                        }\n                    })\n                }\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    },[]);\n\n    const statOAuth = () =>{\n        setLoading(true);\n        API.get(\"/admin/policy/\" + policyID + \"/oauth\", )\n            .then(response => {\n                window.location.href = response.data\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                setLoading(false);\n            });\n    }\n\n    const submitPolicy = e => {\n        e.preventDefault();\n        setLoading(true);\n\n        const policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        // baseURL处理\n        if (policyCopy.Server === \"https://graph.microsoft.com/v1.0\"){\n            policyCopy.BaseURL = \"https://login.microsoftonline.com/common/oauth2/v2.0\"\n        }else{\n            policyCopy.BaseURL = \"https://login.chinacloudapi.cn/common/oauth2\"\n        }\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy\n        })\n            .then(response => {\n                ToggleSnackbar(\"top\", \"right\", \"存储策略已\"+ (props.policy ? \"保存\" : \"添加\"), \"success\");\n                setActiveStep(3);\n                setPolicyID(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <AlertDialog\n                open={httpsAlert}\n                onClose={()=>setHttpsAlert(false)}\n                title={\"警告\"}\n                msg={\"您必须启用 HTTPS 才能使用 OneDrive 存储策略；启用后同步更改 参数设置 - 站点信息 - 站点URL。\"}\n            />\n            <Typography variant={\"h6\"}>{props.policy ? \"修改\" : \"添加\"} OneDrive 存储策略</Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                前往\n                                <Link\n                                    href={\"https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Overview\"}\n                                    target={\"_blank\"}\n                                >\n                                    Azure Active Directory 控制台 (国际版账号)\n                                </Link>\n                                {\" \"}或者{\" \"}\n                                <Link\n                                    href={\"https://portal.azure.cn/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Overview\"}\n                                    target={\"_blank\"}\n                                >\n                                    Azure Active Directory 控制台 (世纪互联账号)\n                                </Link>\n                                 并登录，登录后进入<code>Azure Active Directory</code>管理面板。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                               进入左侧 <code>应用注册</code> 菜单，并点击 <code>新注册</code> 按钮。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                填写应用注册表单。其中，名称可任取；\n                                <code>受支持的帐户类型</code> 选择为<code>任何组织目录(任何 Azure AD 目录 - 多租户)中的帐户</code>；\n                                <code>重定向 URI (可选)</code>\n                                请选择<code>Web</code>，并填写<code>{policy.OptionsSerialized.od_redirect}</code>；\n                                其他保持默认即可\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                创建完成后进入应用管理的<code>概览</code>页面，复制<code>应用程序(客户端) ID</code>\n                                并填写在下方：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        应用程序(客户端) ID (3447f073-eef3-4c60-bb68-113a86f2c39a)\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.BucketName}\n                                        onChange={handleChange(\"BucketName\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                进入应用管理页面左侧的<code>证书和密码</code>菜单，点击\n                                <code>新建客户端密码</code>\n                                按钮，<code>截止期限</code>选择为<code>从不</code>。创建完成后将客户端密码的值填写在下方：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        客户端密码(~b6iJ4n~HM.73XbsH3tRWn-8Vqhl.245B_)\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>6</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                选择您的 OneDrive 账号类型：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.Server}\n                                        onChange={handleChange(\"Server\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"https://graph.microsoft.com/v1.0/me/drive/\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"国际版\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"https://microsoftgraph.chinacloudapi.cn/v1.0/me/drive/\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"世纪互联版\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>7</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                为此存储策略命名：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储策略名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\n                                从机的\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"path\")}\n                                >\n                                    路径魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储目录\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"file\")}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"开启重命名\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不开启\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            命名规则\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            上一步\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={submitPolicy}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传的单文件大小？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={e => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\"\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\"\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入限制：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"单文件大小限制\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件扩展名？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={e => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\"\n                                                    }\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\"\n                                                    }\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\n                                    隔开\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            扩展名列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form className={classes.stepContent}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}/>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                存储策略已{props.policy ? \"保存\" : \"添加\"}，但是你需要点击下方按钮，并使用 OneDrive 登录授权以完成初始化后才能使用。\n                                日后你可以在存储策略列表页面重新进行授权。\n                                不配置cdn时,务必去专家模式  清空文件资源根URL\t\n预览/获取文件外链时生成URL的前缀\n                            </Typography>\n                            <div className={classes.form}>\n                                <Button\n                                    disabled={loading}\n                                    color={\"secondary\"}\n                                    variant={\"contained\"}\n                                    className={classes.button}\n                                    onClick={statOAuth}\n                                    classes={{ label: classes.viewButtonLabel }}\n                                >\n                                    转到授权页面\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>存储策略已添加！</Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            返回存储策略列表\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {useParams} from \"react-router\";\nimport LocalGuide from \"./Guid/LocalGuide\";\nimport RemoteGuide from \"./Guid/RemoteGuide\";\nimport QiniuGuide from \"./Guid/QiniuGuide\";\nimport OSSGuide from \"./Guid/OSSGuide\";\nimport UpyunGuide from \"./Guid/UpyunGuide\";\nimport COSGuide from \"./Guid/COSGuide\";\nimport OneDriveGuide from \"./Guid/OneDriveGuide\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    content: {\n        padding: theme.spacing(2)\n    },\n}));\n\n\nexport default function AddPolicyParent( ) {\n    const classes = useStyles();\n\n    const { type } = useParams();\n\n    return (\n        <div>\n            <Paper square className={classes.content}>\n                {type===\"local\"&&<LocalGuide/>}\n                {type===\"remote\"&&<RemoteGuide/>}\n                {type===\"qiniu\"&&<QiniuGuide/>}\n                {type===\"oss\"&&<OSSGuide/>}\n                {type===\"upyun\"&&<UpyunGuide/>}\n                {type===\"cos\"&&<COSGuide/>}\n                {type===\"onedrive\"&&<OneDriveGuide/>}\n            </Paper>\n        </div>\n    );\n}\n","import React, { useCallback, useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch } from \"react-redux\";\nimport {  toggleSnackbar } from \"../../../../actions\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Input from \"@material-ui/core/Input\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../../middleware/Api\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\n\nexport default function EditPro(props) {\n\n    const [, setLoading] = useState(false);\n    const [policy, setPolicy] = useState(props.policy);\n\n    const handleChange = name => event => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value\n        });\n    };\n\n    const handleOptionChange = name => event => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value\n            }\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submitPolicy = e => {\n        e.preventDefault();\n        setLoading(true);\n\n        const policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy\n        })\n            .then(() => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>编辑存储策略</Typography>\n            <TableContainer>\n                <form onSubmit={submitPolicy}>\n                    <Table aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>设置项</TableCell>\n                                <TableCell>值</TableCell>\n                                <TableCell>描述</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    ID\n                                </TableCell>\n                                <TableCell>{policy.ID}</TableCell>\n                                <TableCell>存储策略编号</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    类型\n                                </TableCell>\n                                <TableCell>{policy.Type}</TableCell>\n                                <TableCell>存储策略类型</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    名称\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            required\n                                            value={policy.Name}\n                                            onChange={handleChange(\"Name\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>存储策名称</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    Server\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            value={policy.Server}\n                                            onChange={handleChange(\"Server\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>存储端 Endpoint</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    BucketName\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            value={policy.BucketName}\n                                            onChange={handleChange(\"BucketName\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>存储桶标识</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    私有空间\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <RadioGroup\n                                            required\n                                            value={policy.IsPrivate}\n                                            onChange={handleChange(\"IsPrivate\")}\n                                            row\n                                        >\n                                            <FormControlLabel\n                                                value={\"true\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"是\"\n                                            />\n                                            <FormControlLabel\n                                                value={\"false\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"否\"\n                                            />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>是否为私有空间</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    文件资源根URL\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            value={policy.BaseURL}\n                                            onChange={handleChange(\"BaseURL\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>预览/获取文件外链时生成URL的前缀</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    AccessKey\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            rowsMax={10}\n                                            value={policy.AccessKey}\n                                            onChange={handleChange(\"AccessKey\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>AccessKey / 刷新Token</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    SecretKey\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            rowsMax={10}\n                                            value={policy.SecretKey}\n                                            onChange={handleChange(\"SecretKey\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>SecretKey</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    最大单文件尺寸 (Bytes)\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            type={\"number\"}\n                                            inputProps={{\n                                                min:0,\n                                                step:1,\n                                            }}\n                                            value={policy.MaxSize}\n                                            onChange={handleChange(\"MaxSize\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>最大可上传的文件尺寸，填写为0表示不限制</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    自动重命名\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <RadioGroup\n                                            required\n                                            value={policy.AutoRename}\n                                            onChange={handleChange(\"AutoRename\")}\n                                            row\n                                        >\n                                            <FormControlLabel\n                                                value={\"true\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"是\"\n                                            />\n                                            <FormControlLabel\n                                                value={\"false\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"否\"\n                                            />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>是否根据规则对上传物理文件重命名</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    存储路径\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={policy.DirNameRule}\n                                            onChange={handleChange(\"DirNameRule\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>文件物理存储路径</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    存储文件名\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\"FileNameRule\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>文件物理存储文件名</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    允许获取外链\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <RadioGroup\n                                            required\n                                            value={policy.IsOriginLinkEnable}\n                                            onChange={handleChange(\"IsOriginLinkEnable\")}\n                                            row\n                                        >\n                                            <FormControlLabel\n                                                value={\"true\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"是\"\n                                            />\n                                            <FormControlLabel\n                                                value={\"false\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"否\"\n                                            />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>是否允许获取外链。注意，某些存储策略类型不支持，即使在此开启，获取的外链也无法使用。</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    又拍云防盗链 Token\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={policy.OptionsSerialized.token}\n                                            onChange={handleOptionChange(\"token\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>仅对又拍云存储策略有效</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    允许文件扩展名\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={policy.OptionsSerialized.file_type}\n                                            onChange={handleOptionChange(\"file_type\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>留空表示不限制</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    允许的 MimeType\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={policy.OptionsSerialized.mimetype}\n                                            onChange={handleOptionChange(\"mimetype\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>仅对七牛存储策略有效</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    OneDrive 重定向地址\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={policy.OptionsSerialized.od_redirect}\n                                            onChange={handleOptionChange(\"od_redirect\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>一般添加后无需修改</TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                    <Button\n                        type={\"submit\"}\n                        color={\"primary\"}\n                        variant={\"contained\"}\n                        style={{margin:8,}}\n                    >\n                        保存更改\n                    </Button>\n                </form>\n\n            </TableContainer>\n        </div>\n    );\n}\n","import React, {useCallback, useEffect, useState} from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {useParams} from \"react-router\";\nimport LocalGuide from \"./Guid/LocalGuide\";\nimport RemoteGuide from \"./Guid/RemoteGuide\";\nimport QiniuGuide from \"./Guid/QiniuGuide\";\nimport OSSGuide from \"./Guid/OSSGuide\";\nimport UpyunGuide from \"./Guid/UpyunGuide\";\nimport COSGuide from \"./Guid/COSGuide\";\nimport OneDriveGuide from \"./Guid/OneDriveGuide\";\nimport API from \"../../../middleware/Api\";\nimport {useDispatch} from \"react-redux\";\nimport {toggleSnackbar} from \"../../../actions\";\nimport EditPro from \"./Guid/EditPro\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    content: {\n        padding: theme.spacing(2)\n    },\n}));\n\n\nexport default function EditPolicyPreload( ) {\n    const classes = useStyles();\n    const [type,setType] = useState(\"\");\n    const [policy,setPolicy] = useState({});\n\n    const { mode,id } = useParams();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n\n    useEffect(()=>{\n        setType(\"\");\n        API.get(\"/admin/policy/\" + id)\n            .then(response => {\n                response.data.IsOriginLinkEnable =  response.data.IsOriginLinkEnable ? \"true\" : \"false\";\n                response.data.AutoRename =  response.data.AutoRename ? \"true\" : \"false\";\n                response.data.MaxSize =  response.data.MaxSize.toString();\n                response.data.IsPrivate =  response.data.IsPrivate ? \"true\" : \"false\";\n                response.data.OptionsSerialized.file_type =\n                    response.data.OptionsSerialized.file_type ?\n                    response.data.OptionsSerialized.file_type.join(\",\"):\n                        \"\";\n                setPolicy(response.data);\n                setType(response.data.Type);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    },[id]);\n\n    return (\n        <div>\n            <Paper square className={classes.content}>\n                {mode === \"guide\" &&\n                    <>\n                        {type===\"local\"&&<LocalGuide policy={policy}/>}\n                        {type===\"remote\"&&<RemoteGuide policy={policy}/>}\n                        {type===\"qiniu\"&&<QiniuGuide policy={policy}/>}\n                        {type===\"oss\"&&<OSSGuide policy={policy}/>}\n                        {type===\"upyun\"&&<UpyunGuide policy={policy}/>}\n                        {type===\"cos\"&&<COSGuide policy={policy}/>}\n                        {type===\"onedrive\"&&<OneDriveGuide policy={policy}/>}\n                    </>\n                }\n\n                {mode === \"pro\" && type !== \"\" &&\n                    <EditPro policy={policy}/>\n                }\n            </Paper>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport { sizeToString } from \"../../../utils\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport {useHistory, useLocation} from \"react-router\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {Delete, Edit} from \"@material-ui/icons\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    content: {\n        padding: theme.spacing(2)\n    },\n    container: {\n        overflowX: \"auto\"\n    },\n    tableContainer: {\n        marginTop: 16\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n    },\n    headerRight: {}\n}));\n\nconst columns = [\n    { id: \"#\", label: \"#\", minWidth: 50 },\n    { id: \"name\", label: \"名称\", minWidth: 170 },\n    { id: \"type\", label: \"存储策略\", minWidth: 170 },\n    {\n        id: \"count\",\n        label: \"下属用户数\",\n        minWidth: 50,\n        align: \"right\"\n    },\n    {\n        id: \"size\",\n        label: \"最大容量\",\n        minWidth: 100,\n        align: \"right\"\n    },\n    {\n        id: \"action\",\n        label: \"操作\",\n        minWidth: 170,\n        align: \"right\"\n    }\n];\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\n\nexport default function Group() {\n    const classes = useStyles();\n    const [groups, setGroups] = useState([]);\n    const [statics, setStatics] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [policies, setPolicies] = React.useState({});\n\n    const location = useLocation();\n    const history = useHistory();\n    const query = useQuery();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(()=>{\n        if(query.get(\"code\") === \"0\"){\n            ToggleSnackbar(\"top\", \"right\", \"授权成功\", \"success\");\n        }else if (query.get(\"msg\") && query.get(\"msg\")!==\"\"){\n            ToggleSnackbar(\"top\", \"right\", query.get(\"msg\") + \", \"+ query.get(\"err\"), \"warning\");\n        }\n\n    },[location])\n\n    const loadList = () => {\n        API.post(\"/admin/group/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: \"id desc\",\n        })\n            .then(response => {\n                setGroups(response.data.items);\n                setStatics(response.data.statics);\n                setTotal(response.data.total);\n                setPolicies(response.data.policies);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize]);\n\n    const deletePolicy = (id) =>{\n        API.delete(\"/admin/group/\" + id,)\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"用户组已删除\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }\n\n    return (\n        <div>\n            <div className={classes.header}>\n                <Button\n                    color={\"primary\"}\n                    onClick={() => history.push(\"/admin/group/add\")}\n                    variant={\"contained\"}\n                >\n                    新建用户组\n                </Button>\n                <div className={classes.headerRight}>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{height:52}}>\n                                {columns.map(column => (\n                                    <TableCell\n                                        key={column.id}\n                                        align={column.align}\n                                        style={{ minWidth: column.minWidth }}\n                                    >\n                                        {column.label}\n                                    </TableCell>\n                                ))}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {groups.map(row => (\n                                <TableRow hover key={row.ID}>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell>{row.Name}</TableCell>\n                                    <TableCell>\n                                        {row.PolicyList !== null && row.PolicyList.map((pid,key)=>{\n                                            let res = \"\";\n                                            if (policies[pid]){\n                                                res += policies[pid].Name;\n                                            }\n                                            if (key !== row.PolicyList.length-1){\n                                                res += \" / \";\n                                            }\n                                            return res\n                                        })}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {statics[row.ID] !== undefined &&\n                                            statics[row.ID].toLocaleString()}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {statics[row.ID] !== undefined &&\n                                            sizeToString(row.MaxStorage)}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton onClick={()=>deletePolicy(row.ID)} size={\"small\"}>\n                                                <Delete/>\n                                            </IconButton>\n                                        </Tooltip>\n                                        <Tooltip title={\"编辑\"}>\n                                            <IconButton onClick={()=>history.push(\"/admin/group/edit/\" + row.ID)} size={\"small\"}>\n                                                <Edit/>\n                                            </IconButton>\n                                        </Tooltip>\n\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={e => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Input from \"@material-ui/core/Input\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Chip from \"@material-ui/core/Chip\";\nimport SizeInput from \"../Common/SizeInput\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport {useHistory} from \"react-router\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    }\n}));\n\nfunction getStyles(name, personName, theme) {\n    return {\n        fontWeight:\n            personName.indexOf(name) === -1\n                ? theme.typography.fontWeightRegular\n                : theme.typography.fontWeightMedium\n    };\n}\n\nexport default function GroupForm(props) {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [group, setGroup] = useState(\n        props.group\n            ? props.group\n            : {\n                  ID: 0,\n                  Name: \"\",\n                  MaxStorage: \"1073741824\", // 转换类型\n                  ShareEnabled: \"true\", // 转换类型\n                  WebDAVEnabled: \"true\", // 转换类型\n                  SpeedLimit: \"0\", // 转换类型\n                  PolicyList: [\"1\"], // 转换类型,至少选择一个\n                  OptionsSerialized: {\n                      // 批量转换类型\n                      share_download: \"true\",\n                      aria2_options: \"{}\", // json decode\n                      compress_size: \"0\",\n                      decompress_size: \"0\"\n                  }\n              }\n    );\n    const [policies, setPolicies] = useState({});\n\n    const theme = useTheme();\n    const history = useHistory();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/policy/list\", {\n            page: 1,\n            page_size: 10000,\n            order_by: \"id asc\",\n            conditions: {}\n        })\n            .then(response => {\n                const res = {};\n                response.data.items.forEach(v => {\n                    res[v.ID] = v.Name;\n                });\n                setPolicies(res);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, []);\n\n    const handleChange = name => event => {\n        setGroup({\n            ...group,\n            [name]: event.target.value\n        });\n    };\n\n    const handleCheckChange = name => event => {\n        const value = event.target.checked ? \"true\" : \"false\";\n        setGroup({\n            ...group,\n            [name]: value\n        });\n    };\n\n    const handleOptionCheckChange = name => event => {\n        const value = event.target.checked ? \"true\" : \"false\";\n        setGroup({\n            ...group,\n            OptionsSerialized: {\n                ...group.OptionsSerialized,\n                [name]: value\n            }\n        });\n    };\n\n    const handleOptionChange = name => event => {\n        setGroup({\n            ...group,\n            OptionsSerialized: {\n                ...group.OptionsSerialized,\n                [name]: event.target.value\n            }\n        });\n    };\n\n    const submit = e => {\n        e.preventDefault();\n        const groupCopy = {\n            ...group,\n            OptionsSerialized: { ...group.OptionsSerialized }\n        };\n\n        // 布尔值转换\n        [\"ShareEnabled\", \"WebDAVEnabled\"].forEach(v => {\n            groupCopy[v] = groupCopy[v] === \"true\";\n        });\n        [\n            \"archive_download\",\n            \"archive_task\",\n            \"one_time_download\",\n            \"share_download\",\n            \"share_free\",\n            \"aria2\"\n        ].forEach(v => {\n            if (groupCopy.OptionsSerialized[v] !== undefined){\n                groupCopy.OptionsSerialized[v] = groupCopy.OptionsSerialized[v] === \"true\";\n            }\n        });\n\n        // 整型转换\n        [\"MaxStorage\", \"SpeedLimit\"].forEach(v => {\n            groupCopy[v] = parseInt(groupCopy[v]);\n        });\n        [\n            \"compress_size\",\n            \"decompress_size\",\n        ].forEach(v => {\n            if (groupCopy.OptionsSerialized[v] !== undefined){\n                groupCopy.OptionsSerialized[v] = parseInt(groupCopy.OptionsSerialized[v]);\n            }\n        });\n        groupCopy.PolicyList = groupCopy.PolicyList.map(v=>{\n            return parseInt(v)\n        });\n\n        if (groupCopy.PolicyList.length < 1 && groupCopy.ID !== 3){\n            ToggleSnackbar(\"top\", \"right\", \"至少要为用户组选择一个存储策略\", \"warning\");\n            return;\n        }\n\n        // JSON转换\n        try {\n            groupCopy.OptionsSerialized.aria2_options = JSON.parse(groupCopy.OptionsSerialized.aria2_options);\n        }catch (e) {\n            ToggleSnackbar(\"top\", \"right\", \"Aria2 设置项格式错误\", \"warning\");\n            return;\n        }\n\n        setLoading(true);\n        API.post(\"/admin/group\", {\n            group: groupCopy\n        })\n            .then(() => {\n                history.push(\"/admin/group\");\n                ToggleSnackbar(\"top\", \"right\", \"用户组已\"+ (props.group ? \"保存\" : \"添加\"), \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        {group.ID === 0 && \"新建用户组\"}\n                        {group.ID !== 0 && \"编辑 \" + group.Name}\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n\n                        {group.ID !== 3 && <>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        用户组名\n                                    </InputLabel>\n                                    <Input\n                                        value={group.Name}\n                                        onChange={handleChange(\"Name\")}\n                                        required\n                                    />\n                                    <FormHelperText id=\"component-helper-text\">\n                                        用户组的名称\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        可用存储策略\n                                    </InputLabel>\n                                    <Select\n                                        labelId=\"demo-mutiple-chip-label\"\n                                        id=\"demo-mutiple-chip\"\n                                        multiple\n                                        value={group.PolicyList}\n                                        onChange={handleChange(\"PolicyList\")}\n                                        input={<Input id=\"select-multiple-chip\" />}\n                                        renderValue={selected => (\n                                            <div className={classes.chips}>\n                                                {selected.map(value => (\n                                                    <Chip\n                                                        style={{ margin: 2 }}\n                                                        key={value}\n                                                        size={\"small\"}\n                                                        label={policies[value]}\n                                                        className={classes.chip}\n                                                    />\n                                                ))}\n                                            </div>\n                                        )}\n                                    >\n                                        {Object.keys(policies).map(pid => (\n                                            <MenuItem\n                                                key={pid}\n                                                value={pid}\n                                                style={getStyles(\n                                                    pid,\n                                                    group.PolicyList,\n                                                    theme\n                                                )}\n                                            >\n                                                {policies[pid]}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n                                    <FormHelperText id=\"component-helper-text\">\n                                        指定用户组可用的存储策略，可多选，用户可在选定范围内自由切换存储策略。\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <SizeInput\n                                        value={group.MaxStorage}\n                                        onChange={handleChange(\"MaxStorage\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"初始容量\"}\n                                        required\n                                    />\n                                </FormControl>\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户组下的用户初始可用最大容量\n                                </FormHelperText>\n                            </div>\n                        </>}\n\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <SizeInput\n                                    value={group.SpeedLimit}\n                                    onChange={handleChange(\"SpeedLimit\")}\n                                    min={0}\n                                    max={9223372036854775807}\n                                    label={\"下载限速\"}\n                                    suffix={\"/s\"}\n                                    required\n                                />\n                            </FormControl>\n                            <FormHelperText id=\"component-helper-text\">\n                                填写为 0 表示不限制。开启限制后，\n                                此用户组下的用户下载所有支持限速的存储策略下的文件时，下载最大速度会被限制。\n                            </FormHelperText>\n                        </div>\n\n                        {group.ID !== 3 && <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                group.ShareEnabled === \"true\"\n                                            }\n                                            onChange={handleCheckChange(\n                                                \"ShareEnabled\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"允许创建分享\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    关闭后，用户无法创建分享链接\n                                </FormHelperText>\n                            </FormControl>\n                        </div>}\n\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                group.OptionsSerialized\n                                                    .share_download === \"true\"\n                                            }\n                                            onChange={handleOptionCheckChange(\n                                                \"share_download\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"允许下载分享\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    关闭后，用户无法下载别人创建的文件分享\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                group.OptionsSerialized\n                                                    .share_free === \"true\"\n                                            }\n                                            onChange={handleOptionCheckChange(\n                                                \"share_free\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"免积分下载分享\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    开启后，用户可以免费下载需付积分的分享\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        {group.ID !== 3 && <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                group.WebDAVEnabled === \"true\"\n                                            }\n                                            onChange={handleCheckChange(\n                                                \"WebDAVEnabled\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"WebDAV\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    关闭后，用户无法通过 WebDAV 协议连接至网盘\n                                </FormHelperText>\n                            </FormControl>\n                        </div>}\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                group.OptionsSerialized\n                                                    .one_time_download ===\n                                                \"true\"\n                                            }\n                                            onChange={handleOptionCheckChange(\n                                                \"one_time_download\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"禁止多次下载请求\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    只针对本机存储策略有效。开启后，用户无法使用多线程下载工具。\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        {group.ID !== 3 && <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                group.OptionsSerialized\n                                                    .aria2 === \"true\"\n                                            }\n                                            onChange={handleOptionCheckChange(\n                                                \"aria2\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"离线下载\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    是否允许用户创建离线下载任务\n                                </FormHelperText>\n                            </FormControl>\n                        </div>}\n\n\n                        <Collapse in={group.OptionsSerialized.aria2 === \"true\"}>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        Aria2 任务参数\n                                    </InputLabel>\n                                    <Input\n                                        multiline\n                                        value={\n                                            group.OptionsSerialized\n                                                .aria2_options\n                                        }\n                                        onChange={handleOptionChange(\n                                            \"aria2_options\"\n                                        )}\n                                    />\n                                    <FormHelperText id=\"component-helper-text\">\n                                        此用户组创建离线下载任务时额外携带的参数，以\n                                        JSON\n                                        编码后的格式书写，您可也可以将这些设置写在\n                                        Aria2 配置文件里，可用参数请查阅官方文档\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n                        </Collapse>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                group.OptionsSerialized\n                                                    .archive_download === \"true\"\n                                            }\n                                            onChange={handleOptionCheckChange(\n                                                \"archive_download\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"打包下载\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    是否允许用户多选文件打包下载\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        {group.ID !== 3 && <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                group.OptionsSerialized\n                                                    .archive_task === \"true\"\n                                            }\n                                            onChange={handleOptionCheckChange(\n                                                \"archive_task\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"压缩/解压缩 任务\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    是否用户创建 压缩/解压缩 任务\n                                </FormHelperText>\n                            </FormControl>\n                        </div>}\n\n                        <Collapse\n                            in={group.OptionsSerialized.archive_task === \"true\"}\n                        >\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <SizeInput\n                                        value={\n                                            group.OptionsSerialized\n                                                .compress_size\n                                        }\n                                        onChange={handleOptionChange(\n                                            \"compress_size\"\n                                        )}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"待压缩文件最大大小\"}\n                                    />\n                                </FormControl>\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户可创建的压缩任务的文件最大总大小，填写为\n                                    0 表示不限制\n                                </FormHelperText>\n                            </div>\n\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <SizeInput\n                                        value={\n                                            group.OptionsSerialized\n                                                .decompress_size\n                                        }\n                                        onChange={handleOptionChange(\n                                            \"decompress_size\"\n                                        )}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"待解压文件最大大小\"}\n                                    />\n                                </FormControl>\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户可创建的解压缩任务的文件最大总大小，填写为\n                                    0 表示不限制\n                                </FormHelperText>\n                            </div>\n                        </Collapse>\n                    </div>\n                </div>\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React, {useCallback, useEffect, useState} from \"react\";\nimport {useParams} from \"react-router\";\nimport API from \"../../../middleware/Api\";\nimport {useDispatch} from \"react-redux\";\nimport {toggleSnackbar} from \"../../../actions\";\nimport GroupForm from \"./GroupForm\";\n\nexport default function EditGroupPreload( ) {\n    const [group,setGroup] = useState({});\n\n    const {id } = useParams();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n\n    useEffect(()=>{\n        setGroup({});\n        API.get(\"/admin/group/\" + id)\n            .then(response => {\n                // 布尔值转换\n                [\"ShareEnabled\", \"WebDAVEnabled\"].forEach(v => {\n                    response.data[v] = response.data[v]?\"true\":\"false\";\n                });\n                [\n                    \"archive_download\",\n                    \"archive_task\",\n                    \"one_time_download\",\n                    \"share_download\",\n                    \"share_free\",\n                    \"aria2\"\n                ].forEach(v => {\n                    if (response.data.OptionsSerialized[v] !== undefined){\n                        response.data.OptionsSerialized[v] = response.data.OptionsSerialized[v]?\"true\":\"false\";\n                    }\n                });\n\n                // 整型转换\n                [\"MaxStorage\", \"SpeedLimit\"].forEach(v => {\n                    response.data[v] = response.data[v].toString();\n                });\n                [\n                    \"compress_size\",\n                    \"decompress_size\",\n                ].forEach(v => {\n                    if (response.data.OptionsSerialized[v] !== undefined){\n                        response.data.OptionsSerialized[v] = response.data.OptionsSerialized[v].toString();\n                    }\n                });\n                response.data.PolicyList = response.data.PolicyList.map(v=>{\n                    return v.toString();\n                });\n\n                // JSON转换\n                if(response.data.OptionsSerialized.aria2_options === undefined){\n                    response.data.OptionsSerialized.aria2_options = \"{}\"\n                }else{\n                    try {\n                        response.data.OptionsSerialized.aria2_options = JSON.stringify(response.data.OptionsSerialized.aria2_options);\n                    }catch (e) {\n                        ToggleSnackbar(\"top\", \"right\", \"Aria2 设置项格式错误\", \"warning\");\n                        return;\n                    }\n\n                }\n                setGroup(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    },[id]);\n\n    return (\n        <div>\n            {group.ID !== undefined &&\n                <GroupForm group={group}/>\n            }\n        </div>\n    );\n}\n","import React, {useCallback, useEffect, useState} from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport API from \"../../../middleware/Api\";\nimport {useDispatch} from \"react-redux\";\nimport {toggleSnackbar} from \"../../../actions\";\nimport TextField from \"@material-ui/core/TextField\";\n\nexport default function UserFilter({setFilter,setSearch,open, onClose }) {\n    const [input,setInput] = useState({\n        group_id:\"all\",\n        status:\"all\",\n    });\n    const [groups,setGroups] = useState([]);\n    const [keywords,setKeywords] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const handleChange = name => event => {\n        setInput({...input,[name]:event.target.value})\n    }\n\n    useEffect(()=>{\n        API.get(\"/admin/groups\")\n            .then(response => {\n                setGroups(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    },[])\n\n    const submit = () => {\n        const res = {};\n        Object.keys(input).forEach(v=>{\n            if(input[v] !== \"all\"){\n                res[v] = input[v];\n            }\n        })\n        setFilter(res);\n        if (keywords !== \"\"){\n            setSearch({\n                nick:keywords,\n                email:keywords,\n            });\n        }else{\n            setSearch({});\n        }\n        onClose();\n    }\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            fullWidth\n            maxWidth={\"xs\"}\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n                过滤条件\n            </DialogTitle>\n            <DialogContent>\n                <FormControl fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\">用户组</InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={input.group_id}\n                        onChange={handleChange(\"group_id\")}\n                    >\n                        <MenuItem value={\"all\"}>全部</MenuItem>\n                        {groups.map(v => {\n                            if (v.ID === 3) {\n                                return null;\n                            }\n                            return (\n                                <MenuItem\n                                    key={v.ID}\n                                    value={v.ID.toString()}\n                                >\n                                    {v.Name}\n                                </MenuItem>\n                            );\n                        })}\n                    </Select>\n                </FormControl>\n                <FormControl fullWidth style={{marginTop:16}}>\n                    <InputLabel id=\"demo-simple-select-label\">用户状态</InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={input.status}\n                        onChange={handleChange(\"status\")}\n                    >\n                        <MenuItem value={\"all\"}>全部</MenuItem>\n                        <MenuItem value={\"0\"}>正常</MenuItem>\n                        <MenuItem value={\"1\"}>未激活</MenuItem>\n                        <MenuItem value={\"2\"}>被封禁</MenuItem>\n                        <MenuItem value={\"3\"}>超额使用被封禁</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl fullWidth style={{marginTop:16}}>\n                    <TextField value={keywords} onChange={e=>setKeywords(e.target.value)} id=\"standard-basic\" label=\"搜索 昵称 / 用户名\" />\n                </FormControl>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"default\">\n                    取消\n                </Button>\n                <Button onClick={submit} color=\"primary\">\n                    应用\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport { sizeToString } from \"../../../utils\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport { useHistory } from \"react-router\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {Block, Delete, Edit, FilterList} from \"@material-ui/icons\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { lighten } from \"@material-ui/core\";\nimport Link from \"@material-ui/core/Link\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport UserFilter from \"../Dialogs/UserFilter\";\nimport Badge from \"@material-ui/core/Badge\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    content: {\n        padding: theme.spacing(2)\n    },\n    container: {\n        overflowX: \"auto\"\n    },\n    tableContainer: {\n        marginTop: 16\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n    },\n    headerRight: {},\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark\n              },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1\n    }\n}));\n\nexport default function Group() {\n    const classes = useStyles();\n    const [users, setUsers] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [filter, setFilter] = useState({});\n    const [search, setSearch] = useState({});\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\n    const [filterDialog, setFilterDialog] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [loading,setLoading] = useState(false);\n\n    const history = useHistory();\n    const theme = useTheme();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadList = () => {\n        API.post(\"/admin/user/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: orderBy.join(\" \"),\n            conditions: filter,\n            searches: search\n        })\n            .then(response => {\n                setUsers(response.data.items);\n                setTotal(response.data.total);\n                setSelected([]);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize, orderBy, filter, search]);\n\n    const deletePolicy = id => {\n        setLoading(true);\n        API.post(\"/admin/user/delete\",{id:[id]})\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"用户已删除\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            }).then(()=>{\n            setLoading(false);\n        });\n    };\n\n    const deleteBatch = () =>{\n        setLoading(true);\n        API.post(\"/admin/user/delete\",{id:selected})\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"用户已删除\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            }).then(()=>{\n            setLoading(false);\n        });\n    }\n\n    const block = id =>{\n        setLoading(true);\n        API.patch(\"/admin/user/ban/\"+id)\n            .then(response => {\n                setUsers(users.map(v=>{\n                    if (v.ID === id){\n                        const newUser = {...v,Status:response.data}\n                        return newUser;\n                    }\n                    return v\n                }))\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            }).then(()=>{\n            setLoading(false);\n        });\n    }\n\n    const handleSelectAllClick = event => {\n        if (event.target.checked) {\n            const newSelecteds = users.map(n => n.ID);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const isSelected = id => selected.indexOf(id) !== -1;\n\n    return (\n        <div>\n            <UserFilter\n                filter={filter}\n                open={filterDialog}\n                onClose={() => setFilterDialog(false)}\n                setSearch={setSearch}\n                setFilter={setFilter}\n            />\n            <div className={classes.header}>\n                <Button\n                    style={{ alignSelf: \"center\" }}\n                    color={\"primary\"}\n                    onClick={() => history.push(\"/admin/user/add\")}\n                    variant={\"contained\"}\n                >\n                    新建用户\n                </Button>\n                <div className={classes.headerRight}>\n                    <Tooltip title=\"过滤\">\n\n                            <IconButton\n                                style={{ marginRight: 8 }}\n                                onClick={() => setFilterDialog(true)}\n                            ><Badge\n                                color=\"secondary\"\n                                variant=\"dot\"\n                                invisible={\n                                    Object.keys(search).length === 0 &&\n                                    Object.keys(filter).length === 0\n                                }\n                            >\n                                <FilterList />\n                            </Badge>\n                            </IconButton>\n\n                    </Tooltip>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                {selected.length > 0 && (\n                    <Toolbar className={classes.highlight}>\n                        <Typography\n                            style={{ flex: \"1 1 100%\" }}\n                            color=\"inherit\"\n                            variant=\"subtitle1\"\n                        >\n                            已选择 {selected.length} 个对象\n                        </Typography>\n                        <Tooltip title=\"删除\">\n                            <IconButton onClick={deleteBatch} disabled={loading} aria-label=\"delete\">\n                                <Delete />\n                            </IconButton>\n                        </Tooltip>\n                    </Toolbar>\n                )}\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                <TableCell padding=\"checkbox\">\n                                    <Checkbox\n                                        indeterminate={\n                                            selected.length > 0 &&\n                                            selected.length < users.length\n                                        }\n                                        checked={\n                                            users.length > 0 &&\n                                            selected.length === users.length\n                                        }\n                                        onChange={handleSelectAllClick}\n                                        inputProps={{\n                                            \"aria-label\": \"select all desserts\"\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell style={{ minWidth: 59 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"id\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"id\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        #\n                                        {orderBy[0] === \"id\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 120 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"nick\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"nick\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        昵称\n                                        {orderBy[0] === \"nick\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 170 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"email\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"email\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        Email\n                                        {orderBy[0] === \"email\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 70 }}>\n                                    用户组\n                                </TableCell>\n                                <TableCell style={{ minWidth: 50 }}>\n                                    状态\n                                </TableCell>\n                                <TableCell\n                                    align={\"right\"}\n                                    style={{ minWidth: 80 }}\n                                >\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"storage\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"storage\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        已用空间\n                                        {orderBy[0] === \"storage\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell\n                                    style={{ minWidth: 100 }}\n                                >\n                                    操作\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {users.map(row => (\n                                <TableRow\n                                    hover\n                                    key={row.ID}\n                                    role=\"checkbox\"\n                                    selected={isSelected(row.ID)}\n                                >\n                                    <TableCell padding=\"checkbox\">\n                                        <Checkbox\n                                            onClick={event =>\n                                                handleClick(event, row.ID)\n                                            }\n                                            checked={isSelected(row.ID)}\n                                        />\n                                    </TableCell>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell>{row.Nick}</TableCell>\n                                    <TableCell>{row.Email}</TableCell>\n                                    <TableCell>\n                                        <Link\n                                            href={\n                                                \"/#/admin/group/edit/\" +\n                                                row.Group.ID\n                                            }\n                                        >\n                                            {row.Group.Name}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.Status === 0 && (\n                                            <Typography\n                                                style={{\n                                                    color:\n                                                        theme.palette.success\n                                                            .main\n                                                }}\n                                                variant={\"body2\"}\n                                            >\n                                                正常\n                                            </Typography>\n                                        )}\n                                        {row.Status === 1 && (\n                                            <Typography\n                                                color={\"textSecondary\"}\n                                                variant={\"body2\"}\n                                            >\n                                                未激活\n                                            </Typography>\n                                        )}\n                                        {row.Status === 2 && (\n                                            <Typography\n                                                color={\"error\"}\n                                                variant={\"body2\"}\n                                            >\n                                                被封禁\n                                            </Typography>\n                                        )}\n                                        {row.Status === 3 && (\n                                            <Typography\n                                                color={\"error\"}\n                                                variant={\"body2\"}\n                                            >\n                                                超额封禁\n                                            </Typography>\n                                        )}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {sizeToString(row.Storage)}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                        <Tooltip title={\"编辑\"}>\n                                            <IconButton\n                                                onClick={() =>\n                                                    history.push(\n                                                        \"/admin/user/edit/\" +\n                                                            row.ID\n                                                    )\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Edit />\n                                            </IconButton>\n                                        </Tooltip>\n                                        <Tooltip title={\"封禁/解封\"}>\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={()=>block(row.ID)}\n                                                size={\"small\"}\n                                            >\n                                                <Block />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={e => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Input from \"@material-ui/core/Input\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { useHistory } from \"react-router\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    }\n}));\nexport default function UserForm(props) {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [user, setUser] = useState(\n        props.user\n            ? props.user\n            : {\n                  ID: 0,\n                  Email: \"\",\n                  Nick: \"\",\n                  Password: \"\", // 为空时只读\n                  Status: \"0\", // 转换类型\n                  GroupID: \"2\", // 转换类型\n                  Score: \"0\" // 转换类型\n              }\n    );\n    const [groups, setGroups] = useState([]);\n\n    const history = useHistory();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.get(\"/admin/groups\")\n            .then(response => {\n                setGroups(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, []);\n\n    const handleChange = name => event => {\n        setUser({\n            ...user,\n            [name]: event.target.value\n        });\n    };\n\n    const submit = e => {\n        e.preventDefault();\n        const userCopy = {...user};\n\n        // 整型转换\n        [\"Status\", \"GroupID\",\"Score\"].forEach(v => {\n            userCopy[v] = parseInt(userCopy[v]);\n        });\n\n        setLoading(true);\n        API.post(\"/admin/user\", {\n            user: userCopy,\n            password:userCopy.Password,\n        })\n            .then(() => {\n                history.push(\"/admin/user\");\n                ToggleSnackbar(\"top\", \"right\", \"用户已\"+ (props.user ? \"保存\" : \"添加\"), \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        {user.ID === 0 && \"创建用户\"}\n                        {user.ID !== 0 && \"编辑 \" + user.Nick}\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    邮箱\n                                </InputLabel>\n                                <Input\n                                    value={user.Email}\n                                    type={\"email\"}\n                                    onChange={handleChange(\"Email\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    昵称\n                                </InputLabel>\n                                <Input\n                                    value={user.Nick}\n                                    onChange={handleChange(\"Nick\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    密码\n                                </InputLabel>\n                                <Input\n                                    type={\"password\"}\n                                    value={user.Password}\n                                    onChange={handleChange(\"Password\")}\n                                    required={user.ID === 0}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {user.ID !== 0 && \"留空表示不修改\"}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    用户组\n                                </InputLabel>\n                                <Select\n                                    value={user.GroupID}\n                                    onChange={handleChange(\n                                        \"GroupID\"\n                                    )}\n                                    required\n                                >\n                                    {groups.map(v => {\n                                        if (v.ID === 3) {\n                                            return null;\n                                        }\n                                        return (\n                                            <MenuItem\n                                                key={v.ID}\n                                                value={v.ID.toString()}\n                                            >\n                                                {v.Name}\n                                            </MenuItem>\n                                        );\n                                    })}\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户所属用户组\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    状态\n                                </InputLabel>\n                                <Select\n                                    value={user.Status}\n                                    onChange={handleChange(\n                                        \"Status\"\n                                    )}\n                                    required\n                                >\n                                    <MenuItem value={\"0\"}>正常</MenuItem>\n                                    <MenuItem value={\"1\"}>未激活</MenuItem>\n                                    <MenuItem value={\"2\"}>被封禁</MenuItem>\n                                    <MenuItem value={\"3\"}>超额使用被封禁</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    积分\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:0,\n                                        step:1,\n                                    }}\n                                    value={user.Score}\n                                    onChange={handleChange(\"Score\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                    </div>\n                </div>\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React, {useCallback, useEffect, useState} from \"react\";\nimport {useParams} from \"react-router\";\nimport API from \"../../../middleware/Api\";\nimport {useDispatch} from \"react-redux\";\nimport {toggleSnackbar} from \"../../../actions\";\nimport UserForm from \"./UserForm\";\n\nexport default function EditUserPreload( ) {\n    const [user,setUser] = useState({});\n\n    const {id } = useParams();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n\n    useEffect(()=>{\n        setUser({});\n        API.get(\"/admin/user/\" + id)\n            .then(response => {\n                // 整型转换\n                [\"Status\", \"GroupID\",\"Score\"].forEach(v => {\n                    response.data[v] = response.data[v].toString();\n                });\n                setUser(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    },[id]);\n\n    return (\n        <div>\n            {user.ID !== undefined &&\n                <UserForm user={user}/>\n            }\n        </div>\n    );\n}\n","import React, {useCallback, useEffect, useState} from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport API from \"../../../middleware/Api\";\nimport {useDispatch} from \"react-redux\";\nimport {toggleSnackbar} from \"../../../actions\";\nimport TextField from \"@material-ui/core/TextField\";\n\nexport default function FileFilter({setFilter,setSearch,open, onClose }) {\n    const [input,setInput] = useState({\n        policy_id:\"all\",\n        user_id:\"\",\n    });\n    const [policies,setPolicies] = useState([]);\n    const [keywords,setKeywords] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const handleChange = name => event => {\n        setInput({...input,[name]:event.target.value})\n    }\n\n    useEffect(()=>{\n        API.post(\"/admin/policy/list\", {\n            page: 1,\n            page_size: 10000,\n            order_by: \"id asc\",\n            conditions: {}\n        })\n            .then(response => {\n                setPolicies(response.data.items);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    },[])\n\n    const submit = () => {\n        const res = {};\n        Object.keys(input).forEach(v=>{\n            if(input[v] !== \"all\" && input[v] !== \"\"){\n                res[v] = input[v];\n            }\n        })\n        setFilter(res);\n        if (keywords !== \"\"){\n            setSearch({\n                name:keywords,\n            });\n        }else{\n            setSearch({});\n        }\n        onClose();\n    }\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            fullWidth\n            maxWidth={\"xs\"}\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n                过滤条件\n            </DialogTitle>\n            <DialogContent>\n                <FormControl fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\">存储策略</InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={input.policy_id}\n                        onChange={handleChange(\"policy_id\")}\n                    >\n                        <MenuItem value={\"all\"}>全部</MenuItem>\n                        {policies.map(v => {\n                            if (v.ID === 3) {\n                                return null;\n                            }\n                            return (\n                                <MenuItem\n                                    key={v.ID}\n                                    value={v.ID.toString()}\n                                >\n                                    {v.Name}\n                                </MenuItem>\n                            );\n                        })}\n                    </Select>\n                </FormControl>\n                <FormControl fullWidth style={{marginTop:16}}>\n                    <TextField value={input.user_id} onChange={handleChange(\"user_id\")} id=\"standard-basic\" label=\"上传者ID\" />\n                </FormControl>\n                <FormControl fullWidth style={{marginTop:16}}>\n                    <TextField value={keywords} onChange={e=>setKeywords(e.target.value)} id=\"standard-basic\" label=\"搜索 文件名\" />\n                </FormControl>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"default\">\n                    取消\n                </Button>\n                <Button onClick={submit} color=\"primary\">\n                    应用\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport { sizeToString } from \"../../../utils\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport { useHistory } from \"react-router\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {Delete, DeleteForever, FilterList } from \"@material-ui/icons\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { lighten } from \"@material-ui/core\";\nimport Link from \"@material-ui/core/Link\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Badge from \"@material-ui/core/Badge\";\nimport FileFilter from \"../Dialogs/FileFilter\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    content: {\n        padding: theme.spacing(2)\n    },\n    container: {\n        overflowX: \"auto\"\n    },\n    tableContainer: {\n        marginTop: 16\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"flex-start\",\n    },\n    headerRight: {},\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark\n              },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1\n    }\n}));\n\nexport default function File() {\n    const classes = useStyles();\n    const [files, setFiles] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [filter, setFilter] = useState({});\n    const [users, setUsers] = useState({});\n    const [search, setSearch] = useState({});\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\n    const [filterDialog, setFilterDialog] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [loading,setLoading] = useState(false);\n\n    const history = useHistory();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadList = () => {\n        API.post(\"/admin/file/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: orderBy.join(\" \"),\n            conditions: filter,\n            searches: search\n        })\n            .then(response => {\n                setFiles(response.data.items);\n                setTotal(response.data.total);\n                setSelected([]);\n                setUsers(response.data.users);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize, orderBy, filter, search]);\n\n    const deletePolicy = id => {\n        setLoading(true);\n        API.post(\"/admin/file/delete\",{id:[id]})\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"删除任务将在后台执行\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            }).then(()=>{\n            setLoading(false);\n        });\n    };\n\n    const deleteBatch =force => ()=>{\n        setLoading(true);\n        API.post(\"/admin/file/delete\",{id:selected,force:force})\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"删除任务将在后台执行\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            }).then(()=>{\n            setLoading(false);\n        });\n    }\n\n    const handleSelectAllClick = event => {\n        if (event.target.checked) {\n            const newSelecteds = files.map(n => n.ID);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const isSelected = id => selected.indexOf(id) !== -1;\n\n    return (\n        <div>\n            <FileFilter\n                filter={filter}\n                open={filterDialog}\n                onClose={() => setFilterDialog(false)}\n                setSearch={setSearch}\n                setFilter={setFilter}\n            />\n            <div className={classes.header}>\n                <Button\n                    color={\"primary\"}\n                    onClick={() => history.push(\"/admin/file/import\")}\n                    variant={\"contained\"}\n                    style={{\n                        alignSelf: \"center\",\n                    }}\n                >\n                    从外部导入\n                </Button>\n                <div className={classes.headerRight}>\n                    <Tooltip title=\"过滤\">\n\n                            <IconButton\n                                style={{ marginRight: 8 }}\n                                onClick={() => setFilterDialog(true)}\n                            ><Badge\n                                color=\"secondary\"\n                                variant=\"dot\"\n                                invisible={\n                                    Object.keys(search).length === 0 &&\n                                    Object.keys(filter).length === 0\n                                }\n                            >\n                                <FilterList />\n                            </Badge>\n                            </IconButton>\n\n                    </Tooltip>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                {selected.length > 0 && (\n                    <Toolbar className={classes.highlight}>\n                        <Typography\n                            style={{ flex: \"1 1 100%\" }}\n                            color=\"inherit\"\n                            variant=\"subtitle1\"\n                        >\n                            已选择 {selected.length} 个对象\n                        </Typography>\n                        <Tooltip title=\"删除\">\n                            <IconButton onClick={deleteBatch(false)} disabled={loading} aria-label=\"delete\">\n                                <Delete />\n                            </IconButton>\n                        </Tooltip>\n                        <Tooltip title=\"强制删除\">\n                            <IconButton onClick={deleteBatch(true)} disabled={loading} aria-label=\"delete\">\n                                <DeleteForever />\n                            </IconButton>\n                        </Tooltip>\n                    </Toolbar>\n                )}\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                <TableCell padding=\"checkbox\">\n                                    <Checkbox\n                                        indeterminate={\n                                            selected.length > 0 &&\n                                            selected.length < files.length\n                                        }\n                                        checked={\n                                            files.length > 0 &&\n                                            selected.length === files.length\n                                        }\n                                        onChange={handleSelectAllClick}\n                                        inputProps={{\n                                            \"aria-label\": \"select all desserts\"\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell style={{ minWidth: 59 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"id\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"id\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        #\n                                        {orderBy[0] === \"id\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 250 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"name\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"name\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >文件名\n                                        {orderBy[0] === \"name\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell align={\"right\"} style={{ minWidth: 70 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"size\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"size\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        大小\n                                        {orderBy[0] === \"size\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 120 }}>\n                                    上传者\n                                </TableCell>\n                                <TableCell style={{ minWidth: 150 }}>\n                                    上传于\n                                </TableCell>\n                                <TableCell\n                                    style={{ minWidth: 100 }}\n                                >\n                                    操作\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {files.map(row => (\n                                <TableRow\n                                    hover\n                                    key={row.ID}\n                                    role=\"checkbox\"\n                                    selected={isSelected(row.ID)}\n                                >\n                                    <TableCell padding=\"checkbox\">\n                                        <Checkbox\n                                            onClick={event =>\n                                                handleClick(event, row.ID)\n                                            }\n                                            checked={isSelected(row.ID)}\n                                        />\n                                    </TableCell>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell>\n                                        <Link target={\"_blank\"} color=\"inherit\" href={\"/api/v3/admin/file/preview/\" + row.ID}>{row.Name}</Link>\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {sizeToString(row.Size)}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Link\n                                            href={\n                                                \"/#/admin/user/edit/\" +\n                                                row.UserID\n                                            }\n                                        >\n                                            {users[row.UserID]?users[row.UserID].Nick:\"未知\"}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {new Date(row.CreatedAt).toLocaleDateString() +\" \"+\n                                        new Date(row.CreatedAt).toLocaleTimeString()\n                                        }\n                                    </TableCell>\n                                    <TableCell>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25,50, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={e => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import React, { useState} from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\n\nexport default function ShareFilter({setFilter,setSearch,open, onClose }) {\n    const [input,setInput] = useState({\n        is_dir:\"all\",\n        user_id:\"\",\n    });\n    const [keywords,setKeywords] = useState(\"\");\n\n    const handleChange = name => event => {\n        setInput({...input,[name]:event.target.value})\n    }\n\n    const submit = () => {\n        const res = {};\n        Object.keys(input).forEach(v=>{\n            if(input[v] !== \"all\" && input[v] !== \"\"){\n                res[v] = input[v];\n            }\n        })\n        setFilter(res);\n        if (keywords !== \"\"){\n            setSearch({\n                source_name:keywords,\n            });\n        }else{\n            setSearch({});\n        }\n        onClose();\n    }\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            fullWidth\n            maxWidth={\"xs\"}\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n                过滤条件\n            </DialogTitle>\n            <DialogContent>\n                <FormControl fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\">源文件类型</InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={input.is_dir}\n                        onChange={handleChange(\"is_dir\")}\n                    >\n                        <MenuItem value={\"all\"}>全部</MenuItem>\n                        <MenuItem value={\"1\"}>目录</MenuItem>\n                        <MenuItem value={\"0\"}>文件</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl fullWidth style={{marginTop:16}}>\n                    <TextField value={input.user_id} onChange={handleChange(\"user_id\")} id=\"standard-basic\" label=\"上传者ID\" />\n                </FormControl>\n                <FormControl fullWidth style={{marginTop:16}}>\n                    <TextField value={keywords} onChange={e=>setKeywords(e.target.value)} id=\"standard-basic\" label=\"搜索 文件名\" />\n                </FormControl>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"default\">\n                    取消\n                </Button>\n                <Button onClick={submit} color=\"primary\">\n                    应用\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles, } from \"@material-ui/core/styles\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {  Delete,  FilterList } from \"@material-ui/icons\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { lighten } from \"@material-ui/core\";\nimport Link from \"@material-ui/core/Link\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Badge from \"@material-ui/core/Badge\";\nimport ShareFilter from \"../Dialogs/ShareFilter\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    content: {\n        padding: theme.spacing(2)\n    },\n    container: {\n        overflowX: \"auto\"\n    },\n    tableContainer: {\n        marginTop: 16\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n    },\n    headerRight: {},\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark\n              },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1\n    }\n}));\n\nexport default function Share() {\n    const classes = useStyles();\n    const [shares, setShares] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [filter, setFilter] = useState({});\n    const [users, setUsers] = useState({});\n    const [ids, setIds] = useState({});\n    const [search, setSearch] = useState({});\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\n    const [filterDialog, setFilterDialog] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadList = () => {\n        API.post(\"/admin/share/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: orderBy.join(\" \"),\n            conditions: filter,\n            searches: search\n        })\n            .then(response => {\n                setUsers(response.data.users);\n                setIds(response.data.ids);\n                setShares(response.data.items);\n                setTotal(response.data.total);\n                setSelected([]);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize, orderBy, filter, search]);\n\n    const deletePolicy = id => {\n        setLoading(true);\n        API.post(\"/admin/share/delete\", { id: [id] })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"分享已删除\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const deleteBatch = () => {\n        setLoading(true);\n        API.post(\"/admin/share/delete\", { id: selected })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"分享已删除\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const handleSelectAllClick = event => {\n        if (event.target.checked) {\n            const newSelecteds = shares.map(n => n.ID);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const isSelected = id => selected.indexOf(id) !== -1;\n\n    return (\n        <div>\n            <ShareFilter\n                filter={filter}\n                open={filterDialog}\n                onClose={() => setFilterDialog(false)}\n                setSearch={setSearch}\n                setFilter={setFilter}\n            />\n            <div className={classes.header}>\n                <div className={classes.headerRight}>\n                    <Tooltip title=\"过滤\">\n                        <IconButton\n                            style={{ marginRight: 8 }}\n                            onClick={() => setFilterDialog(true)}\n                        >\n                            <Badge\n                                color=\"secondary\"\n                                variant=\"dot\"\n                                invisible={\n                                    Object.keys(search).length === 0 &&\n                                    Object.keys(filter).length === 0\n                                }\n                            >\n                                <FilterList />\n                            </Badge>\n                        </IconButton>\n                    </Tooltip>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                {selected.length > 0 && (\n                    <Toolbar className={classes.highlight}>\n                        <Typography\n                            style={{ flex: \"1 1 100%\" }}\n                            color=\"inherit\"\n                            variant=\"subtitle1\"\n                        >\n                            已选择 {selected.length} 个对象\n                        </Typography>\n                        <Tooltip title=\"删除\">\n                            <IconButton\n                                onClick={deleteBatch}\n                                disabled={loading}\n                                aria-label=\"delete\"\n                            >\n                                <Delete />\n                            </IconButton>\n                        </Tooltip>\n                    </Toolbar>\n                )}\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                <TableCell padding=\"checkbox\">\n                                    <Checkbox\n                                        indeterminate={\n                                            selected.length > 0 &&\n                                            selected.length < shares.length\n                                        }\n                                        checked={\n                                            shares.length > 0 &&\n                                            selected.length === shares.length\n                                        }\n                                        onChange={handleSelectAllClick}\n                                        inputProps={{\n                                            \"aria-label\": \"select all desserts\"\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell style={{ minWidth: 10 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"id\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"id\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        #\n                                        {orderBy[0] === \"id\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 200 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"source_name\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"source_name\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        对象名\n                                        {orderBy[0] === \"source_name\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 70 }}>\n                                    类型\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }} align={\"right\"}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"views\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"views\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        浏览\n                                        {orderBy[0] === \"views\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }} align={\"right\"}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"downloads\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"downloads\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        下载\n                                        {orderBy[0] === \"downloads\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }} align={\"right\"}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"score\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"score\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        积分\n                                        {orderBy[0] === \"score\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 120 }}>\n                                    自动过期\n                                </TableCell>\n                                <TableCell style={{ minWidth: 120 }}>\n                                    分享者\n                                </TableCell>\n                                <TableCell style={{ minWidth: 150 }}>\n                                    分享于\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }}>\n                                    操作\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {shares.map(row => (\n                                <TableRow\n                                    hover\n                                    key={row.ID}\n                                    role=\"checkbox\"\n                                    selected={isSelected(row.ID)}\n                                >\n                                    <TableCell padding=\"checkbox\">\n                                        <Checkbox\n                                            onClick={event =>\n                                                handleClick(event, row.ID)\n                                            }\n                                            checked={isSelected(row.ID)}\n                                        />\n                                    </TableCell>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell style={{wordBreak: \"break-all\"}}>\n                                        <Link\n                                            target={\"_blank\"}\n                                            color=\"inherit\"\n                                            href={\n                                                \"/#/s/\"+ids[row.ID]+(row.Password === \"\" ? \"\" : (\"?password=\"+row.Password))\n                                            }\n                                        >\n                                            {row.SourceName}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.Password === \"\" ? \"公开\" : \"私密\"}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {row.Views}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {row.Downloads}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {row.Score}\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.RemainDownloads > -1 && (row.RemainDownloads+\" 次下载后\")}\n                                        {row.RemainDownloads === -1 && \"无\"}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Link\n                                            href={\n                                                \"/#/admin/user/edit/\" +\n                                                row.UserID\n                                            }\n                                        >\n                                            {users[row.UserID]\n                                                ? users[row.UserID].Nick\n                                                : \"未知\"}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {new Date(\n                                            row.CreatedAt\n                                        ).toLocaleDateString() +\n                                            \" \" +\n                                            new Date(\n                                                row.CreatedAt\n                                            ).toLocaleTimeString()}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 50, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={e => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles, } from \"@material-ui/core/styles\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {  Delete } from \"@material-ui/icons\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { lighten } from \"@material-ui/core\";\nimport Link from \"@material-ui/core/Link\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport ShareFilter from \"../Dialogs/ShareFilter\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    content: {\n        padding: theme.spacing(2)\n    },\n    container: {\n        overflowX: \"auto\"\n    },\n    tableContainer: {\n        marginTop: 16\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n    },\n    headerRight: {},\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark\n              },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1\n    }\n}));\n\n\nexport default function Order() {\n    const classes = useStyles();\n    const [orders, setOrders] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [filter, setFilter] = useState({});\n    const [users, setUsers] = useState({});\n    const [search, setSearch] = useState({});\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\n    const [filterDialog, setFilterDialog] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadList = () => {\n        API.post(\"/admin/order/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: orderBy.join(\" \"),\n            conditions: filter,\n            searches: search\n        })\n            .then(response => {\n                setUsers(response.data.users);\n                setOrders(response.data.items);\n                setTotal(response.data.total);\n                setSelected([]);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize, orderBy, filter, search]);\n\n    const deletePolicy = id => {\n        setLoading(true);\n        API.post(\"/admin/order/delete\", { id: [id] })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"订单记录已删除\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const deleteBatch = () => {\n        setLoading(true);\n        API.post(\"/admin/order/delete\", { id: selected })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"订单记录已删除\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const handleSelectAllClick = event => {\n        if (event.target.checked) {\n            const newSelecteds = orders.map(n => n.ID);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const isSelected = id => selected.indexOf(id) !== -1;\n\n    return (\n        <div>\n            <ShareFilter\n                filter={filter}\n                open={filterDialog}\n                onClose={() => setFilterDialog(false)}\n                setSearch={setSearch}\n                setFilter={setFilter}\n            />\n            <div className={classes.header}>\n                <div className={classes.headerRight}>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                {selected.length > 0 && (\n                    <Toolbar className={classes.highlight}>\n                        <Typography\n                            style={{ flex: \"1 1 100%\" }}\n                            color=\"inherit\"\n                            variant=\"subtitle1\"\n                        >\n                            已选择 {selected.length} 个对象\n                        </Typography>\n                        <Tooltip title=\"删除\">\n                            <IconButton\n                                onClick={deleteBatch}\n                                disabled={loading}\n                                aria-label=\"delete\"\n                            >\n                                <Delete />\n                            </IconButton>\n                        </Tooltip>\n                    </Toolbar>\n                )}\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                <TableCell padding=\"checkbox\">\n                                    <Checkbox\n                                        indeterminate={\n                                            selected.length > 0 &&\n                                            selected.length < orders.length\n                                        }\n                                        checked={\n                                            orders.length > 0 &&\n                                            selected.length === orders.length\n                                        }\n                                        onChange={handleSelectAllClick}\n                                        inputProps={{\n                                            \"aria-label\": \"select all desserts\"\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell style={{ minWidth: 10 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"id\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"id\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        #\n                                        {orderBy[0] === \"id\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 130 }}>\n                                    订单名\n                                </TableCell>\n                                <TableCell style={{ minWidth: 90 }}>\n                                    商品\n                                </TableCell>\n                                <TableCell style={{ minWidth: 80 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"order_no\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"order_no\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        订单号\n                                        {orderBy[0] === \"order_no\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }} align={\"right\"}>\n                                        单价\n                                </TableCell>\n                                <TableCell style={{ minWidth: 80 }} align={\"right\"}>\n                                    数量\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }}>\n                                    状态\n                                </TableCell>\n                                <TableCell style={{ minWidth: 80 }}>\n                                    支付方式\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }}>\n                                    创建者\n                                </TableCell>\n                                <TableCell style={{ minWidth: 150 }}>\n                                    创建于\n                                </TableCell>\n                                <TableCell style={{ minWidth: 80 }}>\n                                    操作\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {orders.map(row => (\n                                <TableRow\n                                    hover\n                                    key={row.ID}\n                                    role=\"checkbox\"\n                                    selected={isSelected(row.ID)}\n                                >\n                                    <TableCell padding=\"checkbox\">\n                                        <Checkbox\n                                            onClick={event =>\n                                                handleClick(event, row.ID)\n                                            }\n                                            checked={isSelected(row.ID)}\n                                        />\n                                    </TableCell>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell>\n                                        {row.Name}\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.Type === 0 && \"容量包\"}\n                                        {row.Type === 1 && \"用户组\"}\n                                        {row.Type === 2 && \"积分\"}\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.OrderNo}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {row.Method === \"score\" && row.Price}\n                                        {row.Method !== \"score\" &&\n                                            <>\n                                                ￥{(row.Price/100).toFixed(2)}\n                                            </>\n                                        }\n\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {row.Num}\n\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.Status === 0 && \"未支付\"}\n                                        {row.Status === 1 && \"已支付\"}\n\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.Method === \"score\" && \"积分\"}\n                                        {row.Method === \"alipay\" && \"支付宝\"}\n                                        {row.Method === \"payjs\" && \"PayJS\"}\n\n                                    </TableCell>\n                                    <TableCell>\n                                        <Link\n                                            href={\n                                                \"/#/admin/user/edit/\" +\n                                                row.UserID\n                                            }\n                                        >\n                                            {users[row.UserID]\n                                                ? users[row.UserID].Nick\n                                                : \"未知\"}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {new Date(\n                                            row.CreatedAt\n                                        ).toLocaleDateString() +\n                                            \" \" +\n                                            new Date(\n                                                row.CreatedAt\n                                            ).toLocaleTimeString()}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 50, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={e => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles, } from \"@material-ui/core/styles\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {  Delete } from \"@material-ui/icons\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { lighten } from \"@material-ui/core\";\nimport Link from \"@material-ui/core/Link\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport ShareFilter from \"../Dialogs/ShareFilter\";\nimport {sizeToString} from \"../../../utils\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    content: {\n        padding: theme.spacing(2)\n    },\n    container: {\n        overflowX: \"auto\"\n    },\n    tableContainer: {\n        marginTop: 16\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n    },\n    headerRight: {},\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark\n              },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1\n    }\n}));\n\nexport default function Download() {\n    const classes = useStyles();\n    const [downloads, setDownloads] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [filter, setFilter] = useState({});\n    const [users, setUsers] = useState({});\n    const [search, setSearch] = useState({});\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\n    const [filterDialog, setFilterDialog] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadList = () => {\n        API.post(\"/admin/download/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: orderBy.join(\" \"),\n            conditions: filter,\n            searches: search\n        })\n            .then(response => {\n                setUsers(response.data.users);\n                setDownloads(response.data.items);\n                setTotal(response.data.total);\n                setSelected([]);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize, orderBy, filter, search]);\n\n    const deletePolicy = id => {\n        setLoading(true);\n        API.post(\"/admin/download/delete\", { id: [id] })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"任务已删除\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const deleteBatch = () => {\n        setLoading(true);\n        API.post(\"/admin/download/delete\", { id: selected })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"任务已删除\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const handleSelectAllClick = event => {\n        if (event.target.checked) {\n            const newSelecteds = downloads.map(n => n.ID);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const isSelected = id => selected.indexOf(id) !== -1;\n\n    return (\n        <div>\n            <ShareFilter\n                filter={filter}\n                open={filterDialog}\n                onClose={() => setFilterDialog(false)}\n                setSearch={setSearch}\n                setFilter={setFilter}\n            />\n            <div className={classes.header}>\n                <div className={classes.headerRight}>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                {selected.length > 0 && (\n                    <Toolbar className={classes.highlight}>\n                        <Typography\n                            style={{ flex: \"1 1 100%\" }}\n                            color=\"inherit\"\n                            variant=\"subtitle1\"\n                        >\n                            已选择 {selected.length} 个对象\n                        </Typography>\n                        <Tooltip title=\"删除\">\n                            <IconButton\n                                onClick={deleteBatch}\n                                disabled={loading}\n                                aria-label=\"delete\"\n                            >\n                                <Delete />\n                            </IconButton>\n                        </Tooltip>\n                    </Toolbar>\n                )}\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                <TableCell padding=\"checkbox\">\n                                    <Checkbox\n                                        indeterminate={\n                                            selected.length > 0 &&\n                                            selected.length < downloads.length\n                                        }\n                                        checked={\n                                            downloads.length > 0 &&\n                                            selected.length === downloads.length\n                                        }\n                                        onChange={handleSelectAllClick}\n                                        inputProps={{\n                                            \"aria-label\": \"select all desserts\"\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell style={{ minWidth: 10 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"id\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"id\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        #\n                                        {orderBy[0] === \"id\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 130 }}>\n                                    源地址\n                                </TableCell>\n                                <TableCell style={{ minWidth: 90 }}>\n                                    状态\n                                </TableCell>\n                                <TableCell style={{ minWidth: 150 }} align={\"right\"}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"total_size\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"total_size\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        大小\n                                        {orderBy[0] === \"total_size\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }}>\n                                    创建者\n                                </TableCell>\n                                <TableCell style={{ minWidth: 150 }}>\n                                    创建于\n                                </TableCell>\n                                <TableCell style={{ minWidth: 80 }}>\n                                    操作\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {downloads.map(row => (\n                                <TableRow\n                                    hover\n                                    key={row.ID}\n                                    role=\"checkbox\"\n                                    selected={isSelected(row.ID)}\n                                >\n                                    <TableCell padding=\"checkbox\">\n                                        <Checkbox\n                                            onClick={event =>\n                                                handleClick(event, row.ID)\n                                            }\n                                            checked={isSelected(row.ID)}\n                                        />\n                                    </TableCell>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell style={{wordBreak:\"break-all\"}}>\n                                        {row.Source}\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.Status === 0 && \"就绪\"}\n                                        {row.Status === 1 && \"下载中\"}\n                                        {row.Status === 2 && \"暂停中\"}\n                                        {row.Status === 3 && \"出错\"}\n                                        {row.Status === 4 && \"完成\"}\n                                        {row.Status === 5 && \"取消/停止\"}\n                                        {row.Status === 6 && \"未知\"}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {sizeToString(row.TotalSize)}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Link\n                                            href={\n                                                \"/#/admin/user/edit/\" +\n                                                row.UserID\n                                            }\n                                        >\n                                            {users[row.UserID]\n                                                ? users[row.UserID].Nick\n                                                : \"未知\"}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {new Date(\n                                            row.CreatedAt\n                                        ).toLocaleDateString() +\n                                            \" \" +\n                                            new Date(\n                                                row.CreatedAt\n                                            ).toLocaleTimeString()}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 50, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={e => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles, } from \"@material-ui/core/styles\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {  Delete } from \"@material-ui/icons\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { lighten } from \"@material-ui/core\";\nimport Link from \"@material-ui/core/Link\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport ShareFilter from \"../Dialogs/ShareFilter\";\nimport {getTaskProgress, getTaskStatus, getTaskType} from \"../../../config\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    content: {\n        padding: theme.spacing(2)\n    },\n    container: {\n        overflowX: \"auto\"\n    },\n    tableContainer: {\n        marginTop: 16\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n    },\n    headerRight: {},\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark\n              },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1\n    }\n}));\n\nexport default function Task() {\n    const classes = useStyles();\n    const [tasks, setTasks] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [filter, setFilter] = useState({});\n    const [users, setUsers] = useState({});\n    const [search, setSearch] = useState({});\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\n    const [filterDialog, setFilterDialog] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadList = () => {\n        API.post(\"/admin/task/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: orderBy.join(\" \"),\n            conditions: filter,\n            searches: search\n        })\n            .then(response => {\n                setUsers(response.data.users);\n                setTasks(response.data.items);\n                setTotal(response.data.total);\n                setSelected([]);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize, orderBy, filter, search]);\n\n    const deletePolicy = id => {\n        setLoading(true);\n        API.post(\"/admin/task/delete\", { id: [id] })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"任务已删除\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const deleteBatch = () => {\n        setLoading(true);\n        API.post(\"/admin/task/delete\", { id: selected })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"任务已删除\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const handleSelectAllClick = event => {\n        if (event.target.checked) {\n            const newSelecteds = tasks.map(n => n.ID);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const getError = error => {\n        if (error === \"\"){\n            return \"-\"\n        }\n        try {\n            const res = JSON.parse(error)\n            return res.msg\n        }catch (e) {\n            return \"未知\"\n        }\n\n    }\n\n    const isSelected = id => selected.indexOf(id) !== -1;\n\n    return (\n        <div>\n            <ShareFilter\n                filter={filter}\n                open={filterDialog}\n                onClose={() => setFilterDialog(false)}\n                setSearch={setSearch}\n                setFilter={setFilter}\n            />\n            <div className={classes.header}>\n                <div className={classes.headerRight}>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                {selected.length > 0 && (\n                    <Toolbar className={classes.highlight}>\n                        <Typography\n                            style={{ flex: \"1 1 100%\" }}\n                            color=\"inherit\"\n                            variant=\"subtitle1\"\n                        >\n                            已选择 {selected.length} 个对象\n                        </Typography>\n                        <Tooltip title=\"删除\">\n                            <IconButton\n                                onClick={deleteBatch}\n                                disabled={loading}\n                                aria-label=\"delete\"\n                            >\n                                <Delete />\n                            </IconButton>\n                        </Tooltip>\n                    </Toolbar>\n                )}\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                <TableCell padding=\"checkbox\">\n                                    <Checkbox\n                                        indeterminate={\n                                            selected.length > 0 &&\n                                            selected.length < tasks.length\n                                        }\n                                        checked={\n                                            tasks.length > 0 &&\n                                            selected.length === tasks.length\n                                        }\n                                        onChange={handleSelectAllClick}\n                                        inputProps={{\n                                            \"aria-label\": \"select all desserts\"\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell style={{ minWidth: 10 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"id\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"id\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        #\n                                        {orderBy[0] === \"id\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 130 }}>\n                                    类型\n                                </TableCell>\n                                <TableCell style={{ minWidth: 90 }}>\n                                    状态\n                                </TableCell>\n                                <TableCell style={{ minWidth: 90 }}>\n                                    最后进度\n                                </TableCell>\n                                <TableCell style={{ minWidth: 150 }}>\n                                    错误信息\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }}>\n                                    创建者\n                                </TableCell>\n                                <TableCell style={{ minWidth: 150 }}>\n                                    创建于\n                                </TableCell>\n                                <TableCell style={{ minWidth: 80 }}>\n                                    操作\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {tasks.map(row => (\n                                <TableRow\n                                    hover\n                                    key={row.ID}\n                                    role=\"checkbox\"\n                                    selected={isSelected(row.ID)}\n                                >\n                                    <TableCell padding=\"checkbox\">\n                                        <Checkbox\n                                            onClick={event =>\n                                                handleClick(event, row.ID)\n                                            }\n                                            checked={isSelected(row.ID)}\n                                        />\n                                    </TableCell>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell style={{wordBreak:\"break-all\"}}>\n                                        {getTaskType(row.Type)}\n                                    </TableCell>\n                                    <TableCell>\n                                        {getTaskStatus(row.Status)}\n                                    </TableCell>\n                                    <TableCell>\n                                        {getTaskProgress(row.Type,row.Progress)}\n                                    </TableCell>\n                                    <TableCell className={classes.noWrap}>\n                                        {getError(row.Error)}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Link\n                                            href={\n                                                \"/#/admin/user/edit/\" +\n                                                row.UserID\n                                            }\n                                        >\n                                            {users[row.UserID]\n                                                ? users[row.UserID].Nick\n                                                : \"未知\"}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {new Date(\n                                            row.CreatedAt\n                                        ).toLocaleDateString() +\n                                            \" \" +\n                                            new Date(\n                                                row.CreatedAt\n                                            ).toLocaleTimeString()}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 50, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={e => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Input from \"@material-ui/core/Input\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { Dialog } from \"@material-ui/core\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport PathSelector from \"../../FileManager/PathSelector\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { useHistory } from \"react-router\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    },\n    userSelect: {\n        width: 400,\n        borderRadius: 0\n    }\n}));\n\nfunction useDebounce(value, delay) {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(() => {\n        const handler = setTimeout(() => {\n            setDebouncedValue(value);\n        }, delay);\n        return () => {\n            clearTimeout(handler);\n        };\n    }, [value]);\n\n    return debouncedValue;\n}\n\nexport default function Import() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [options, setOptions] = useState({\n        policy: 1,\n        userInput: \"\",\n        src: \"\",\n        dst: \"\",\n        recursive: true\n    });\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [policies, setPolicies] = useState({});\n    const [users, setUsers] = useState([]);\n    const [user, setUser] = useState(null);\n    const [selectRemote, setSelectRemote] = useState(false);\n    const [selectLocal, setSelectLocal] = useState(false);\n\n    const handleChange = name => event => {\n        setOptions({\n            ...options,\n            [name]: event.target.value\n        });\n    };\n\n    const handleCheckChange = name => event => {\n        setOptions({\n            ...options,\n            [name]: event.target.checked\n        });\n    };\n\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submit = e => {\n        e.preventDefault();\n        if (user === null) {\n            ToggleSnackbar(\"top\", \"right\", \"请先选择目标用户\", \"warning\");\n            return;\n        }\n        setLoading(true);\n        API.post(\"/admin/task/import\", {\n            uid: user.ID,\n            policy_id: parseInt(options.policy),\n            src: options.src,\n            dst: options.dst,\n            recursive: options.recursive\n        })\n            .then(() => {\n                setLoading(false);\n                history.push(\"/admin/file\");\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"导入任务已创建，您可以在“持久任务”中查看执行情况\",\n                    \"success\"\n                );\n            })\n            .catch(error => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const debouncedSearchTerm = useDebounce(options.userInput, 500);\n\n    useEffect(() => {\n        if (debouncedSearchTerm !== \"\") {\n            API.post(\"/admin/user/list\", {\n                page: 1,\n                page_size: 10000,\n                order_by: \"id asc\",\n                searches: {\n                    nick: debouncedSearchTerm,\n                    email: debouncedSearchTerm\n                }\n            })\n                .then(response => {\n                    setUsers(response.data.items);\n                })\n                .catch(error => {\n                    ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                });\n        }\n    }, [debouncedSearchTerm]);\n\n    useEffect(() => {\n        API.post(\"/admin/policy/list\", {\n            page: 1,\n            page_size: 10000,\n            order_by: \"id asc\",\n            conditions: {}\n        })\n            .then(response => {\n                const res = {};\n                response.data.items.forEach(v => {\n                    res[v.ID] = v;\n                });\n                setPolicies(res);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const selectUser = u => {\n        setOptions({\n            ...options,\n            userInput: \"\"\n        });\n        setUser(u);\n    };\n\n    const setMoveTarget = setter => folder => {\n        const path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        setter(path == \"//\" ? \"/\" : path);\n    };\n\n    const openPathSelector = isSrcSelect => {\n        if (isSrcSelect) {\n            if (\n                !policies[options.policy] ||\n                policies[options.policy].Type === \"local\" ||\n                policies[options.policy].Type === \"remote\"\n            ) {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"选择的存储策略只支持手动输入路径\",\n                    \"warning\"\n                );\n                return;\n            }\n            setSelectRemote(true);\n        } else {\n            if (user === null) {\n                ToggleSnackbar(\"top\", \"right\", \"请先选择目标用户\", \"warning\");\n                return;\n            }\n            setSelectLocal(true);\n        }\n    };\n\n    return (\n        <div>\n            <Dialog\n                open={selectRemote}\n                onClose={() => setSelectRemote(false)}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">选择目录</DialogTitle>\n                <PathSelector\n                    presentPath=\"/\"\n                    api={\"/admin/file/folders/policy/\" + options.policy}\n                    selected={[]}\n                    onSelect={setMoveTarget(p =>\n                        setOptions({\n                            ...options,\n                            src: p\n                        })\n                    )}\n                />\n\n                <DialogActions>\n                    <Button\n                        onClick={() => setSelectRemote(false)}\n                        color=\"primary\"\n                    >\n                        确定\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <Dialog\n                open={selectLocal}\n                onClose={() => setSelectLocal(false)}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">选择目录</DialogTitle>\n                <PathSelector\n                    presentPath=\"/\"\n                    api={\n                        \"/admin/file/folders/user/\" +\n                        (user === null ? 0 : user.ID)\n                    }\n                    selected={[]}\n                    onSelect={setMoveTarget(p =>\n                        setOptions({\n                            ...options,\n                            dst: p\n                        })\n                    )}\n                />\n\n                <DialogActions>\n                    <Button\n                        onClick={() => setSelectLocal(false)}\n                        color=\"primary\"\n                    >\n                        确定\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        导入外部目录\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <Alert severity=\"info\">\n                                您可以将存储策略中已有文件、目录结构导入到\n                                Cloudreve\n                                中，导入操作不会额外占用物理存储空间，但仍会正常扣除用户已用容量空间，空间不足时将停止导入。\n                            </Alert>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    存储策略\n                                </InputLabel>\n                                <Select\n                                    labelId=\"demo-mutiple-chip-label\"\n                                    id=\"demo-mutiple-chip\"\n                                    value={options.policy}\n                                    onChange={handleChange(\"policy\")}\n                                    input={<Input id=\"select-multiple-chip\" />}\n                                >\n                                    {Object.keys(policies).map(pid => (\n                                        <MenuItem key={pid} value={pid}>\n                                            {policies[pid].Name}\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    选择要导入文件目前存储所在的存储策略\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    目标用户\n                                </InputLabel>\n                                <Input\n                                    value={options.userInput}\n                                    onChange={e => {\n                                        handleChange(\"userInput\")(e);\n                                        setAnchorEl(e.currentTarget);\n                                    }}\n                                    startAdornment={\n                                        user !== null && (\n                                            <InputAdornment position=\"start\">\n                                                <Chip\n                                                    size=\"small\"\n                                                    onDelete={() => {\n                                                        setUser(null);\n                                                    }}\n                                                    label={user.Nick}\n                                                />\n                                            </InputAdornment>\n                                        )\n                                    }\n                                    disabled={user !== null}\n                                />\n                                <Popper\n                                    open={\n                                        options.userInput !== \"\" &&\n                                        users.length > 0\n                                    }\n                                    anchorEl={anchorEl}\n                                    placement={\"bottom\"}\n                                    transition\n                                >\n                                    {({ TransitionProps }) => (\n                                        <Fade\n                                            {...TransitionProps}\n                                            timeout={350}\n                                        >\n                                            <Paper\n                                                className={classes.userSelect}\n                                            >\n                                                {users.map(u => (\n                                                    <MenuItem\n                                                        key={u.ID}\n                                                        onClick={() =>\n                                                            selectUser(u)\n                                                        }\n                                                    >\n                                                        {u.Nick}{\" \"}\n                                                        {\"<\" + u.Email + \">\"}\n                                                    </MenuItem>\n                                                ))}\n                                            </Paper>\n                                        </Fade>\n                                    )}\n                                </Popper>\n                                <FormHelperText id=\"component-helper-text\">\n                                    选择要将文件导入到哪个用户的文件系统中，可通过昵称、邮箱搜索用户\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    原始目录路径\n                                </InputLabel>\n\n                                <Input\n                                    value={options.src}\n                                    onChange={e => {\n                                        handleChange(\"src\")(e);\n                                        setAnchorEl(e.currentTarget);\n                                    }}\n                                    required\n                                    endAdornment={\n                                        <Button\n                                            onClick={() =>\n                                                openPathSelector(true)\n                                            }\n                                        >\n                                            选择\n                                        </Button>\n                                    }\n                                />\n\n                                <FormHelperText id=\"component-helper-text\">\n                                    要导入的目录在存储端的路径\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    目的目录路径\n                                </InputLabel>\n\n                                <Input\n                                    value={options.dst}\n                                    onChange={e => {\n                                        handleChange(\"dst\")(e);\n                                        setAnchorEl(e.currentTarget);\n                                    }}\n                                    required\n                                    endAdornment={\n                                        <Button\n                                            onClick={() =>\n                                                openPathSelector(false)\n                                            }\n                                        >\n                                            选择\n                                        </Button>\n                                    }\n                                />\n\n                                <FormHelperText id=\"component-helper-text\">\n                                    要将目录导入到用户文件系统中的路径\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={options.recursive}\n                                            onChange={handleCheckChange(\n                                                \"recursive\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"递归导入子目录\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    是否将目录下的所有子目录递归导入\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        创建导入任务\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { lighten } from \"@material-ui/core\";\nimport Link from \"@material-ui/core/Link\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport { reportReasons } from \"../../../config\";\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\nimport { Delete } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    content: {\n        padding: theme.spacing(2)\n    },\n    container: {\n        overflowX: \"auto\"\n    },\n    tableContainer: {\n        marginTop: 16\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n    },\n    headerRight: {},\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark\n              },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1\n    }\n}));\n\nexport default function ReportList() {\n    const classes = useStyles();\n    const [reports, setReports] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [users, setUsers] = useState({});\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\n    const [selected, setSelected] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [ids, setIds] = useState({});\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadList = () => {\n        API.post(\"/admin/report/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: orderBy.join(\" \")\n        })\n            .then(response => {\n                setUsers(response.data.users);\n                setReports(response.data.items);\n                setTotal(response.data.total);\n                setIds(response.data.ids);\n                setSelected([]);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize, orderBy]);\n\n    const deleteReport = id => {\n        setLoading(true);\n        API.post(\"/admin/report/delete\", { id: [id] })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"标记成功\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const deleteShare = id => {\n        setLoading(true);\n        API.post(\"/admin/share/delete\", { id: [id] })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"分享已删除\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const deleteBatch = () => {\n        setLoading(true);\n        API.post(\"/admin/report/delete\", { id: selected })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"标记成功\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const handleSelectAllClick = event => {\n        if (event.target.checked) {\n            const newSelecteds = reports.map(n => n.ID);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const isSelected = id => selected.indexOf(id) !== -1;\n\n    return (\n        <div>\n            <div className={classes.header}>\n                <div className={classes.headerRight}>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                {selected.length > 0 && (\n                    <Toolbar className={classes.highlight}>\n                        <Typography\n                            style={{ flex: \"1 1 100%\" }}\n                            color=\"inherit\"\n                            variant=\"subtitle1\"\n                        >\n                            已选择 {selected.length} 个对象\n                        </Typography>\n                        <Tooltip title=\"标记为已处理\">\n                            <IconButton\n                                onClick={deleteBatch}\n                                disabled={loading}\n                                aria-label=\"delete\"\n                            >\n                                <CheckCircleOutlineIcon />\n                            </IconButton>\n                        </Tooltip>\n                    </Toolbar>\n                )}\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                <TableCell padding=\"checkbox\">\n                                    <Checkbox\n                                        indeterminate={\n                                            selected.length > 0 &&\n                                            selected.length < reports.length\n                                        }\n                                        checked={\n                                            reports.length > 0 &&\n                                            selected.length === reports.length\n                                        }\n                                        onChange={handleSelectAllClick}\n                                        inputProps={{\n                                            \"aria-label\": \"select all desserts\"\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell style={{ minWidth: 10 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"id\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"id\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        #\n                                        {orderBy[0] === \"id\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 130 }}>\n                                    举报对象\n                                </TableCell>\n                                <TableCell style={{ minWidth: 90 }}>\n                                    类型\n                                </TableCell>\n                                <TableCell style={{ minWidth: 90 }}>\n                                    原因\n                                </TableCell>\n                                <TableCell style={{ minWidth: 150 }}>\n                                    补充描述\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }}>\n                                    分享者\n                                </TableCell>\n                                <TableCell style={{ minWidth: 150 }}>\n                                    举报时间\n                                </TableCell>\n                                <TableCell style={{ minWidth: 80 }}>\n                                    操作\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {reports.map(row => (\n                                <TableRow\n                                    hover\n                                    key={row.ID}\n                                    role=\"checkbox\"\n                                    selected={isSelected(row.ID)}\n                                >\n                                    <TableCell padding=\"checkbox\">\n                                        <Checkbox\n                                            onClick={event =>\n                                                handleClick(event, row.ID)\n                                            }\n                                            checked={isSelected(row.ID)}\n                                        />\n                                    </TableCell>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell\n                                        style={{ wordBreak: \"break-all\" }}\n                                    >\n                                        {row.Share.ID === 0 && \"[已失效]\"}\n                                        {row.Share.ID > 0 && (\n                                            <Link\n                                                target={\"_blank\"}\n                                                color=\"inherit\"\n                                                href={\n                                                    \"/#/s/\" +\n                                                    ids[row.Share.ID] +\n                                                    (row.Share.Password === \"\"\n                                                        ? \"\"\n                                                        : \"?password=\" +\n                                                          row.Share.Password)\n                                                }\n                                            >\n                                                {row.Share.SourceName}\n                                            </Link>\n                                        )}\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.Share.ID > 0 &&\n                                            (row.Share.IsDir ? \"目录\" : \"文件\")}\n                                    </TableCell>\n                                    <TableCell>\n                                        {reportReasons[row.Reason]}\n                                    </TableCell>\n                                    <TableCell\n                                        style={{ wordBreak: \"break-all\" }}\n                                    >\n                                        {row.Description}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Link\n                                            href={\n                                                \"/#/admin/user/edit/\" +\n                                                row.Share.UserID\n                                            }\n                                        >\n                                            {users[row.Share.UserID]\n                                                ? users[row.Share.UserID].Nick\n                                                : \"未知\"}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {new Date(\n                                            row.CreatedAt\n                                        ).toLocaleDateString() +\n                                            \" \" +\n                                            new Date(\n                                                row.CreatedAt\n                                            ).toLocaleTimeString()}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Tooltip title={\"标记为已处理\"}>\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    deleteReport(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <CheckCircleOutlineIcon />\n                                            </IconButton>\n                                        </Tooltip>\n                                        {row.Share.ID > 0 && (\n                                            <Tooltip title={\"删除分享\"}>\n                                                <IconButton\n                                                    disabled={loading}\n                                                    onClick={() =>\n                                                        deleteShare(row.Share.ID)\n                                                    }\n                                                    size={\"small\"}\n                                                >\n                                                    <Delete />\n                                                </IconButton>\n                                            </Tooltip>\n                                        )}\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 50, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={e => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { CssBaseline, makeStyles } from \"@material-ui/core\";\nimport AlertBar from \"./component/Common/Snackbar\";\nimport Dashboard from \"./component/Admin/Dashboard\";\nimport { useHistory } from \"react-router\";\nimport Auth from \"./middleware/Auth\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport { zhCN } from \"@material-ui/core/locale\";\n\nimport Index from \"./component/Admin/Index\";\nimport SiteInformation from \"./component/Admin/Setting/SiteInformation\";\nimport Access from \"./component/Admin/Setting/Access\";\nimport Mail from \"./component/Admin/Setting/Mail\";\nimport UploadDownload from \"./component/Admin/Setting/UploadDownload\";\nimport VAS from \"./component/Admin/Setting/VAS\";\nimport Theme from \"./component/Admin/Setting/Theme\";\nimport Aria2 from \"./component/Admin/Setting/Aria2\";\nimport ImageSetting from \"./component/Admin/Setting/Image\";\nimport Policy from \"./component/Admin/Policy/Policy\";\nimport AddPolicy from \"./component/Admin/Policy/AddPolicy\";\nimport EditPolicyPreload from \"./component/Admin/Policy/EditPolicy\";\nimport Group from \"./component/Admin/Group/Group\";\nimport GroupForm from \"./component/Admin/Group/GroupForm\";\nimport EditGroupPreload from \"./component/Admin/Group/EditGroup\";\nimport User from \"./component/Admin/User/User\";\nimport UserForm from \"./component/Admin/User/UserForm\";\nimport EditUserPreload from \"./component/Admin/User/EditUser\";\nimport File from \"./component/Admin/File/File\";\nimport Share from \"./component/Admin/Share/Share\";\nimport Order from \"./component/Admin/Order/Order\";\nimport Download from \"./component/Admin/Task/Download\";\nimport Task from \"./component/Admin/Task/Task\";\nimport Import from \"./component/Admin/File/Import\";\nimport ReportList from \"./component/Admin/Report/ReportList\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: \"flex\"\n    },\n    content: {\n        flexGrow: 1,\n        padding: 0,\n        minWidth: 0\n    },\n    toolbar: theme.mixins.toolbar\n}));\n\nconst theme = createMuiTheme(\n    {\n        palette: {\n            background: {}\n        }\n    },\n    zhCN\n);\n\nexport default function Admin() {\n    const classes = useStyles();\n    const history = useHistory();\n    const [show, setShow] = useState(false);\n\n    useEffect(() => {\n        const user = Auth.GetUser();\n        if (user && user.group) {\n            if (user.group.id !== 1) {\n                history.push(\"/home\");\n                return;\n            }\n            setShow(true);\n            return;\n        }\n        history.push(\"/login\");\n        // eslint-disable-next-line\n    }, []);\n\n    return (\n        <React.Fragment>\n            <ThemeProvider theme={theme}>\n                <div className={classes.root}>\n                    <CssBaseline />\n                    <AlertBar />\n                    {show && (\n                        <Dashboard\n                            content={path => (\n                                <Switch>\n                                    <Route path={`${path}/home`} exact>\n                                        <Index />\n                                    </Route>\n\n                                    <Route path={`${path}/basic`}>\n                                        <SiteInformation />\n                                    </Route>\n\n                                    <Route path={`${path}/access`}>\n                                        <Access />\n                                    </Route>\n\n                                    <Route path={`${path}/mail`}>\n                                        <Mail />\n                                    </Route>\n\n                                    <Route path={`${path}/upload`}>\n                                        <UploadDownload />\n                                    </Route>\n\n                                    <Route path={`${path}/vas`}>\n                                        <VAS />\n                                    </Route>\n\n                                    <Route path={`${path}/theme`}>\n                                        <Theme />\n                                    </Route>\n\n                                    <Route path={`${path}/aria2`}>\n                                        <Aria2 />\n                                    </Route>\n\n                                    <Route path={`${path}/image`}>\n                                        <ImageSetting />\n                                    </Route>\n\n                                    <Route path={`${path}/policy`} exact>\n                                        <Policy />\n                                    </Route>\n\n                                    <Route\n                                        path={`${path}/policy/add/:type`}\n                                        exact\n                                    >\n                                        <AddPolicy />\n                                    </Route>\n\n                                    <Route\n                                        path={`${path}/policy/edit/:mode/:id`}\n                                        exact\n                                    >\n                                        <EditPolicyPreload />\n                                    </Route>\n\n                                    <Route path={`${path}/group`} exact>\n                                        <Group />\n                                    </Route>\n\n                                    <Route path={`${path}/group/add`} exact>\n                                        <GroupForm />\n                                    </Route>\n\n                                    <Route\n                                        path={`${path}/group/edit/:id`}\n                                        exact\n                                    >\n                                        <EditGroupPreload />\n                                    </Route>\n\n                                    <Route path={`${path}/user`} exact>\n                                        <User />\n                                    </Route>\n\n                                    <Route path={`${path}/user/add`} exact>\n                                        <UserForm />\n                                    </Route>\n\n                                    <Route path={`${path}/user/edit/:id`} exact>\n                                        <EditUserPreload />\n                                    </Route>\n\n                                    <Route path={`${path}/file`} exact>\n                                        <File />\n                                    </Route>\n\n                                    <Route path={`${path}/file/import`} exact>\n                                        <Import />\n                                    </Route>\n\n                                    <Route path={`${path}/share`} exact>\n                                        <Share />\n                                    </Route>\n\n                                    <Route path={`${path}/order`} exact>\n                                        <Order />\n                                    </Route>\n\n                                    <Route path={`${path}/download`} exact>\n                                        <Download />\n                                    </Route>\n\n                                    <Route path={`${path}/task`} exact>\n                                        <Task />\n                                    </Route>\n\n                                    <Route path={`${path}/report`} exact>\n                                        <ReportList />\n                                    </Route>\n                                </Switch>\n                            )}\n                        />\n                    )}\n                </div>\n            </ThemeProvider>\n        </React.Fragment>\n    );\n}\n"],"sourceRoot":""}